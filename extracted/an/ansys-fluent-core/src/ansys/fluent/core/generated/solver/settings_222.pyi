#
# This is an auto-generated file.  DO NOT EDIT!
#

from ansys.fluent.core.solver.flobject import *

from ansys.fluent.core.solver.flobject import (
    _ChildNamedObjectAccessorMixin,
    _NonCreatableNamedObjectMixin,
    _InputFile,
    _OutputFile,
    _InOutFile,
)

from typing import Any

class file(Group):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def read(self, file_type: str, file_name: str):
        """
        'read' command.
        """
    def replace_mesh(self, file_name: str):
        """
        'replace_mesh' command.
        """
    def write(self, file_type: str, file_name: str):
        """
        'write' command.
        """
    def parametric_project(self):
        """
        'parametric_project' child.
        """
    return_type: str
class type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class two_dim_space(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class velocity_formulation(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class time(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solver(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    type: type
    two_dim_space: two_dim_space
    velocity_formulation: velocity_formulation
    time: time
    return_type: str
class adjust_solver_defaults_based_on_setup(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class gravity_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class components(RealVector):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class gravity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    gravity: gravity_1
    components: components
    return_type: str
class general(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    solver: solver
    adjust_solver_defaults_based_on_setup: adjust_solver_defaults_based_on_setup
    gravity: gravity
    return_type: str
class enabled(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class viscous_dissipation(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pressure_work(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class kinetic_energy(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class inlet_diffusion(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class energy(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enabled: enabled
    viscous_dissipation: viscous_dissipation
    pressure_work: pressure_work
    kinetic_energy: kinetic_energy
    inlet_diffusion: inlet_diffusion
    return_type: str
class models_1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vaporization_pressure(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class non_condensable_gas(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class liquid_surface_tension(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class bubble_number_density(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class number_of_phases(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class number_of_eulerian_discrete_phases(IntegerList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class multiphase(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    models: models_1
    vaporization_pressure: vaporization_pressure
    non_condensable_gas: non_condensable_gas
    liquid_surface_tension: liquid_surface_tension
    bubble_number_density: bubble_number_density
    number_of_phases: number_of_phases
    number_of_eulerian_discrete_phases: number_of_eulerian_discrete_phases
    return_type: str
class model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class viscous_heating(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class low_pressure_slip(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class curvature_correction(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class corner_flow_correction(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class production_kato_launder(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class production_limiter(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    viscous_heating: viscous_heating
    low_pressure_slip: low_pressure_slip
    curvature_correction: curvature_correction
    corner_flow_correction: corner_flow_correction
    production_kato_launder: production_kato_launder
    production_limiter: production_limiter
    return_type: str
class spalart_allmaras_production(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class k_epsilon_model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class k_omega_model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class kw_low_re_correction(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class kw_shear_correction(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class turb_compressibility(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class k_omega_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    kw_low_re_correction: kw_low_re_correction
    kw_shear_correction: kw_shear_correction
    turb_compressibility: turb_compressibility
    return_type: str
class differential_viscosity_model(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class swirl_dominated_flow(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rng_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    differential_viscosity_model: differential_viscosity_model
    swirl_dominated_flow: swirl_dominated_flow
    return_type: str
class near_wall_treatment(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class roughness_correlation(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class transition_sst_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    roughness_correlation: roughness_correlation
    return_type: str
class reynolds_stress_model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class subgrid_scale_model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dynamic_stress(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dynamic_energy_flux(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dynamic_scalar_flux(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class subgrid_dynamic_fvar(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class les_model_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    dynamic_stress: dynamic_stress
    dynamic_energy_flux: dynamic_energy_flux
    dynamic_scalar_flux: dynamic_scalar_flux
    subgrid_dynamic_fvar: subgrid_dynamic_fvar
    return_type: str
class solve_tke(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wall_echo(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class reynolds_stress_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    solve_tke: solve_tke
    wall_echo: wall_echo
    return_type: str
class pressure_gradient_effects(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class thermal_effects(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class enhanced_wall_treatment_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    pressure_gradient_effects: pressure_gradient_effects
    thermal_effects: thermal_effects
    return_type: str
class rans_model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class viscous(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    model: model
    options: options
    spalart_allmaras_production: spalart_allmaras_production
    k_epsilon_model: k_epsilon_model
    k_omega_model: k_omega_model
    k_omega_options: k_omega_options
    rng_options: rng_options
    near_wall_treatment: near_wall_treatment
    transition_sst_options: transition_sst_options
    reynolds_stress_model: reynolds_stress_model
    subgrid_scale_model: subgrid_scale_model
    les_model_options: les_model_options
    reynolds_stress_options: reynolds_stress_options
    enhanced_wall_treatment_options: enhanced_wall_treatment_options
    rans_model: rans_model
    return_type: str
class models(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    energy: energy
    multiphase: multiphase
    viscous: viscous
    return_type: str
class option(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class constant(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class boussinesq(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coefficients(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class number_of_coefficients(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class minimum(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class maximum(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class number_of_coeff(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class piecewise_polynomial_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    minimum: minimum
    maximum: maximum
    number_of_coeff: number_of_coeff
    coefficients: coefficients
    return_type: str
class piecewise_polynomial(ListObject[piecewise_polynomial_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: piecewise_polynomial_child
    return_type: str
class nasa_9_piecewise_polynomial_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    minimum: minimum
    maximum: maximum
    number_of_coeff: number_of_coeff
    coefficients: coefficients
    return_type: str
class nasa_9_piecewise_polynomial(ListObject[nasa_9_piecewise_polynomial_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: nasa_9_piecewise_polynomial_child
    return_type: str
class piecewise_linear_child(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class piecewise_linear(ListObject[piecewise_linear_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: piecewise_linear_child
    return_type: str
class matrix_component(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class conductivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_linear: piecewise_linear
    piecewise_polynomial: piecewise_polynomial
    return_type: str
class anisotropic(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    matrix_component: matrix_component
    conductivity: conductivity
    return_type: str
class direction_0(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class direction_1(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class conductivity_0(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_linear: piecewise_linear
    piecewise_polynomial: piecewise_polynomial
    return_type: str
class conductivity_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_linear: piecewise_linear
    piecewise_polynomial: piecewise_polynomial
    return_type: str
class conductivity_2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_linear: piecewise_linear
    piecewise_polynomial: piecewise_polynomial
    return_type: str
class orthotropic(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    direction_0: direction_0
    direction_1: direction_1
    conductivity_0: conductivity_0
    conductivity_1: conductivity_1
    conductivity_2: conductivity_2
    return_type: str
class var_class(String):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class species(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class reactions(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class reaction_mechs(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class density(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class specific_heat(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class thermal_conductivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class viscosity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class molecular_weight(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class mass_diffusivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class thermal_diffusivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class formation_enthalpy(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class formation_entropy(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class characteristic_vibrational_temperature(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class reference_temperature(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class lennard_jones_length(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class lennard_jones_energy(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class thermal_accom_coefficient(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class velocity_accom_coefficient(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class absorption_coefficient(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class scattering_coefficient(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class scattering_phase_function(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class therm_exp_coeff(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class premix_unburnt_density(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class premix_unburnt_temp(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class premix_adiabatic_temp(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class premix_unburnt_cp(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class premix_heat_trans_coeff(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class premix_laminar_speed(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class premix_laminar_thickness(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class premix_critical_strain(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class premix_heat_of_comb(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class premix_unburnt_fuel_mf(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class refractive_index(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class latent_heat(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class thermophoretic_co(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class vaporization_temperature(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class boiling_point(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class volatile_fraction(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class binary_diffusivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class diffusivity_reference_pressure(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class vapor_pressure(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class degrees_of_freedom(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class emissivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class scattering_factor(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class heat_of_pyrolysis(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class swelling_coefficient(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class burn_stoichiometry(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class combustible_fraction(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class burn_hreact(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class burn_hreact_fraction(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class devolatilization_model(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class combustion_model(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class averaging_coefficient_t(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class averaging_coefficient_y(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class vaporization_model(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class thermolysis_model(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class melting_heat(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class tsolidus(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class tliqidus(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class tmelt(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class liquidus_slope(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class partition_coeff(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class eutectic_mf(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class eutectic_temp(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class solut_exp_coeff(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class solid_diffusion(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class uds_diffusivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class dpm_surften(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class electric_conductivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class dual_electric_conductivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class lithium_diffusivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class magnetic_permeability(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class charge_density(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class charge(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class speed_of_sound(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class species_phase(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class vp_equilib(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class critical_temperature(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class critical_pressure(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class critical_volume(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class acentric_factor(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class saturation_pressure(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class struct_youngs_modulus(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class struct_poisson_ratio(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class struct_start_temperature(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class struct_thermal_expansion(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class atomic_number(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class struct_damping_alpha(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class struct_damping_beta(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    boussinesq: boussinesq
    coefficients: coefficients
    number_of_coefficients: number_of_coefficients
    piecewise_polynomial: piecewise_polynomial
    nasa_9_piecewise_polynomial: nasa_9_piecewise_polynomial
    piecewise_linear: piecewise_linear
    anisotropic: anisotropic
    orthotropic: orthotropic
    var_class: var_class
    return_type: str
class fluid_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    species: species
    reactions: reactions
    reaction_mechs: reaction_mechs
    density: density
    specific_heat: specific_heat
    thermal_conductivity: thermal_conductivity
    viscosity: viscosity
    molecular_weight: molecular_weight
    mass_diffusivity: mass_diffusivity
    thermal_diffusivity: thermal_diffusivity
    formation_enthalpy: formation_enthalpy
    formation_entropy: formation_entropy
    characteristic_vibrational_temperature: characteristic_vibrational_temperature
    reference_temperature: reference_temperature
    lennard_jones_length: lennard_jones_length
    lennard_jones_energy: lennard_jones_energy
    thermal_accom_coefficient: thermal_accom_coefficient
    velocity_accom_coefficient: velocity_accom_coefficient
    absorption_coefficient: absorption_coefficient
    scattering_coefficient: scattering_coefficient
    scattering_phase_function: scattering_phase_function
    therm_exp_coeff: therm_exp_coeff
    premix_unburnt_density: premix_unburnt_density
    premix_unburnt_temp: premix_unburnt_temp
    premix_adiabatic_temp: premix_adiabatic_temp
    premix_unburnt_cp: premix_unburnt_cp
    premix_heat_trans_coeff: premix_heat_trans_coeff
    premix_laminar_speed: premix_laminar_speed
    premix_laminar_thickness: premix_laminar_thickness
    premix_critical_strain: premix_critical_strain
    premix_heat_of_comb: premix_heat_of_comb
    premix_unburnt_fuel_mf: premix_unburnt_fuel_mf
    refractive_index: refractive_index
    latent_heat: latent_heat
    thermophoretic_co: thermophoretic_co
    vaporization_temperature: vaporization_temperature
    boiling_point: boiling_point
    volatile_fraction: volatile_fraction
    binary_diffusivity: binary_diffusivity
    diffusivity_reference_pressure: diffusivity_reference_pressure
    vapor_pressure: vapor_pressure
    degrees_of_freedom: degrees_of_freedom
    emissivity: emissivity
    scattering_factor: scattering_factor
    heat_of_pyrolysis: heat_of_pyrolysis
    swelling_coefficient: swelling_coefficient
    burn_stoichiometry: burn_stoichiometry
    combustible_fraction: combustible_fraction
    burn_hreact: burn_hreact
    burn_hreact_fraction: burn_hreact_fraction
    devolatilization_model: devolatilization_model
    combustion_model: combustion_model
    averaging_coefficient_t: averaging_coefficient_t
    averaging_coefficient_y: averaging_coefficient_y
    vaporization_model: vaporization_model
    thermolysis_model: thermolysis_model
    melting_heat: melting_heat
    tsolidus: tsolidus
    tliqidus: tliqidus
    tmelt: tmelt
    liquidus_slope: liquidus_slope
    partition_coeff: partition_coeff
    eutectic_mf: eutectic_mf
    eutectic_temp: eutectic_temp
    solut_exp_coeff: solut_exp_coeff
    solid_diffusion: solid_diffusion
    uds_diffusivity: uds_diffusivity
    dpm_surften: dpm_surften
    electric_conductivity: electric_conductivity
    dual_electric_conductivity: dual_electric_conductivity
    lithium_diffusivity: lithium_diffusivity
    magnetic_permeability: magnetic_permeability
    charge_density: charge_density
    charge: charge
    speed_of_sound: speed_of_sound
    species_phase: species_phase
    vp_equilib: vp_equilib
    critical_temperature: critical_temperature
    critical_pressure: critical_pressure
    critical_volume: critical_volume
    acentric_factor: acentric_factor
    saturation_pressure: saturation_pressure
    struct_youngs_modulus: struct_youngs_modulus
    struct_poisson_ratio: struct_poisson_ratio
    struct_start_temperature: struct_start_temperature
    struct_thermal_expansion: struct_thermal_expansion
    atomic_number: atomic_number
    struct_damping_alpha: struct_damping_alpha
    struct_damping_beta: struct_damping_beta
    return_type: str
class fluid(NamedObject[fluid_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: fluid_child
    return_type: str
class solid_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    species: species
    reactions: reactions
    reaction_mechs: reaction_mechs
    density: density
    specific_heat: specific_heat
    thermal_conductivity: thermal_conductivity
    viscosity: viscosity
    molecular_weight: molecular_weight
    mass_diffusivity: mass_diffusivity
    thermal_diffusivity: thermal_diffusivity
    formation_enthalpy: formation_enthalpy
    formation_entropy: formation_entropy
    characteristic_vibrational_temperature: characteristic_vibrational_temperature
    reference_temperature: reference_temperature
    lennard_jones_length: lennard_jones_length
    lennard_jones_energy: lennard_jones_energy
    thermal_accom_coefficient: thermal_accom_coefficient
    velocity_accom_coefficient: velocity_accom_coefficient
    absorption_coefficient: absorption_coefficient
    scattering_coefficient: scattering_coefficient
    scattering_phase_function: scattering_phase_function
    therm_exp_coeff: therm_exp_coeff
    premix_unburnt_density: premix_unburnt_density
    premix_unburnt_temp: premix_unburnt_temp
    premix_adiabatic_temp: premix_adiabatic_temp
    premix_unburnt_cp: premix_unburnt_cp
    premix_heat_trans_coeff: premix_heat_trans_coeff
    premix_laminar_speed: premix_laminar_speed
    premix_laminar_thickness: premix_laminar_thickness
    premix_critical_strain: premix_critical_strain
    premix_heat_of_comb: premix_heat_of_comb
    premix_unburnt_fuel_mf: premix_unburnt_fuel_mf
    refractive_index: refractive_index
    latent_heat: latent_heat
    thermophoretic_co: thermophoretic_co
    vaporization_temperature: vaporization_temperature
    boiling_point: boiling_point
    volatile_fraction: volatile_fraction
    binary_diffusivity: binary_diffusivity
    diffusivity_reference_pressure: diffusivity_reference_pressure
    vapor_pressure: vapor_pressure
    degrees_of_freedom: degrees_of_freedom
    emissivity: emissivity
    scattering_factor: scattering_factor
    heat_of_pyrolysis: heat_of_pyrolysis
    swelling_coefficient: swelling_coefficient
    burn_stoichiometry: burn_stoichiometry
    combustible_fraction: combustible_fraction
    burn_hreact: burn_hreact
    burn_hreact_fraction: burn_hreact_fraction
    devolatilization_model: devolatilization_model
    combustion_model: combustion_model
    averaging_coefficient_t: averaging_coefficient_t
    averaging_coefficient_y: averaging_coefficient_y
    vaporization_model: vaporization_model
    thermolysis_model: thermolysis_model
    melting_heat: melting_heat
    tsolidus: tsolidus
    tliqidus: tliqidus
    tmelt: tmelt
    liquidus_slope: liquidus_slope
    partition_coeff: partition_coeff
    eutectic_mf: eutectic_mf
    eutectic_temp: eutectic_temp
    solut_exp_coeff: solut_exp_coeff
    solid_diffusion: solid_diffusion
    uds_diffusivity: uds_diffusivity
    dpm_surften: dpm_surften
    electric_conductivity: electric_conductivity
    dual_electric_conductivity: dual_electric_conductivity
    lithium_diffusivity: lithium_diffusivity
    magnetic_permeability: magnetic_permeability
    charge_density: charge_density
    charge: charge
    speed_of_sound: speed_of_sound
    species_phase: species_phase
    vp_equilib: vp_equilib
    critical_temperature: critical_temperature
    critical_pressure: critical_pressure
    critical_volume: critical_volume
    acentric_factor: acentric_factor
    saturation_pressure: saturation_pressure
    struct_youngs_modulus: struct_youngs_modulus
    struct_poisson_ratio: struct_poisson_ratio
    struct_start_temperature: struct_start_temperature
    struct_thermal_expansion: struct_thermal_expansion
    atomic_number: atomic_number
    struct_damping_alpha: struct_damping_alpha
    struct_damping_beta: struct_damping_beta
    return_type: str
class solid(NamedObject[solid_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: solid_child
    return_type: str
class mixture_species_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    species: species
    reactions: reactions
    reaction_mechs: reaction_mechs
    density: density
    specific_heat: specific_heat
    thermal_conductivity: thermal_conductivity
    viscosity: viscosity
    molecular_weight: molecular_weight
    mass_diffusivity: mass_diffusivity
    thermal_diffusivity: thermal_diffusivity
    formation_enthalpy: formation_enthalpy
    formation_entropy: formation_entropy
    characteristic_vibrational_temperature: characteristic_vibrational_temperature
    reference_temperature: reference_temperature
    lennard_jones_length: lennard_jones_length
    lennard_jones_energy: lennard_jones_energy
    thermal_accom_coefficient: thermal_accom_coefficient
    velocity_accom_coefficient: velocity_accom_coefficient
    absorption_coefficient: absorption_coefficient
    scattering_coefficient: scattering_coefficient
    scattering_phase_function: scattering_phase_function
    therm_exp_coeff: therm_exp_coeff
    premix_unburnt_density: premix_unburnt_density
    premix_unburnt_temp: premix_unburnt_temp
    premix_adiabatic_temp: premix_adiabatic_temp
    premix_unburnt_cp: premix_unburnt_cp
    premix_heat_trans_coeff: premix_heat_trans_coeff
    premix_laminar_speed: premix_laminar_speed
    premix_laminar_thickness: premix_laminar_thickness
    premix_critical_strain: premix_critical_strain
    premix_heat_of_comb: premix_heat_of_comb
    premix_unburnt_fuel_mf: premix_unburnt_fuel_mf
    refractive_index: refractive_index
    latent_heat: latent_heat
    thermophoretic_co: thermophoretic_co
    vaporization_temperature: vaporization_temperature
    boiling_point: boiling_point
    volatile_fraction: volatile_fraction
    binary_diffusivity: binary_diffusivity
    diffusivity_reference_pressure: diffusivity_reference_pressure
    vapor_pressure: vapor_pressure
    degrees_of_freedom: degrees_of_freedom
    emissivity: emissivity
    scattering_factor: scattering_factor
    heat_of_pyrolysis: heat_of_pyrolysis
    swelling_coefficient: swelling_coefficient
    burn_stoichiometry: burn_stoichiometry
    combustible_fraction: combustible_fraction
    burn_hreact: burn_hreact
    burn_hreact_fraction: burn_hreact_fraction
    devolatilization_model: devolatilization_model
    combustion_model: combustion_model
    averaging_coefficient_t: averaging_coefficient_t
    averaging_coefficient_y: averaging_coefficient_y
    vaporization_model: vaporization_model
    thermolysis_model: thermolysis_model
    melting_heat: melting_heat
    tsolidus: tsolidus
    tliqidus: tliqidus
    tmelt: tmelt
    liquidus_slope: liquidus_slope
    partition_coeff: partition_coeff
    eutectic_mf: eutectic_mf
    eutectic_temp: eutectic_temp
    solut_exp_coeff: solut_exp_coeff
    solid_diffusion: solid_diffusion
    uds_diffusivity: uds_diffusivity
    dpm_surften: dpm_surften
    electric_conductivity: electric_conductivity
    dual_electric_conductivity: dual_electric_conductivity
    lithium_diffusivity: lithium_diffusivity
    magnetic_permeability: magnetic_permeability
    charge_density: charge_density
    charge: charge
    speed_of_sound: speed_of_sound
    species_phase: species_phase
    vp_equilib: vp_equilib
    critical_temperature: critical_temperature
    critical_pressure: critical_pressure
    critical_volume: critical_volume
    acentric_factor: acentric_factor
    saturation_pressure: saturation_pressure
    struct_youngs_modulus: struct_youngs_modulus
    struct_poisson_ratio: struct_poisson_ratio
    struct_start_temperature: struct_start_temperature
    struct_thermal_expansion: struct_thermal_expansion
    atomic_number: atomic_number
    struct_damping_alpha: struct_damping_alpha
    struct_damping_beta: struct_damping_beta
    return_type: str
class mixture_species(NamedObject[mixture_species_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: mixture_species_child
    return_type: str
class mixture_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    species: species
    reactions: reactions
    reaction_mechs: reaction_mechs
    density: density
    specific_heat: specific_heat
    thermal_conductivity: thermal_conductivity
    viscosity: viscosity
    molecular_weight: molecular_weight
    mass_diffusivity: mass_diffusivity
    thermal_diffusivity: thermal_diffusivity
    formation_enthalpy: formation_enthalpy
    formation_entropy: formation_entropy
    characteristic_vibrational_temperature: characteristic_vibrational_temperature
    reference_temperature: reference_temperature
    lennard_jones_length: lennard_jones_length
    lennard_jones_energy: lennard_jones_energy
    thermal_accom_coefficient: thermal_accom_coefficient
    velocity_accom_coefficient: velocity_accom_coefficient
    absorption_coefficient: absorption_coefficient
    scattering_coefficient: scattering_coefficient
    scattering_phase_function: scattering_phase_function
    therm_exp_coeff: therm_exp_coeff
    premix_unburnt_density: premix_unburnt_density
    premix_unburnt_temp: premix_unburnt_temp
    premix_adiabatic_temp: premix_adiabatic_temp
    premix_unburnt_cp: premix_unburnt_cp
    premix_heat_trans_coeff: premix_heat_trans_coeff
    premix_laminar_speed: premix_laminar_speed
    premix_laminar_thickness: premix_laminar_thickness
    premix_critical_strain: premix_critical_strain
    premix_heat_of_comb: premix_heat_of_comb
    premix_unburnt_fuel_mf: premix_unburnt_fuel_mf
    refractive_index: refractive_index
    latent_heat: latent_heat
    thermophoretic_co: thermophoretic_co
    vaporization_temperature: vaporization_temperature
    boiling_point: boiling_point
    volatile_fraction: volatile_fraction
    binary_diffusivity: binary_diffusivity
    diffusivity_reference_pressure: diffusivity_reference_pressure
    vapor_pressure: vapor_pressure
    degrees_of_freedom: degrees_of_freedom
    emissivity: emissivity
    scattering_factor: scattering_factor
    heat_of_pyrolysis: heat_of_pyrolysis
    swelling_coefficient: swelling_coefficient
    burn_stoichiometry: burn_stoichiometry
    combustible_fraction: combustible_fraction
    burn_hreact: burn_hreact
    burn_hreact_fraction: burn_hreact_fraction
    devolatilization_model: devolatilization_model
    combustion_model: combustion_model
    averaging_coefficient_t: averaging_coefficient_t
    averaging_coefficient_y: averaging_coefficient_y
    vaporization_model: vaporization_model
    thermolysis_model: thermolysis_model
    melting_heat: melting_heat
    tsolidus: tsolidus
    tliqidus: tliqidus
    tmelt: tmelt
    liquidus_slope: liquidus_slope
    partition_coeff: partition_coeff
    eutectic_mf: eutectic_mf
    eutectic_temp: eutectic_temp
    solut_exp_coeff: solut_exp_coeff
    solid_diffusion: solid_diffusion
    uds_diffusivity: uds_diffusivity
    dpm_surften: dpm_surften
    electric_conductivity: electric_conductivity
    dual_electric_conductivity: dual_electric_conductivity
    lithium_diffusivity: lithium_diffusivity
    magnetic_permeability: magnetic_permeability
    charge_density: charge_density
    charge: charge
    speed_of_sound: speed_of_sound
    species_phase: species_phase
    vp_equilib: vp_equilib
    critical_temperature: critical_temperature
    critical_pressure: critical_pressure
    critical_volume: critical_volume
    acentric_factor: acentric_factor
    saturation_pressure: saturation_pressure
    struct_youngs_modulus: struct_youngs_modulus
    struct_poisson_ratio: struct_poisson_ratio
    struct_start_temperature: struct_start_temperature
    struct_thermal_expansion: struct_thermal_expansion
    atomic_number: atomic_number
    struct_damping_alpha: struct_damping_alpha
    struct_damping_beta: struct_damping_beta
    mixture_species: mixture_species
    return_type: str
class mixture(NamedObject[mixture_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: mixture_child
    return_type: str
class inert_particle_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    species: species
    reactions: reactions
    reaction_mechs: reaction_mechs
    density: density
    specific_heat: specific_heat
    thermal_conductivity: thermal_conductivity
    viscosity: viscosity
    molecular_weight: molecular_weight
    mass_diffusivity: mass_diffusivity
    thermal_diffusivity: thermal_diffusivity
    formation_enthalpy: formation_enthalpy
    formation_entropy: formation_entropy
    characteristic_vibrational_temperature: characteristic_vibrational_temperature
    reference_temperature: reference_temperature
    lennard_jones_length: lennard_jones_length
    lennard_jones_energy: lennard_jones_energy
    thermal_accom_coefficient: thermal_accom_coefficient
    velocity_accom_coefficient: velocity_accom_coefficient
    absorption_coefficient: absorption_coefficient
    scattering_coefficient: scattering_coefficient
    scattering_phase_function: scattering_phase_function
    therm_exp_coeff: therm_exp_coeff
    premix_unburnt_density: premix_unburnt_density
    premix_unburnt_temp: premix_unburnt_temp
    premix_adiabatic_temp: premix_adiabatic_temp
    premix_unburnt_cp: premix_unburnt_cp
    premix_heat_trans_coeff: premix_heat_trans_coeff
    premix_laminar_speed: premix_laminar_speed
    premix_laminar_thickness: premix_laminar_thickness
    premix_critical_strain: premix_critical_strain
    premix_heat_of_comb: premix_heat_of_comb
    premix_unburnt_fuel_mf: premix_unburnt_fuel_mf
    refractive_index: refractive_index
    latent_heat: latent_heat
    thermophoretic_co: thermophoretic_co
    vaporization_temperature: vaporization_temperature
    boiling_point: boiling_point
    volatile_fraction: volatile_fraction
    binary_diffusivity: binary_diffusivity
    diffusivity_reference_pressure: diffusivity_reference_pressure
    vapor_pressure: vapor_pressure
    degrees_of_freedom: degrees_of_freedom
    emissivity: emissivity
    scattering_factor: scattering_factor
    heat_of_pyrolysis: heat_of_pyrolysis
    swelling_coefficient: swelling_coefficient
    burn_stoichiometry: burn_stoichiometry
    combustible_fraction: combustible_fraction
    burn_hreact: burn_hreact
    burn_hreact_fraction: burn_hreact_fraction
    devolatilization_model: devolatilization_model
    combustion_model: combustion_model
    averaging_coefficient_t: averaging_coefficient_t
    averaging_coefficient_y: averaging_coefficient_y
    vaporization_model: vaporization_model
    thermolysis_model: thermolysis_model
    melting_heat: melting_heat
    tsolidus: tsolidus
    tliqidus: tliqidus
    tmelt: tmelt
    liquidus_slope: liquidus_slope
    partition_coeff: partition_coeff
    eutectic_mf: eutectic_mf
    eutectic_temp: eutectic_temp
    solut_exp_coeff: solut_exp_coeff
    solid_diffusion: solid_diffusion
    uds_diffusivity: uds_diffusivity
    dpm_surften: dpm_surften
    electric_conductivity: electric_conductivity
    dual_electric_conductivity: dual_electric_conductivity
    lithium_diffusivity: lithium_diffusivity
    magnetic_permeability: magnetic_permeability
    charge_density: charge_density
    charge: charge
    speed_of_sound: speed_of_sound
    species_phase: species_phase
    vp_equilib: vp_equilib
    critical_temperature: critical_temperature
    critical_pressure: critical_pressure
    critical_volume: critical_volume
    acentric_factor: acentric_factor
    saturation_pressure: saturation_pressure
    struct_youngs_modulus: struct_youngs_modulus
    struct_poisson_ratio: struct_poisson_ratio
    struct_start_temperature: struct_start_temperature
    struct_thermal_expansion: struct_thermal_expansion
    atomic_number: atomic_number
    struct_damping_alpha: struct_damping_alpha
    struct_damping_beta: struct_damping_beta
    return_type: str
class inert_particle(NamedObject[inert_particle_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: inert_particle_child
    return_type: str
class droplet_particle_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    species: species
    reactions: reactions
    reaction_mechs: reaction_mechs
    density: density
    specific_heat: specific_heat
    thermal_conductivity: thermal_conductivity
    viscosity: viscosity
    molecular_weight: molecular_weight
    mass_diffusivity: mass_diffusivity
    thermal_diffusivity: thermal_diffusivity
    formation_enthalpy: formation_enthalpy
    formation_entropy: formation_entropy
    characteristic_vibrational_temperature: characteristic_vibrational_temperature
    reference_temperature: reference_temperature
    lennard_jones_length: lennard_jones_length
    lennard_jones_energy: lennard_jones_energy
    thermal_accom_coefficient: thermal_accom_coefficient
    velocity_accom_coefficient: velocity_accom_coefficient
    absorption_coefficient: absorption_coefficient
    scattering_coefficient: scattering_coefficient
    scattering_phase_function: scattering_phase_function
    therm_exp_coeff: therm_exp_coeff
    premix_unburnt_density: premix_unburnt_density
    premix_unburnt_temp: premix_unburnt_temp
    premix_adiabatic_temp: premix_adiabatic_temp
    premix_unburnt_cp: premix_unburnt_cp
    premix_heat_trans_coeff: premix_heat_trans_coeff
    premix_laminar_speed: premix_laminar_speed
    premix_laminar_thickness: premix_laminar_thickness
    premix_critical_strain: premix_critical_strain
    premix_heat_of_comb: premix_heat_of_comb
    premix_unburnt_fuel_mf: premix_unburnt_fuel_mf
    refractive_index: refractive_index
    latent_heat: latent_heat
    thermophoretic_co: thermophoretic_co
    vaporization_temperature: vaporization_temperature
    boiling_point: boiling_point
    volatile_fraction: volatile_fraction
    binary_diffusivity: binary_diffusivity
    diffusivity_reference_pressure: diffusivity_reference_pressure
    vapor_pressure: vapor_pressure
    degrees_of_freedom: degrees_of_freedom
    emissivity: emissivity
    scattering_factor: scattering_factor
    heat_of_pyrolysis: heat_of_pyrolysis
    swelling_coefficient: swelling_coefficient
    burn_stoichiometry: burn_stoichiometry
    combustible_fraction: combustible_fraction
    burn_hreact: burn_hreact
    burn_hreact_fraction: burn_hreact_fraction
    devolatilization_model: devolatilization_model
    combustion_model: combustion_model
    averaging_coefficient_t: averaging_coefficient_t
    averaging_coefficient_y: averaging_coefficient_y
    vaporization_model: vaporization_model
    thermolysis_model: thermolysis_model
    melting_heat: melting_heat
    tsolidus: tsolidus
    tliqidus: tliqidus
    tmelt: tmelt
    liquidus_slope: liquidus_slope
    partition_coeff: partition_coeff
    eutectic_mf: eutectic_mf
    eutectic_temp: eutectic_temp
    solut_exp_coeff: solut_exp_coeff
    solid_diffusion: solid_diffusion
    uds_diffusivity: uds_diffusivity
    dpm_surften: dpm_surften
    electric_conductivity: electric_conductivity
    dual_electric_conductivity: dual_electric_conductivity
    lithium_diffusivity: lithium_diffusivity
    magnetic_permeability: magnetic_permeability
    charge_density: charge_density
    charge: charge
    speed_of_sound: speed_of_sound
    species_phase: species_phase
    vp_equilib: vp_equilib
    critical_temperature: critical_temperature
    critical_pressure: critical_pressure
    critical_volume: critical_volume
    acentric_factor: acentric_factor
    saturation_pressure: saturation_pressure
    struct_youngs_modulus: struct_youngs_modulus
    struct_poisson_ratio: struct_poisson_ratio
    struct_start_temperature: struct_start_temperature
    struct_thermal_expansion: struct_thermal_expansion
    atomic_number: atomic_number
    struct_damping_alpha: struct_damping_alpha
    struct_damping_beta: struct_damping_beta
    return_type: str
class droplet_particle(NamedObject[droplet_particle_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: droplet_particle_child
    return_type: str
class combusting_particle_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    species: species
    reactions: reactions
    reaction_mechs: reaction_mechs
    density: density
    specific_heat: specific_heat
    thermal_conductivity: thermal_conductivity
    viscosity: viscosity
    molecular_weight: molecular_weight
    mass_diffusivity: mass_diffusivity
    thermal_diffusivity: thermal_diffusivity
    formation_enthalpy: formation_enthalpy
    formation_entropy: formation_entropy
    characteristic_vibrational_temperature: characteristic_vibrational_temperature
    reference_temperature: reference_temperature
    lennard_jones_length: lennard_jones_length
    lennard_jones_energy: lennard_jones_energy
    thermal_accom_coefficient: thermal_accom_coefficient
    velocity_accom_coefficient: velocity_accom_coefficient
    absorption_coefficient: absorption_coefficient
    scattering_coefficient: scattering_coefficient
    scattering_phase_function: scattering_phase_function
    therm_exp_coeff: therm_exp_coeff
    premix_unburnt_density: premix_unburnt_density
    premix_unburnt_temp: premix_unburnt_temp
    premix_adiabatic_temp: premix_adiabatic_temp
    premix_unburnt_cp: premix_unburnt_cp
    premix_heat_trans_coeff: premix_heat_trans_coeff
    premix_laminar_speed: premix_laminar_speed
    premix_laminar_thickness: premix_laminar_thickness
    premix_critical_strain: premix_critical_strain
    premix_heat_of_comb: premix_heat_of_comb
    premix_unburnt_fuel_mf: premix_unburnt_fuel_mf
    refractive_index: refractive_index
    latent_heat: latent_heat
    thermophoretic_co: thermophoretic_co
    vaporization_temperature: vaporization_temperature
    boiling_point: boiling_point
    volatile_fraction: volatile_fraction
    binary_diffusivity: binary_diffusivity
    diffusivity_reference_pressure: diffusivity_reference_pressure
    vapor_pressure: vapor_pressure
    degrees_of_freedom: degrees_of_freedom
    emissivity: emissivity
    scattering_factor: scattering_factor
    heat_of_pyrolysis: heat_of_pyrolysis
    swelling_coefficient: swelling_coefficient
    burn_stoichiometry: burn_stoichiometry
    combustible_fraction: combustible_fraction
    burn_hreact: burn_hreact
    burn_hreact_fraction: burn_hreact_fraction
    devolatilization_model: devolatilization_model
    combustion_model: combustion_model
    averaging_coefficient_t: averaging_coefficient_t
    averaging_coefficient_y: averaging_coefficient_y
    vaporization_model: vaporization_model
    thermolysis_model: thermolysis_model
    melting_heat: melting_heat
    tsolidus: tsolidus
    tliqidus: tliqidus
    tmelt: tmelt
    liquidus_slope: liquidus_slope
    partition_coeff: partition_coeff
    eutectic_mf: eutectic_mf
    eutectic_temp: eutectic_temp
    solut_exp_coeff: solut_exp_coeff
    solid_diffusion: solid_diffusion
    uds_diffusivity: uds_diffusivity
    dpm_surften: dpm_surften
    electric_conductivity: electric_conductivity
    dual_electric_conductivity: dual_electric_conductivity
    lithium_diffusivity: lithium_diffusivity
    magnetic_permeability: magnetic_permeability
    charge_density: charge_density
    charge: charge
    speed_of_sound: speed_of_sound
    species_phase: species_phase
    vp_equilib: vp_equilib
    critical_temperature: critical_temperature
    critical_pressure: critical_pressure
    critical_volume: critical_volume
    acentric_factor: acentric_factor
    saturation_pressure: saturation_pressure
    struct_youngs_modulus: struct_youngs_modulus
    struct_poisson_ratio: struct_poisson_ratio
    struct_start_temperature: struct_start_temperature
    struct_thermal_expansion: struct_thermal_expansion
    atomic_number: atomic_number
    struct_damping_alpha: struct_damping_alpha
    struct_damping_beta: struct_damping_beta
    return_type: str
class combusting_particle(NamedObject[combusting_particle_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: combusting_particle_child
    return_type: str
class particle_mixture_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    species: species
    reactions: reactions
    reaction_mechs: reaction_mechs
    density: density
    specific_heat: specific_heat
    thermal_conductivity: thermal_conductivity
    viscosity: viscosity
    molecular_weight: molecular_weight
    mass_diffusivity: mass_diffusivity
    thermal_diffusivity: thermal_diffusivity
    formation_enthalpy: formation_enthalpy
    formation_entropy: formation_entropy
    characteristic_vibrational_temperature: characteristic_vibrational_temperature
    reference_temperature: reference_temperature
    lennard_jones_length: lennard_jones_length
    lennard_jones_energy: lennard_jones_energy
    thermal_accom_coefficient: thermal_accom_coefficient
    velocity_accom_coefficient: velocity_accom_coefficient
    absorption_coefficient: absorption_coefficient
    scattering_coefficient: scattering_coefficient
    scattering_phase_function: scattering_phase_function
    therm_exp_coeff: therm_exp_coeff
    premix_unburnt_density: premix_unburnt_density
    premix_unburnt_temp: premix_unburnt_temp
    premix_adiabatic_temp: premix_adiabatic_temp
    premix_unburnt_cp: premix_unburnt_cp
    premix_heat_trans_coeff: premix_heat_trans_coeff
    premix_laminar_speed: premix_laminar_speed
    premix_laminar_thickness: premix_laminar_thickness
    premix_critical_strain: premix_critical_strain
    premix_heat_of_comb: premix_heat_of_comb
    premix_unburnt_fuel_mf: premix_unburnt_fuel_mf
    refractive_index: refractive_index
    latent_heat: latent_heat
    thermophoretic_co: thermophoretic_co
    vaporization_temperature: vaporization_temperature
    boiling_point: boiling_point
    volatile_fraction: volatile_fraction
    binary_diffusivity: binary_diffusivity
    diffusivity_reference_pressure: diffusivity_reference_pressure
    vapor_pressure: vapor_pressure
    degrees_of_freedom: degrees_of_freedom
    emissivity: emissivity
    scattering_factor: scattering_factor
    heat_of_pyrolysis: heat_of_pyrolysis
    swelling_coefficient: swelling_coefficient
    burn_stoichiometry: burn_stoichiometry
    combustible_fraction: combustible_fraction
    burn_hreact: burn_hreact
    burn_hreact_fraction: burn_hreact_fraction
    devolatilization_model: devolatilization_model
    combustion_model: combustion_model
    averaging_coefficient_t: averaging_coefficient_t
    averaging_coefficient_y: averaging_coefficient_y
    vaporization_model: vaporization_model
    thermolysis_model: thermolysis_model
    melting_heat: melting_heat
    tsolidus: tsolidus
    tliqidus: tliqidus
    tmelt: tmelt
    liquidus_slope: liquidus_slope
    partition_coeff: partition_coeff
    eutectic_mf: eutectic_mf
    eutectic_temp: eutectic_temp
    solut_exp_coeff: solut_exp_coeff
    solid_diffusion: solid_diffusion
    uds_diffusivity: uds_diffusivity
    dpm_surften: dpm_surften
    electric_conductivity: electric_conductivity
    dual_electric_conductivity: dual_electric_conductivity
    lithium_diffusivity: lithium_diffusivity
    magnetic_permeability: magnetic_permeability
    charge_density: charge_density
    charge: charge
    speed_of_sound: speed_of_sound
    species_phase: species_phase
    vp_equilib: vp_equilib
    critical_temperature: critical_temperature
    critical_pressure: critical_pressure
    critical_volume: critical_volume
    acentric_factor: acentric_factor
    saturation_pressure: saturation_pressure
    struct_youngs_modulus: struct_youngs_modulus
    struct_poisson_ratio: struct_poisson_ratio
    struct_start_temperature: struct_start_temperature
    struct_thermal_expansion: struct_thermal_expansion
    atomic_number: atomic_number
    struct_damping_alpha: struct_damping_alpha
    struct_damping_beta: struct_damping_beta
    mixture_species: mixture_species
    return_type: str
class particle_mixture(NamedObject[particle_mixture_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: particle_mixture_child
    return_type: str
class materials(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    fluid: fluid
    solid: solid
    mixture: mixture
    inert_particle: inert_particle
    droplet_particle: droplet_particle
    combusting_particle: combusting_particle
    particle_mixture: particle_mixture
    def list_materials(self):
        """
        'list_materials' command.
        """
    def copy_database_material_by_name(self, type: str, name: str):
        """
        'copy_database_material_by_name' command.
        """
    def copy_database_material_by_formula(self, type: str, formula: str):
        """
        'copy_database_material_by_formula' command.
        """
    return_type: str
class material(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class sources(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class profile_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class field_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class udf(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class source_terms_child_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class source_terms_child(ListObject[source_terms_child_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: source_terms_child_child
    return_type: str
class source_terms(NamedObject[source_terms_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: source_terms_child
    return_type: str
class fixed(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cylindrical_fixed_var(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fixes_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class fixes(NamedObject[fixes_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: fixes_child
    return_type: str
class motion_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class relative_to_thread(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class omega(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class axis_origin_component_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class axis_origin_component(ListObject[axis_origin_component_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: axis_origin_component_child
    return_type: str
class axis_direction_component_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class axis_direction_component(ListObject[axis_direction_component_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: axis_direction_component_child
    return_type: str
class udf_zmotion_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mrf_motion(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mrf_relative_to_thread(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mrf_omega(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class reference_frame_velocity_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class reference_frame_velocity_components(ListObject[reference_frame_velocity_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: reference_frame_velocity_components_child
    return_type: str
class reference_frame_axis_origin_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class reference_frame_axis_origin_components(ListObject[reference_frame_axis_origin_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: reference_frame_axis_origin_components_child
    return_type: str
class reference_frame_axis_direction_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class reference_frame_axis_direction_components(ListObject[reference_frame_axis_direction_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: reference_frame_axis_direction_components_child
    return_type: str
class mrf_udf_zmotion_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mgrid_enable_transient(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mgrid_motion(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mgrid_relative_to_thread(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mgrid_omega(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class moving_mesh_velocity_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class moving_mesh_velocity_components(ListObject[moving_mesh_velocity_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: moving_mesh_velocity_components_child
    return_type: str
class moving_mesh_axis_origin_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class moving_mesh_axis_origin_components(ListObject[moving_mesh_axis_origin_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: moving_mesh_axis_origin_components_child
    return_type: str
class mgrid_udf_zmotion_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solid_motion(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solid_relative_to_thread(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solid_omega(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class solid_motion_velocity_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class solid_motion_velocity_components(ListObject[solid_motion_velocity_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: solid_motion_velocity_components_child
    return_type: str
class solid_motion_axis_origin_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class solid_motion_axis_origin_components(ListObject[solid_motion_axis_origin_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: solid_motion_axis_origin_components_child
    return_type: str
class solid_motion_axis_direction_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class solid_motion_axis_direction_components(ListObject[solid_motion_axis_direction_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: solid_motion_axis_direction_components_child
    return_type: str
class solid_udf_zmotion_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class radiating(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class les_embedded(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class contact_property(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vapor_phase_realgas(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class laminar(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class laminar_mut_zero(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class les_embedded_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class les_embedded_mom_scheme(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class les_embedded_c_wale(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class les_embedded_c_smag(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class glass(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class porous(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class conical(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dir_spec_cond(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cursys(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cursys_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class direction_1_x(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class direction_1_y(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class direction_1_z(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class direction_2_x(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class direction_2_y(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class direction_2_z(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class cone_axis_x(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cone_axis_y(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cone_axis_z(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cone_axis_pt_x(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cone_axis_pt_y(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cone_axis_pt_z(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cone_angle(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rel_vel_resistance(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class porous_r_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class porous_r_2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class porous_r_3(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class alt_inertial_form(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class porous_c_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class porous_c_2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class porous_c_3(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class c0(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class c1(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class porosity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class method(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class function_of(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class viscosity_ratio(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class none(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class corey(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class stone_1(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class stone_2(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rel_perm_limit_p1(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rel_perm_limit_p2(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ref_perm_p1(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class exp_p1(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class res_sat_p1(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ref_perm_p2(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class exp_p2(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class res_sat_p2(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ref_perm_p3(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class exp_p3(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class res_sat_p3(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class capillary_pressure(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class max_capillary_pressure(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class van_genuchten_pg(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class van_genuchten_ng(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class skjaeveland_nw_pc_coef(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class skjaeveland_nw_pc_pwr(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class skjaeveland_wet_pc_coef(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class skjaeveland_wet_pc_pwr(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class brooks_corey_pe(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class brooks_corey_ng(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class leverett_con_ang(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rp_cbox_p1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rp_edit_p1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rel_perm_tabular_p1(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rel_perm_table_p1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rel_perm_satw_p1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rel_perm_rp_p1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rp_cbox_p2(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rp_edit_p2(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rel_perm_tabular_p2(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rel_perm_table_p2(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rel_perm_satw_p2(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rel_perm_rp_p2(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wetting_phase(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class non_wetting_phase(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class equib_thermal(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class non_equib_thermal(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solid_material(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class area_density(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class heat_transfer_coeff(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class fanzone(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_zone_list(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_thickness(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_hub_rad(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_tip_rad(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_x_origin(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_y_origin(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_z_origin(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_rot_dir(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_opert_angvel(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_inflection_point(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class limit_flow_fan(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_flow_rate(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class min_flow_rate(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class tan_source_term(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rad_source_term(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class axial_source_term(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_axial_source_method(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_pre_jump(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_curve_fit(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_poly_order(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_ini_flow(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_test_angvel(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_test_temp(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class read_fan_curve(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class reaction_mechs_1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class react(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class surface_volume_ratio(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class electrolyte(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mp_compressive_beta_max(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mp_boiling_zone(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class numerical_beach(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_id(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_multi_dir(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_damp_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_inlet_bndr(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_fs_level(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_bottom_level(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_dir_ni(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_dir_nj(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_dir_nk(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_damp_len_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_wave_len(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_len_factor(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_start_point(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_end_point(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ni(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class nj(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class nk(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class xe(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class len(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_dir_list_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    ni: ni
    nj: nj
    nk: nk
    xe: xe
    len: len
    return_type: str
class beach_dir_list(ListObject[beach_dir_list_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: beach_dir_list_child
    return_type: str
class beach_damp_relative(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_damp_resist_lin(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class beach_damp_resist(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class porous_structure(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class structure_material(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class anisotropic_spe_diff(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class spe_diff_xx(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class spe_diff_xy(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class spe_diff_xz(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class spe_diff_yx(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class spe_diff_yy(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class spe_diff_yz(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class spe_diff_zx(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class spe_diff_zy(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class spe_diff_zz(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    material: material
    sources: sources
    source_terms: source_terms
    fixed: fixed
    cylindrical_fixed_var: cylindrical_fixed_var
    fixes: fixes
    motion_spec: motion_spec
    relative_to_thread: relative_to_thread
    omega: omega
    axis_origin_component: axis_origin_component
    axis_direction_component: axis_direction_component
    udf_zmotion_name: udf_zmotion_name
    mrf_motion: mrf_motion
    mrf_relative_to_thread: mrf_relative_to_thread
    mrf_omega: mrf_omega
    reference_frame_velocity_components: reference_frame_velocity_components
    reference_frame_axis_origin_components: reference_frame_axis_origin_components
    reference_frame_axis_direction_components: reference_frame_axis_direction_components
    mrf_udf_zmotion_name: mrf_udf_zmotion_name
    mgrid_enable_transient: mgrid_enable_transient
    mgrid_motion: mgrid_motion
    mgrid_relative_to_thread: mgrid_relative_to_thread
    mgrid_omega: mgrid_omega
    moving_mesh_velocity_components: moving_mesh_velocity_components
    moving_mesh_axis_origin_components: moving_mesh_axis_origin_components
    mgrid_udf_zmotion_name: mgrid_udf_zmotion_name
    solid_motion: solid_motion
    solid_relative_to_thread: solid_relative_to_thread
    solid_omega: solid_omega
    solid_motion_velocity_components: solid_motion_velocity_components
    solid_motion_axis_origin_components: solid_motion_axis_origin_components
    solid_motion_axis_direction_components: solid_motion_axis_direction_components
    solid_udf_zmotion_name: solid_udf_zmotion_name
    radiating: radiating
    les_embedded: les_embedded
    contact_property: contact_property
    vapor_phase_realgas: vapor_phase_realgas
    laminar: laminar
    laminar_mut_zero: laminar_mut_zero
    les_embedded_spec: les_embedded_spec
    les_embedded_mom_scheme: les_embedded_mom_scheme
    les_embedded_c_wale: les_embedded_c_wale
    les_embedded_c_smag: les_embedded_c_smag
    glass: glass
    porous: porous
    conical: conical
    dir_spec_cond: dir_spec_cond
    cursys: cursys
    cursys_name: cursys_name
    direction_1_x: direction_1_x
    direction_1_y: direction_1_y
    direction_1_z: direction_1_z
    direction_2_x: direction_2_x
    direction_2_y: direction_2_y
    direction_2_z: direction_2_z
    cone_axis_x: cone_axis_x
    cone_axis_y: cone_axis_y
    cone_axis_z: cone_axis_z
    cone_axis_pt_x: cone_axis_pt_x
    cone_axis_pt_y: cone_axis_pt_y
    cone_axis_pt_z: cone_axis_pt_z
    cone_angle: cone_angle
    rel_vel_resistance: rel_vel_resistance
    porous_r_1: porous_r_1
    porous_r_2: porous_r_2
    porous_r_3: porous_r_3
    alt_inertial_form: alt_inertial_form
    porous_c_1: porous_c_1
    porous_c_2: porous_c_2
    porous_c_3: porous_c_3
    c0: c0
    c1: c1
    porosity: porosity
    viscosity_ratio: viscosity_ratio
    none: none
    corey: corey
    stone_1: stone_1
    stone_2: stone_2
    rel_perm_limit_p1: rel_perm_limit_p1
    rel_perm_limit_p2: rel_perm_limit_p2
    ref_perm_p1: ref_perm_p1
    exp_p1: exp_p1
    res_sat_p1: res_sat_p1
    ref_perm_p2: ref_perm_p2
    exp_p2: exp_p2
    res_sat_p2: res_sat_p2
    ref_perm_p3: ref_perm_p3
    exp_p3: exp_p3
    res_sat_p3: res_sat_p3
    capillary_pressure: capillary_pressure
    max_capillary_pressure: max_capillary_pressure
    van_genuchten_pg: van_genuchten_pg
    van_genuchten_ng: van_genuchten_ng
    skjaeveland_nw_pc_coef: skjaeveland_nw_pc_coef
    skjaeveland_nw_pc_pwr: skjaeveland_nw_pc_pwr
    skjaeveland_wet_pc_coef: skjaeveland_wet_pc_coef
    skjaeveland_wet_pc_pwr: skjaeveland_wet_pc_pwr
    brooks_corey_pe: brooks_corey_pe
    brooks_corey_ng: brooks_corey_ng
    leverett_con_ang: leverett_con_ang
    rp_cbox_p1: rp_cbox_p1
    rp_edit_p1: rp_edit_p1
    rel_perm_tabular_p1: rel_perm_tabular_p1
    rel_perm_table_p1: rel_perm_table_p1
    rel_perm_satw_p1: rel_perm_satw_p1
    rel_perm_rp_p1: rel_perm_rp_p1
    rp_cbox_p2: rp_cbox_p2
    rp_edit_p2: rp_edit_p2
    rel_perm_tabular_p2: rel_perm_tabular_p2
    rel_perm_table_p2: rel_perm_table_p2
    rel_perm_satw_p2: rel_perm_satw_p2
    rel_perm_rp_p2: rel_perm_rp_p2
    wetting_phase: wetting_phase
    non_wetting_phase: non_wetting_phase
    equib_thermal: equib_thermal
    non_equib_thermal: non_equib_thermal
    solid_material: solid_material
    area_density: area_density
    heat_transfer_coeff: heat_transfer_coeff
    fanzone: fanzone
    fan_zone_list: fan_zone_list
    fan_thickness: fan_thickness
    fan_hub_rad: fan_hub_rad
    fan_tip_rad: fan_tip_rad
    fan_x_origin: fan_x_origin
    fan_y_origin: fan_y_origin
    fan_z_origin: fan_z_origin
    fan_rot_dir: fan_rot_dir
    fan_opert_angvel: fan_opert_angvel
    fan_inflection_point: fan_inflection_point
    limit_flow_fan: limit_flow_fan
    max_flow_rate: max_flow_rate
    min_flow_rate: min_flow_rate
    tan_source_term: tan_source_term
    rad_source_term: rad_source_term
    axial_source_term: axial_source_term
    fan_axial_source_method: fan_axial_source_method
    fan_pre_jump: fan_pre_jump
    fan_curve_fit: fan_curve_fit
    fan_poly_order: fan_poly_order
    fan_ini_flow: fan_ini_flow
    fan_test_angvel: fan_test_angvel
    fan_test_temp: fan_test_temp
    read_fan_curve: read_fan_curve
    reaction_mechs: reaction_mechs_1
    react: react
    surface_volume_ratio: surface_volume_ratio
    electrolyte: electrolyte
    mp_compressive_beta_max: mp_compressive_beta_max
    mp_boiling_zone: mp_boiling_zone
    numerical_beach: numerical_beach
    beach_id: beach_id
    beach_multi_dir: beach_multi_dir
    beach_damp_type: beach_damp_type
    beach_inlet_bndr: beach_inlet_bndr
    beach_fs_level: beach_fs_level
    beach_bottom_level: beach_bottom_level
    beach_dir_ni: beach_dir_ni
    beach_dir_nj: beach_dir_nj
    beach_dir_nk: beach_dir_nk
    beach_damp_len_spec: beach_damp_len_spec
    beach_wave_len: beach_wave_len
    beach_len_factor: beach_len_factor
    beach_start_point: beach_start_point
    beach_end_point: beach_end_point
    beach_dir_list: beach_dir_list
    beach_damp_relative: beach_damp_relative
    beach_damp_resist_lin: beach_damp_resist_lin
    beach_damp_resist: beach_damp_resist
    porous_structure: porous_structure
    structure_material: structure_material
    anisotropic_spe_diff: anisotropic_spe_diff
    spe_diff_xx: spe_diff_xx
    spe_diff_xy: spe_diff_xy
    spe_diff_xz: spe_diff_xz
    spe_diff_yx: spe_diff_yx
    spe_diff_yy: spe_diff_yy
    spe_diff_yz: spe_diff_yz
    spe_diff_zx: spe_diff_zx
    spe_diff_zy: spe_diff_zy
    spe_diff_zz: spe_diff_zz
    return_type: str
class phase(NamedObject[phase_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_child
    return_type: str
class fluid_1_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase
    material: material
    sources: sources
    source_terms: source_terms
    fixed: fixed
    cylindrical_fixed_var: cylindrical_fixed_var
    fixes: fixes
    motion_spec: motion_spec
    relative_to_thread: relative_to_thread
    omega: omega
    axis_origin_component: axis_origin_component
    axis_direction_component: axis_direction_component
    udf_zmotion_name: udf_zmotion_name
    mrf_motion: mrf_motion
    mrf_relative_to_thread: mrf_relative_to_thread
    mrf_omega: mrf_omega
    reference_frame_velocity_components: reference_frame_velocity_components
    reference_frame_axis_origin_components: reference_frame_axis_origin_components
    reference_frame_axis_direction_components: reference_frame_axis_direction_components
    mrf_udf_zmotion_name: mrf_udf_zmotion_name
    mgrid_enable_transient: mgrid_enable_transient
    mgrid_motion: mgrid_motion
    mgrid_relative_to_thread: mgrid_relative_to_thread
    mgrid_omega: mgrid_omega
    moving_mesh_velocity_components: moving_mesh_velocity_components
    moving_mesh_axis_origin_components: moving_mesh_axis_origin_components
    mgrid_udf_zmotion_name: mgrid_udf_zmotion_name
    solid_motion: solid_motion
    solid_relative_to_thread: solid_relative_to_thread
    solid_omega: solid_omega
    solid_motion_velocity_components: solid_motion_velocity_components
    solid_motion_axis_origin_components: solid_motion_axis_origin_components
    solid_motion_axis_direction_components: solid_motion_axis_direction_components
    solid_udf_zmotion_name: solid_udf_zmotion_name
    radiating: radiating
    les_embedded: les_embedded
    contact_property: contact_property
    vapor_phase_realgas: vapor_phase_realgas
    laminar: laminar
    laminar_mut_zero: laminar_mut_zero
    les_embedded_spec: les_embedded_spec
    les_embedded_mom_scheme: les_embedded_mom_scheme
    les_embedded_c_wale: les_embedded_c_wale
    les_embedded_c_smag: les_embedded_c_smag
    glass: glass
    porous: porous
    conical: conical
    dir_spec_cond: dir_spec_cond
    cursys: cursys
    cursys_name: cursys_name
    direction_1_x: direction_1_x
    direction_1_y: direction_1_y
    direction_1_z: direction_1_z
    direction_2_x: direction_2_x
    direction_2_y: direction_2_y
    direction_2_z: direction_2_z
    cone_axis_x: cone_axis_x
    cone_axis_y: cone_axis_y
    cone_axis_z: cone_axis_z
    cone_axis_pt_x: cone_axis_pt_x
    cone_axis_pt_y: cone_axis_pt_y
    cone_axis_pt_z: cone_axis_pt_z
    cone_angle: cone_angle
    rel_vel_resistance: rel_vel_resistance
    porous_r_1: porous_r_1
    porous_r_2: porous_r_2
    porous_r_3: porous_r_3
    alt_inertial_form: alt_inertial_form
    porous_c_1: porous_c_1
    porous_c_2: porous_c_2
    porous_c_3: porous_c_3
    c0: c0
    c1: c1
    porosity: porosity
    viscosity_ratio: viscosity_ratio
    none: none
    corey: corey
    stone_1: stone_1
    stone_2: stone_2
    rel_perm_limit_p1: rel_perm_limit_p1
    rel_perm_limit_p2: rel_perm_limit_p2
    ref_perm_p1: ref_perm_p1
    exp_p1: exp_p1
    res_sat_p1: res_sat_p1
    ref_perm_p2: ref_perm_p2
    exp_p2: exp_p2
    res_sat_p2: res_sat_p2
    ref_perm_p3: ref_perm_p3
    exp_p3: exp_p3
    res_sat_p3: res_sat_p3
    capillary_pressure: capillary_pressure
    max_capillary_pressure: max_capillary_pressure
    van_genuchten_pg: van_genuchten_pg
    van_genuchten_ng: van_genuchten_ng
    skjaeveland_nw_pc_coef: skjaeveland_nw_pc_coef
    skjaeveland_nw_pc_pwr: skjaeveland_nw_pc_pwr
    skjaeveland_wet_pc_coef: skjaeveland_wet_pc_coef
    skjaeveland_wet_pc_pwr: skjaeveland_wet_pc_pwr
    brooks_corey_pe: brooks_corey_pe
    brooks_corey_ng: brooks_corey_ng
    leverett_con_ang: leverett_con_ang
    rp_cbox_p1: rp_cbox_p1
    rp_edit_p1: rp_edit_p1
    rel_perm_tabular_p1: rel_perm_tabular_p1
    rel_perm_table_p1: rel_perm_table_p1
    rel_perm_satw_p1: rel_perm_satw_p1
    rel_perm_rp_p1: rel_perm_rp_p1
    rp_cbox_p2: rp_cbox_p2
    rp_edit_p2: rp_edit_p2
    rel_perm_tabular_p2: rel_perm_tabular_p2
    rel_perm_table_p2: rel_perm_table_p2
    rel_perm_satw_p2: rel_perm_satw_p2
    rel_perm_rp_p2: rel_perm_rp_p2
    wetting_phase: wetting_phase
    non_wetting_phase: non_wetting_phase
    equib_thermal: equib_thermal
    non_equib_thermal: non_equib_thermal
    solid_material: solid_material
    area_density: area_density
    heat_transfer_coeff: heat_transfer_coeff
    fanzone: fanzone
    fan_zone_list: fan_zone_list
    fan_thickness: fan_thickness
    fan_hub_rad: fan_hub_rad
    fan_tip_rad: fan_tip_rad
    fan_x_origin: fan_x_origin
    fan_y_origin: fan_y_origin
    fan_z_origin: fan_z_origin
    fan_rot_dir: fan_rot_dir
    fan_opert_angvel: fan_opert_angvel
    fan_inflection_point: fan_inflection_point
    limit_flow_fan: limit_flow_fan
    max_flow_rate: max_flow_rate
    min_flow_rate: min_flow_rate
    tan_source_term: tan_source_term
    rad_source_term: rad_source_term
    axial_source_term: axial_source_term
    fan_axial_source_method: fan_axial_source_method
    fan_pre_jump: fan_pre_jump
    fan_curve_fit: fan_curve_fit
    fan_poly_order: fan_poly_order
    fan_ini_flow: fan_ini_flow
    fan_test_angvel: fan_test_angvel
    fan_test_temp: fan_test_temp
    read_fan_curve: read_fan_curve
    reaction_mechs: reaction_mechs_1
    react: react
    surface_volume_ratio: surface_volume_ratio
    electrolyte: electrolyte
    mp_compressive_beta_max: mp_compressive_beta_max
    mp_boiling_zone: mp_boiling_zone
    numerical_beach: numerical_beach
    beach_id: beach_id
    beach_multi_dir: beach_multi_dir
    beach_damp_type: beach_damp_type
    beach_inlet_bndr: beach_inlet_bndr
    beach_fs_level: beach_fs_level
    beach_bottom_level: beach_bottom_level
    beach_dir_ni: beach_dir_ni
    beach_dir_nj: beach_dir_nj
    beach_dir_nk: beach_dir_nk
    beach_damp_len_spec: beach_damp_len_spec
    beach_wave_len: beach_wave_len
    beach_len_factor: beach_len_factor
    beach_start_point: beach_start_point
    beach_end_point: beach_end_point
    beach_dir_list: beach_dir_list
    beach_damp_relative: beach_damp_relative
    beach_damp_resist_lin: beach_damp_resist_lin
    beach_damp_resist: beach_damp_resist
    porous_structure: porous_structure
    structure_material: structure_material
    anisotropic_spe_diff: anisotropic_spe_diff
    spe_diff_xx: spe_diff_xx
    spe_diff_xy: spe_diff_xy
    spe_diff_xz: spe_diff_xz
    spe_diff_yx: spe_diff_yx
    spe_diff_yy: spe_diff_yy
    spe_diff_yz: spe_diff_yz
    spe_diff_zx: spe_diff_zx
    spe_diff_zy: spe_diff_zy
    spe_diff_zz: spe_diff_zz
    return_type: str
class fluid_1(NamedObject[fluid_1_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: fluid_1_child
    return_type: str
class pcb_model(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ecad_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class choice(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rows(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class columns(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ref_frame(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pwr_names(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pcb_zone_info(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    ecad_name: ecad_name
    choice: choice
    rows: rows
    columns: columns
    ref_frame: ref_frame
    pwr_names: pwr_names
    return_type: str
class phase_1_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    material: material
    sources: sources
    source_terms: source_terms
    fixed: fixed
    cylindrical_fixed_var: cylindrical_fixed_var
    fixes: fixes
    motion_spec: motion_spec
    relative_to_thread: relative_to_thread
    omega: omega
    axis_origin_component: axis_origin_component
    axis_direction_component: axis_direction_component
    udf_zmotion_name: udf_zmotion_name
    mrf_motion: mrf_motion
    mrf_relative_to_thread: mrf_relative_to_thread
    mrf_omega: mrf_omega
    reference_frame_velocity_components: reference_frame_velocity_components
    reference_frame_axis_origin_components: reference_frame_axis_origin_components
    reference_frame_axis_direction_components: reference_frame_axis_direction_components
    mrf_udf_zmotion_name: mrf_udf_zmotion_name
    mgrid_enable_transient: mgrid_enable_transient
    mgrid_motion: mgrid_motion
    mgrid_relative_to_thread: mgrid_relative_to_thread
    mgrid_omega: mgrid_omega
    moving_mesh_velocity_components: moving_mesh_velocity_components
    moving_mesh_axis_origin_components: moving_mesh_axis_origin_components
    mgrid_udf_zmotion_name: mgrid_udf_zmotion_name
    solid_motion: solid_motion
    solid_relative_to_thread: solid_relative_to_thread
    solid_omega: solid_omega
    solid_motion_velocity_components: solid_motion_velocity_components
    solid_motion_axis_origin_components: solid_motion_axis_origin_components
    solid_motion_axis_direction_components: solid_motion_axis_direction_components
    solid_udf_zmotion_name: solid_udf_zmotion_name
    radiating: radiating
    les_embedded: les_embedded
    contact_property: contact_property
    vapor_phase_realgas: vapor_phase_realgas
    cursys: cursys
    cursys_name: cursys_name
    pcb_model: pcb_model
    pcb_zone_info: pcb_zone_info
    return_type: str
class phase_1(NamedObject[phase_1_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_1_child
    return_type: str
class solid_1_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_1
    material: material
    sources: sources
    source_terms: source_terms
    fixed: fixed
    cylindrical_fixed_var: cylindrical_fixed_var
    fixes: fixes
    motion_spec: motion_spec
    relative_to_thread: relative_to_thread
    omega: omega
    axis_origin_component: axis_origin_component
    axis_direction_component: axis_direction_component
    udf_zmotion_name: udf_zmotion_name
    mrf_motion: mrf_motion
    mrf_relative_to_thread: mrf_relative_to_thread
    mrf_omega: mrf_omega
    reference_frame_velocity_components: reference_frame_velocity_components
    reference_frame_axis_origin_components: reference_frame_axis_origin_components
    reference_frame_axis_direction_components: reference_frame_axis_direction_components
    mrf_udf_zmotion_name: mrf_udf_zmotion_name
    mgrid_enable_transient: mgrid_enable_transient
    mgrid_motion: mgrid_motion
    mgrid_relative_to_thread: mgrid_relative_to_thread
    mgrid_omega: mgrid_omega
    moving_mesh_velocity_components: moving_mesh_velocity_components
    moving_mesh_axis_origin_components: moving_mesh_axis_origin_components
    mgrid_udf_zmotion_name: mgrid_udf_zmotion_name
    solid_motion: solid_motion
    solid_relative_to_thread: solid_relative_to_thread
    solid_omega: solid_omega
    solid_motion_velocity_components: solid_motion_velocity_components
    solid_motion_axis_origin_components: solid_motion_axis_origin_components
    solid_motion_axis_direction_components: solid_motion_axis_direction_components
    solid_udf_zmotion_name: solid_udf_zmotion_name
    radiating: radiating
    les_embedded: les_embedded
    contact_property: contact_property
    vapor_phase_realgas: vapor_phase_realgas
    cursys: cursys
    cursys_name: cursys_name
    pcb_model: pcb_model
    pcb_zone_info: pcb_zone_info
    return_type: str
class solid_1(NamedObject[solid_1_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: solid_1_child
    return_type: str
class cell_zone_conditions(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    fluid: fluid_1
    solid: solid_1
    return_type: str
class geom_disable(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class geom_dir_spec(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class geom_dir_x(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class geom_dir_y(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class geom_dir_z(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class geom_levels(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class geom_bgthread(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_2_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    return_type: str
class phase_2(NamedObject[phase_2_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_2_child
    return_type: str
class axis_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_2
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    return_type: str
class axis(NamedObject[axis_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: axis_child
    return_type: str
class degassing_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_2
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    return_type: str
class degassing(NamedObject[degassing_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: degassing_child
    return_type: str
class open_channel(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class outlet_number(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pressure_spec_method(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class press_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class frame_of_reference(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ht_local(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class p(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class p_profile_multiplier(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ht_bottom(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class den_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class t0(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class direction_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coordinate_system(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class flow_direction_component_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class flow_direction_component(ListObject[flow_direction_component_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: flow_direction_component_child
    return_type: str
class axis_direction_component_1_child(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class axis_direction_component_1(ListObject[axis_direction_component_1_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: axis_direction_component_1_child
    return_type: str
class axis_origin_component_1_child(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class axis_origin_component_1(ListObject[axis_origin_component_1_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: axis_origin_component_1_child
    return_type: str
class ke_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class nut(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class kl(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class intermit(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class k(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class e(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class o(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class v2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class turb_intensity(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class turb_length_scale(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class turb_hydraulic_diam(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class turb_viscosity_ratio(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class turb_viscosity_ratio_profile(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class rst_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class uu(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class vv(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ww(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class uv(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class vw(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class uw(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ksgs_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ksgs(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class sgs_turb_intensity(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class radiation_bc(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class radial_direction_component_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class radial_direction_component(ListObject[radial_direction_component_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: radial_direction_component_child
    return_type: str
class coll_dtheta(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coll_dphi(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class band_q_irrad_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class band_q_irrad(NamedObject[band_q_irrad_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: band_q_irrad_child
    return_type: str
class band_q_irrad_diffuse_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class band_q_irrad_diffuse(NamedObject[band_q_irrad_diffuse_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: band_q_irrad_diffuse_child
    return_type: str
class parallel_collimated_beam(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solar_direction(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solar_irradiation(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class t_b_b_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class t_b_b(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class in_emiss(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class fmean(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class fmean2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class fvar(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class fvar2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class granular_temperature(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class iac(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class lsfun(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class vof_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class volume_fraction(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class species_in_mole_fractions(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mf_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class mf(NamedObject[mf_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: mf_child
    return_type: str
class elec_potential_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class potential_value(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class dual_potential_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dual_potential_value(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class x_displacement_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class x_displacement_value(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class y_displacement_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class y_displacement_value(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class z_displacement_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class z_displacement_value(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class prob_mode_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class prob_mode_2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class prob_mode_3(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class premixc(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class premixc_var(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ecfm_sigma(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class inert(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_no(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_hcn(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_nh3(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_n2o(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_urea(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_hnco(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_nco(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_so2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_h2s(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_so3(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_sh(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_so(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_soot(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_nuclei(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_ctar(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_hg(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_hgcl2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_hcl(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_hgo(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_cl(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_cl2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_hgcl(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pollut_hocl(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class tss_scalar_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class tss_scalar(NamedObject[tss_scalar_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: tss_scalar_child
    return_type: str
class fensapice_flow_bc_subtype(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class uds_bc_child(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class uds_bc(NamedObject[uds_bc_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: uds_bc_child
    return_type: str
class uds_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class uds(NamedObject[uds_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: uds_child
    return_type: str
class pb_disc_bc_child(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pb_disc_bc(NamedObject[pb_disc_bc_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: pb_disc_bc_child
    return_type: str
class pb_disc_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pb_disc(NamedObject[pb_disc_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: pb_disc_child
    return_type: str
class pb_qmom_bc_child(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pb_qmom_bc(NamedObject[pb_qmom_bc_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: pb_qmom_bc_child
    return_type: str
class pb_qmom_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pb_qmom(NamedObject[pb_qmom_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: pb_qmom_child
    return_type: str
class pb_smm_bc_child(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pb_smm_bc(NamedObject[pb_smm_bc_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: pb_smm_bc_child
    return_type: str
class pb_smm_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pb_smm(NamedObject[pb_smm_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: pb_smm_child
    return_type: str
class pb_dqmom_bc_child(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pb_dqmom_bc(NamedObject[pb_dqmom_bc_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: pb_dqmom_bc_child
    return_type: str
class pb_dqmom_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pb_dqmom(NamedObject[pb_dqmom_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: pb_dqmom_child
    return_type: str
class dpm_bc_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_collision_partner(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class reinj_inj(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_udf(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mixing_plane_thread(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ac_options(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class p_backflow_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class p_backflow_spec_gen(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class impedance_0(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pole(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class amplitude(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class impedance_1_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    pole: pole
    amplitude: amplitude
    return_type: str
class impedance_1(ListObject[impedance_1_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: impedance_1_child
    return_type: str
class pole_real(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pole_imag(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class amplitude_real(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class amplitude_imag(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class impedance_2_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    pole_real: pole_real
    pole_imag: pole_imag
    amplitude_real: amplitude_real
    amplitude_imag: amplitude_imag
    return_type: str
class impedance_2(ListObject[impedance_2_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: impedance_2_child
    return_type: str
class ac_wave(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class prevent_reverse_flow(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class radial(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class avg_press_spec(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class press_averaging_method(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class targeted_mf_boundary(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class targeted_mf(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class targeted_mf_pmax(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class targeted_mf_pmin(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class gen_nrbc_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wsf(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wsb(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wsn(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class solar_fluxes(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solar_shining_factor(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class radiating_s2s_surface(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class a(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class strength(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class new_fan_definition(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_3_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    outlet_number: outlet_number
    pressure_spec_method: pressure_spec_method
    press_spec: press_spec
    frame_of_reference: frame_of_reference
    phase_spec: phase_spec
    ht_local: ht_local
    p: p
    p_profile_multiplier: p_profile_multiplier
    ht_bottom: ht_bottom
    den_spec: den_spec
    t0: t0
    direction_spec: direction_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fmean2: fmean2
    fvar: fvar
    fvar2: fvar2
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    vof_spec: vof_spec
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    mixing_plane_thread: mixing_plane_thread
    ac_options: ac_options
    p_backflow_spec: p_backflow_spec
    p_backflow_spec_gen: p_backflow_spec_gen
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    prevent_reverse_flow: prevent_reverse_flow
    radial: radial
    avg_press_spec: avg_press_spec
    press_averaging_method: press_averaging_method
    targeted_mf_boundary: targeted_mf_boundary
    targeted_mf: targeted_mf
    targeted_mf_pmax: targeted_mf_pmax
    targeted_mf_pmin: targeted_mf_pmin
    gen_nrbc_spec: gen_nrbc_spec
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    a: a
    strength: strength
    new_fan_definition: new_fan_definition
    return_type: str
class phase_3(NamedObject[phase_3_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_3_child
    return_type: str
class exhaust_fan_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_3
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    outlet_number: outlet_number
    pressure_spec_method: pressure_spec_method
    press_spec: press_spec
    frame_of_reference: frame_of_reference
    phase_spec: phase_spec
    ht_local: ht_local
    p: p
    p_profile_multiplier: p_profile_multiplier
    ht_bottom: ht_bottom
    den_spec: den_spec
    t0: t0
    direction_spec: direction_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fmean2: fmean2
    fvar: fvar
    fvar2: fvar2
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    vof_spec: vof_spec
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    mixing_plane_thread: mixing_plane_thread
    ac_options: ac_options
    p_backflow_spec: p_backflow_spec
    p_backflow_spec_gen: p_backflow_spec_gen
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    prevent_reverse_flow: prevent_reverse_flow
    radial: radial
    avg_press_spec: avg_press_spec
    press_averaging_method: press_averaging_method
    targeted_mf_boundary: targeted_mf_boundary
    targeted_mf: targeted_mf
    targeted_mf_pmax: targeted_mf_pmax
    targeted_mf_pmin: targeted_mf_pmin
    gen_nrbc_spec: gen_nrbc_spec
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    a: a
    strength: strength
    new_fan_definition: new_fan_definition
    return_type: str
class exhaust_fan(NamedObject[exhaust_fan_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: exhaust_fan_child
    return_type: str
class porous_jump_turb_wall_treatment(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dir(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class average_dp(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class c(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class limit_range(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class v_min(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class v_max(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class profile_dp(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dp_profile(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class swirl_model(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_vr(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fr(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class hub(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class profile_vt(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vt_profile(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class profile_vr(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vr_profile(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class swirl_factor(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_4_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    porous_jump_turb_wall_treatment: porous_jump_turb_wall_treatment
    dir: dir
    average_dp: average_dp
    c: c
    limit_range: limit_range
    v_min: v_min
    v_max: v_max
    strength: strength
    profile_dp: profile_dp
    dp_profile: dp_profile
    swirl_model: swirl_model
    fan_vr: fan_vr
    fr: fr
    hub: hub
    axis_origin_component: axis_origin_component_1
    axis_direction_component: axis_direction_component_1
    profile_vt: profile_vt
    vt_profile: vt_profile
    profile_vr: profile_vr
    vr_profile: vr_profile
    swirl_factor: swirl_factor
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    new_fan_definition: new_fan_definition
    return_type: str
class phase_4(NamedObject[phase_4_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_4_child
    return_type: str
class fan_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_4
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    porous_jump_turb_wall_treatment: porous_jump_turb_wall_treatment
    dir: dir
    average_dp: average_dp
    c: c
    limit_range: limit_range
    v_min: v_min
    v_max: v_max
    strength: strength
    profile_dp: profile_dp
    dp_profile: dp_profile
    swirl_model: swirl_model
    fan_vr: fan_vr
    fr: fr
    hub: hub
    axis_origin_component: axis_origin_component_1
    axis_direction_component: axis_direction_component_1
    profile_vt: profile_vt
    vt_profile: vt_profile
    profile_vr: profile_vr
    vr_profile: vr_profile
    swirl_factor: swirl_factor
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    new_fan_definition: new_fan_definition
    return_type: str
class fan(NamedObject[fan_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: fan_child
    return_type: str
class geometry_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_2
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    return_type: str
class geometry(NamedObject[geometry_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: geometry_child
    return_type: str
class inlet_number(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class p0(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class supersonic_or_initial_gauge_pressure(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class flow_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ht_total(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class vmag(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class direction_vector_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class direction_vector_components(ListObject[direction_vector_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: direction_vector_components_child
    return_type: str
class les_spec_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rfg_number_of_modes(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vm_number_of_vortices(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vm_streamwise_fluct(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vm_mass_conservation(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class volumetric_synthetic_turbulence_generator(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class volumetric_synthetic_turbulence_generator_option(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class volumetric_synthetic_turbulence_generator_option_thickness(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class equ_required(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_bccustom(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_lwc(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_dtemp(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_ddiam(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_dv(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_dx(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_dy(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_dz(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_dpm_surface_injection(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_dpm_inj_nstream(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_icc(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_ctemp(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_cdiam(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_cv(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_cx(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_cy(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_cz(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_vrh(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_vrh_1(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_vc(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class les_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class b(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class phase_5_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    inlet_number: inlet_number
    phase_spec: phase_spec
    frame_of_reference: frame_of_reference
    p0: p0
    supersonic_or_initial_gauge_pressure: supersonic_or_initial_gauge_pressure
    t0: t0
    direction_spec: direction_spec
    flow_spec: flow_spec
    ht_local: ht_local
    ht_total: ht_total
    vmag: vmag
    ht_bottom: ht_bottom
    den_spec: den_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    direction_vector_components: direction_vector_components
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    les_spec_name: les_spec_name
    rfg_number_of_modes: rfg_number_of_modes
    vm_number_of_vortices: vm_number_of_vortices
    vm_streamwise_fluct: vm_streamwise_fluct
    vm_mass_conservation: vm_mass_conservation
    volumetric_synthetic_turbulence_generator: volumetric_synthetic_turbulence_generator
    volumetric_synthetic_turbulence_generator_option: volumetric_synthetic_turbulence_generator_option
    volumetric_synthetic_turbulence_generator_option_thickness: volumetric_synthetic_turbulence_generator_option_thickness
    prevent_reverse_flow: prevent_reverse_flow
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    equ_required: equ_required
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    mixing_plane_thread: mixing_plane_thread
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    ac_options: ac_options
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    les_spec: les_spec
    b: b
    strength: strength
    return_type: str
class phase_5(NamedObject[phase_5_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_5_child
    return_type: str
class inlet_vent_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_5
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    inlet_number: inlet_number
    phase_spec: phase_spec
    frame_of_reference: frame_of_reference
    p0: p0
    supersonic_or_initial_gauge_pressure: supersonic_or_initial_gauge_pressure
    t0: t0
    direction_spec: direction_spec
    flow_spec: flow_spec
    ht_local: ht_local
    ht_total: ht_total
    vmag: vmag
    ht_bottom: ht_bottom
    den_spec: den_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    direction_vector_components: direction_vector_components
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    les_spec_name: les_spec_name
    rfg_number_of_modes: rfg_number_of_modes
    vm_number_of_vortices: vm_number_of_vortices
    vm_streamwise_fluct: vm_streamwise_fluct
    vm_mass_conservation: vm_mass_conservation
    volumetric_synthetic_turbulence_generator: volumetric_synthetic_turbulence_generator
    volumetric_synthetic_turbulence_generator_option: volumetric_synthetic_turbulence_generator_option
    volumetric_synthetic_turbulence_generator_option_thickness: volumetric_synthetic_turbulence_generator_option_thickness
    prevent_reverse_flow: prevent_reverse_flow
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    equ_required: equ_required
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    mixing_plane_thread: mixing_plane_thread
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    ac_options: ac_options
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    les_spec: les_spec
    b: b
    strength: strength
    return_type: str
class inlet_vent(NamedObject[inlet_vent_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: inlet_vent_child
    return_type: str
class fan_omega(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_origin_components_child(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fan_origin_components(ListObject[fan_origin_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: fan_origin_components_child
    return_type: str
class phase_6_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    inlet_number: inlet_number
    phase_spec: phase_spec
    frame_of_reference: frame_of_reference
    p0: p0
    supersonic_or_initial_gauge_pressure: supersonic_or_initial_gauge_pressure
    t0: t0
    direction_spec: direction_spec
    flow_spec: flow_spec
    ht_local: ht_local
    ht_total: ht_total
    vmag: vmag
    ht_bottom: ht_bottom
    den_spec: den_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    direction_vector_components: direction_vector_components
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    les_spec_name: les_spec_name
    rfg_number_of_modes: rfg_number_of_modes
    vm_number_of_vortices: vm_number_of_vortices
    vm_streamwise_fluct: vm_streamwise_fluct
    vm_mass_conservation: vm_mass_conservation
    volumetric_synthetic_turbulence_generator: volumetric_synthetic_turbulence_generator
    volumetric_synthetic_turbulence_generator_option: volumetric_synthetic_turbulence_generator_option
    volumetric_synthetic_turbulence_generator_option_thickness: volumetric_synthetic_turbulence_generator_option_thickness
    prevent_reverse_flow: prevent_reverse_flow
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    equ_required: equ_required
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    mixing_plane_thread: mixing_plane_thread
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    ac_options: ac_options
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    les_spec: les_spec
    a: a
    swirl_model: swirl_model
    swirl_factor: swirl_factor
    fan_omega: fan_omega
    fan_origin_components: fan_origin_components
    strength: strength
    new_fan_definition: new_fan_definition
    return_type: str
class phase_6(NamedObject[phase_6_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_6_child
    return_type: str
class intake_fan_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_6
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    inlet_number: inlet_number
    phase_spec: phase_spec
    frame_of_reference: frame_of_reference
    p0: p0
    supersonic_or_initial_gauge_pressure: supersonic_or_initial_gauge_pressure
    t0: t0
    direction_spec: direction_spec
    flow_spec: flow_spec
    ht_local: ht_local
    ht_total: ht_total
    vmag: vmag
    ht_bottom: ht_bottom
    den_spec: den_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    direction_vector_components: direction_vector_components
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    les_spec_name: les_spec_name
    rfg_number_of_modes: rfg_number_of_modes
    vm_number_of_vortices: vm_number_of_vortices
    vm_streamwise_fluct: vm_streamwise_fluct
    vm_mass_conservation: vm_mass_conservation
    volumetric_synthetic_turbulence_generator: volumetric_synthetic_turbulence_generator
    volumetric_synthetic_turbulence_generator_option: volumetric_synthetic_turbulence_generator_option
    volumetric_synthetic_turbulence_generator_option_thickness: volumetric_synthetic_turbulence_generator_option_thickness
    prevent_reverse_flow: prevent_reverse_flow
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    equ_required: equ_required
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    mixing_plane_thread: mixing_plane_thread
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    ac_options: ac_options
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    les_spec: les_spec
    a: a
    swirl_model: swirl_model
    swirl_factor: swirl_factor
    fan_omega: fan_omega
    fan_origin_components: fan_origin_components
    strength: strength
    new_fan_definition: new_fan_definition
    return_type: str
class intake_fan(NamedObject[intake_fan_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: intake_fan_child
    return_type: str
class non_overlap_zone_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_7_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    non_overlap_zone_name: non_overlap_zone_name
    return_type: str
class phase_7(NamedObject[phase_7_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_7_child
    return_type: str
class interface_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_7
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    non_overlap_zone_name: non_overlap_zone_name
    return_type: str
class interface(NamedObject[interface_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: interface_child
    return_type: str
class is_not_a_rans_les_interface(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_8_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    is_not_a_rans_les_interface: is_not_a_rans_les_interface
    return_type: str
class phase_8(NamedObject[phase_8_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_8_child
    return_type: str
class interior_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_8
    is_not_a_rans_les_interface: is_not_a_rans_les_interface
    return_type: str
class interior(NamedObject[interior_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: interior_child
    return_type: str
class mass_flow(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ec_mass_flow(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class mass_flux(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class mass_flux_ave(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class tref(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pref(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class upstream_torque(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class upstream_t_enthalpy(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class x_fan_origin(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class y_fan_origin(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class z_fan_origin(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class slip_velocity(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class velocity_ratio(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class volume_frac(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class phase_9_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    inlet_number: inlet_number
    phase_spec: phase_spec
    ht_local: ht_local
    ht_bottom: ht_bottom
    den_spec: den_spec
    frame_of_reference: frame_of_reference
    flow_spec: flow_spec
    mass_flow: mass_flow
    ec_mass_flow: ec_mass_flow
    mass_flux: mass_flux
    mass_flux_ave: mass_flux_ave
    tref: tref
    pref: pref
    upstream_torque: upstream_torque
    upstream_t_enthalpy: upstream_t_enthalpy
    t0: t0
    supersonic_or_initial_gauge_pressure: supersonic_or_initial_gauge_pressure
    direction_spec: direction_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    direction_vector_components: direction_vector_components
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    equ_required: equ_required
    swirl_model: swirl_model
    swirl_factor: swirl_factor
    x_fan_origin: x_fan_origin
    y_fan_origin: y_fan_origin
    z_fan_origin: z_fan_origin
    fan_origin_components: fan_origin_components
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    tss_scalar: tss_scalar
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    mixing_plane_thread: mixing_plane_thread
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    slip_velocity: slip_velocity
    velocity_ratio: velocity_ratio
    volume_frac: volume_frac
    granular_temperature: granular_temperature
    iac: iac
    ac_options: ac_options
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    return_type: str
class phase_9(NamedObject[phase_9_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_9_child
    return_type: str
class mass_flow_inlet_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_9
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    inlet_number: inlet_number
    phase_spec: phase_spec
    ht_local: ht_local
    ht_bottom: ht_bottom
    den_spec: den_spec
    frame_of_reference: frame_of_reference
    flow_spec: flow_spec
    mass_flow: mass_flow
    ec_mass_flow: ec_mass_flow
    mass_flux: mass_flux
    mass_flux_ave: mass_flux_ave
    tref: tref
    pref: pref
    upstream_torque: upstream_torque
    upstream_t_enthalpy: upstream_t_enthalpy
    t0: t0
    supersonic_or_initial_gauge_pressure: supersonic_or_initial_gauge_pressure
    direction_spec: direction_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    direction_vector_components: direction_vector_components
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    equ_required: equ_required
    swirl_model: swirl_model
    swirl_factor: swirl_factor
    x_fan_origin: x_fan_origin
    y_fan_origin: y_fan_origin
    z_fan_origin: z_fan_origin
    fan_origin_components: fan_origin_components
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    tss_scalar: tss_scalar
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    mixing_plane_thread: mixing_plane_thread
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    slip_velocity: slip_velocity
    velocity_ratio: velocity_ratio
    volume_frac: volume_frac
    granular_temperature: granular_temperature
    iac: iac
    ac_options: ac_options
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    return_type: str
class mass_flow_inlet(NamedObject[mass_flow_inlet_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: mass_flow_inlet_child
    return_type: str
class mass_flow_outlet_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_9
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    inlet_number: inlet_number
    phase_spec: phase_spec
    ht_local: ht_local
    ht_bottom: ht_bottom
    den_spec: den_spec
    frame_of_reference: frame_of_reference
    flow_spec: flow_spec
    mass_flow: mass_flow
    ec_mass_flow: ec_mass_flow
    mass_flux: mass_flux
    mass_flux_ave: mass_flux_ave
    tref: tref
    pref: pref
    upstream_torque: upstream_torque
    upstream_t_enthalpy: upstream_t_enthalpy
    t0: t0
    supersonic_or_initial_gauge_pressure: supersonic_or_initial_gauge_pressure
    direction_spec: direction_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    direction_vector_components: direction_vector_components
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    equ_required: equ_required
    swirl_model: swirl_model
    swirl_factor: swirl_factor
    x_fan_origin: x_fan_origin
    y_fan_origin: y_fan_origin
    z_fan_origin: z_fan_origin
    fan_origin_components: fan_origin_components
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    tss_scalar: tss_scalar
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    mixing_plane_thread: mixing_plane_thread
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    slip_velocity: slip_velocity
    velocity_ratio: velocity_ratio
    volume_frac: volume_frac
    granular_temperature: granular_temperature
    iac: iac
    ac_options: ac_options
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    return_type: str
class mass_flow_outlet(NamedObject[mass_flow_outlet_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: mass_flow_outlet_child
    return_type: str
class phase_10_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_10(NamedObject[phase_10_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_10_child
    return_type: str
class network_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_10
    return_type: str
class network(NamedObject[network_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: network_child
    return_type: str
class thermal_bc(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class temperature(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class q(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class phase_11_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    thermal_bc: thermal_bc
    temperature: temperature
    q: q
    return_type: str
class phase_11(NamedObject[phase_11_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_11_child
    return_type: str
class network_end_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_11
    thermal_bc: thermal_bc
    temperature: temperature
    q: q
    return_type: str
class network_end(NamedObject[network_end_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: network_end_child
    return_type: str
class flowrate_frac(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_12_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    flowrate_frac: flowrate_frac
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    uds_bc: uds_bc
    uds: uds
    radiation_bc: radiation_bc
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    return_type: str
class phase_12(NamedObject[phase_12_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_12_child
    return_type: str
class outflow_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_12
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    flowrate_frac: flowrate_frac
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    uds_bc: uds_bc
    uds: uds
    radiation_bc: radiation_bc
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    return_type: str
class outflow(NamedObject[outflow_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: outflow_child
    return_type: str
class phase_13_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    outlet_number: outlet_number
    pressure_spec_method: pressure_spec_method
    press_spec: press_spec
    frame_of_reference: frame_of_reference
    phase_spec: phase_spec
    ht_local: ht_local
    p: p
    p_profile_multiplier: p_profile_multiplier
    ht_bottom: ht_bottom
    den_spec: den_spec
    t0: t0
    direction_spec: direction_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fmean2: fmean2
    fvar: fvar
    fvar2: fvar2
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    vof_spec: vof_spec
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    mixing_plane_thread: mixing_plane_thread
    ac_options: ac_options
    p_backflow_spec: p_backflow_spec
    p_backflow_spec_gen: p_backflow_spec_gen
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    prevent_reverse_flow: prevent_reverse_flow
    radial: radial
    avg_press_spec: avg_press_spec
    press_averaging_method: press_averaging_method
    targeted_mf_boundary: targeted_mf_boundary
    targeted_mf: targeted_mf
    targeted_mf_pmax: targeted_mf_pmax
    targeted_mf_pmin: targeted_mf_pmin
    gen_nrbc_spec: gen_nrbc_spec
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    b: b
    strength: strength
    return_type: str
class phase_13(NamedObject[phase_13_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_13_child
    return_type: str
class outlet_vent_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_13
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    outlet_number: outlet_number
    pressure_spec_method: pressure_spec_method
    press_spec: press_spec
    frame_of_reference: frame_of_reference
    phase_spec: phase_spec
    ht_local: ht_local
    p: p
    p_profile_multiplier: p_profile_multiplier
    ht_bottom: ht_bottom
    den_spec: den_spec
    t0: t0
    direction_spec: direction_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fmean2: fmean2
    fvar: fvar
    fvar2: fvar2
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    vof_spec: vof_spec
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    mixing_plane_thread: mixing_plane_thread
    ac_options: ac_options
    p_backflow_spec: p_backflow_spec
    p_backflow_spec_gen: p_backflow_spec_gen
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    prevent_reverse_flow: prevent_reverse_flow
    radial: radial
    avg_press_spec: avg_press_spec
    press_averaging_method: press_averaging_method
    targeted_mf_boundary: targeted_mf_boundary
    targeted_mf: targeted_mf
    targeted_mf_pmax: targeted_mf_pmax
    targeted_mf_pmin: targeted_mf_pmin
    gen_nrbc_spec: gen_nrbc_spec
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    b: b
    strength: strength
    return_type: str
class outlet_vent(NamedObject[outlet_vent_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: outlet_vent_child
    return_type: str
class overset_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_2
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    return_type: str
class overset(NamedObject[overset_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: overset_child
    return_type: str
class angular(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class p_jump(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_14_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    angular: angular
    p_jump: p_jump
    return_type: str
class phase_14(NamedObject[phase_14_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_14_child
    return_type: str
class periodic_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_14
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    angular: angular
    p_jump: p_jump
    return_type: str
class periodic(NamedObject[periodic_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: periodic_child
    return_type: str
class alpha(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dm(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class c2(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class thermal_ctk(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class v_absp(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ir_absp(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ir_trans(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class v_trans(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class jump_adhesion(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class adhesion_constrained(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class adhesion_angle_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class adhesion_angle(NamedObject[adhesion_angle_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: adhesion_angle_child
    return_type: str
class phase_15_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    porous_jump_turb_wall_treatment: porous_jump_turb_wall_treatment
    alpha: alpha
    dm: dm
    c2: c2
    thermal_ctk: thermal_ctk
    solar_fluxes: solar_fluxes
    v_absp: v_absp
    ir_absp: ir_absp
    ir_trans: ir_trans
    v_trans: v_trans
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    strength: strength
    jump_adhesion: jump_adhesion
    adhesion_constrained: adhesion_constrained
    adhesion_angle: adhesion_angle
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    return_type: str
class phase_15(NamedObject[phase_15_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_15_child
    return_type: str
class porous_jump_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_15
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    porous_jump_turb_wall_treatment: porous_jump_turb_wall_treatment
    alpha: alpha
    dm: dm
    c2: c2
    thermal_ctk: thermal_ctk
    solar_fluxes: solar_fluxes
    v_absp: v_absp
    ir_absp: ir_absp
    ir_trans: ir_trans
    v_trans: v_trans
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    strength: strength
    jump_adhesion: jump_adhesion
    adhesion_constrained: adhesion_constrained
    adhesion_angle: adhesion_angle
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    return_type: str
class porous_jump(NamedObject[porous_jump_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: porous_jump_child
    return_type: str
class m(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class t(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class non_equil_boundary(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class tve(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ni_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class nj_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class nk_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class phase_16_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    p: p
    m: m
    t: t
    non_equil_boundary: non_equil_boundary
    tve: tve
    coordinate_system: coordinate_system
    ni: ni_1
    nj: nj_1
    nk: nk_1
    flow_direction_component: flow_direction_component
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    uds_bc: uds_bc
    uds: uds
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    return_type: str
class phase_16(NamedObject[phase_16_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_16_child
    return_type: str
class pressure_far_field_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_16
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    p: p
    m: m
    t: t
    non_equil_boundary: non_equil_boundary
    tve: tve
    coordinate_system: coordinate_system
    ni: ni_1
    nj: nj_1
    nk: nk_1
    flow_direction_component: flow_direction_component
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    uds_bc: uds_bc
    uds: uds
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    return_type: str
class pressure_far_field(NamedObject[pressure_far_field_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: pressure_far_field_child
    return_type: str
class phase_17_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    inlet_number: inlet_number
    phase_spec: phase_spec
    frame_of_reference: frame_of_reference
    p0: p0
    supersonic_or_initial_gauge_pressure: supersonic_or_initial_gauge_pressure
    t0: t0
    direction_spec: direction_spec
    flow_spec: flow_spec
    ht_local: ht_local
    ht_total: ht_total
    vmag: vmag
    ht_bottom: ht_bottom
    den_spec: den_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    direction_vector_components: direction_vector_components
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    les_spec_name: les_spec_name
    rfg_number_of_modes: rfg_number_of_modes
    vm_number_of_vortices: vm_number_of_vortices
    vm_streamwise_fluct: vm_streamwise_fluct
    vm_mass_conservation: vm_mass_conservation
    volumetric_synthetic_turbulence_generator: volumetric_synthetic_turbulence_generator
    volumetric_synthetic_turbulence_generator_option: volumetric_synthetic_turbulence_generator_option
    volumetric_synthetic_turbulence_generator_option_thickness: volumetric_synthetic_turbulence_generator_option_thickness
    prevent_reverse_flow: prevent_reverse_flow
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    equ_required: equ_required
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    mixing_plane_thread: mixing_plane_thread
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    ac_options: ac_options
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    les_spec: les_spec
    return_type: str
class phase_17(NamedObject[phase_17_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_17_child
    return_type: str
class pressure_inlet_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_17
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    inlet_number: inlet_number
    phase_spec: phase_spec
    frame_of_reference: frame_of_reference
    p0: p0
    supersonic_or_initial_gauge_pressure: supersonic_or_initial_gauge_pressure
    t0: t0
    direction_spec: direction_spec
    flow_spec: flow_spec
    ht_local: ht_local
    ht_total: ht_total
    vmag: vmag
    ht_bottom: ht_bottom
    den_spec: den_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    direction_vector_components: direction_vector_components
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    les_spec_name: les_spec_name
    rfg_number_of_modes: rfg_number_of_modes
    vm_number_of_vortices: vm_number_of_vortices
    vm_streamwise_fluct: vm_streamwise_fluct
    vm_mass_conservation: vm_mass_conservation
    volumetric_synthetic_turbulence_generator: volumetric_synthetic_turbulence_generator
    volumetric_synthetic_turbulence_generator_option: volumetric_synthetic_turbulence_generator_option
    volumetric_synthetic_turbulence_generator_option_thickness: volumetric_synthetic_turbulence_generator_option_thickness
    prevent_reverse_flow: prevent_reverse_flow
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    equ_required: equ_required
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    mixing_plane_thread: mixing_plane_thread
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    ac_options: ac_options
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    les_spec: les_spec
    return_type: str
class pressure_inlet(NamedObject[pressure_inlet_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: pressure_inlet_child
    return_type: str
class phase_18_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    outlet_number: outlet_number
    pressure_spec_method: pressure_spec_method
    press_spec: press_spec
    frame_of_reference: frame_of_reference
    phase_spec: phase_spec
    ht_local: ht_local
    p: p
    p_profile_multiplier: p_profile_multiplier
    ht_bottom: ht_bottom
    den_spec: den_spec
    t0: t0
    direction_spec: direction_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fmean2: fmean2
    fvar: fvar
    fvar2: fvar2
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    vof_spec: vof_spec
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    mixing_plane_thread: mixing_plane_thread
    ac_options: ac_options
    p_backflow_spec: p_backflow_spec
    p_backflow_spec_gen: p_backflow_spec_gen
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    prevent_reverse_flow: prevent_reverse_flow
    radial: radial
    avg_press_spec: avg_press_spec
    press_averaging_method: press_averaging_method
    targeted_mf_boundary: targeted_mf_boundary
    targeted_mf: targeted_mf
    targeted_mf_pmax: targeted_mf_pmax
    targeted_mf_pmin: targeted_mf_pmin
    gen_nrbc_spec: gen_nrbc_spec
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    return_type: str
class phase_18(NamedObject[phase_18_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_18_child
    return_type: str
class pressure_outlet_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_18
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel: open_channel
    outlet_number: outlet_number
    pressure_spec_method: pressure_spec_method
    press_spec: press_spec
    frame_of_reference: frame_of_reference
    phase_spec: phase_spec
    ht_local: ht_local
    p: p
    p_profile_multiplier: p_profile_multiplier
    ht_bottom: ht_bottom
    den_spec: den_spec
    t0: t0
    direction_spec: direction_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fmean2: fmean2
    fvar: fvar
    fvar2: fvar2
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    vof_spec: vof_spec
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    tss_scalar: tss_scalar
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    mixing_plane_thread: mixing_plane_thread
    ac_options: ac_options
    p_backflow_spec: p_backflow_spec
    p_backflow_spec_gen: p_backflow_spec_gen
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    prevent_reverse_flow: prevent_reverse_flow
    radial: radial
    avg_press_spec: avg_press_spec
    press_averaging_method: press_averaging_method
    targeted_mf_boundary: targeted_mf_boundary
    targeted_mf: targeted_mf
    targeted_mf_pmax: targeted_mf_pmax
    targeted_mf_pmin: targeted_mf_pmin
    gen_nrbc_spec: gen_nrbc_spec
    wsf: wsf
    wsb: wsb
    wsn: wsn
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    return_type: str
class pressure_outlet(NamedObject[pressure_outlet_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: pressure_outlet_child
    return_type: str
class kc(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class hc(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class t_1(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class q_1(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_19_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    porous_jump_turb_wall_treatment: porous_jump_turb_wall_treatment
    kc: kc
    hc: hc
    t: t_1
    q: q_1
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    strength: strength
    return_type: str
class phase_19(NamedObject[phase_19_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_19_child
    return_type: str
class radiator_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_19
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    porous_jump_turb_wall_treatment: porous_jump_turb_wall_treatment
    kc: kc
    hc: hc
    t: t_1
    q: q_1
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    strength: strength
    return_type: str
class radiator(NamedObject[radiator_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: radiator_child
    return_type: str
class vm_nvortices(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class les_embedded_fluctuations(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_20_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    les_spec_name: les_spec_name
    rfg_number_of_modes: rfg_number_of_modes
    vm_nvortices: vm_nvortices
    les_embedded_fluctuations: les_embedded_fluctuations
    return_type: str
class phase_20(NamedObject[phase_20_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_20_child
    return_type: str
class rans_les_interface_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_20
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    les_spec_name: les_spec_name
    rfg_number_of_modes: rfg_number_of_modes
    vm_nvortices: vm_nvortices
    les_embedded_fluctuations: les_embedded_fluctuations
    return_type: str
class rans_les_interface(NamedObject[rans_les_interface_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: rans_les_interface_child
    return_type: str
class pid(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class temperature_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class temperature_rise(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class heat_source(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class tinf(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mass_flow_multiplier_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class mass_flow_multiplier(NamedObject[mass_flow_multiplier_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: mass_flow_multiplier_child
    return_type: str
class phase_21_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    pid: pid
    temperature_spec: temperature_spec
    temperature_rise: temperature_rise
    heat_source: heat_source
    tinf: tinf
    hc: hc
    direction_spec: direction_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    direction_vector_components: direction_vector_components
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    mass_flow_multiplier: mass_flow_multiplier
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    return_type: str
class phase_21(NamedObject[phase_21_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_21_child
    return_type: str
class recirculation_inlet_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_21
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    pid: pid
    temperature_spec: temperature_spec
    temperature_rise: temperature_rise
    heat_source: heat_source
    tinf: tinf
    hc: hc
    direction_spec: direction_spec
    coordinate_system: coordinate_system
    flow_direction_component: flow_direction_component
    direction_vector_components: direction_vector_components
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    mass_flow_multiplier: mass_flow_multiplier
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    return_type: str
class recirculation_inlet(NamedObject[recirculation_inlet_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: recirculation_inlet_child
    return_type: str
class phase_22_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    flow_spec: flow_spec
    mass_flow: mass_flow
    mass_flux: mass_flux
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    return_type: str
class phase_22(NamedObject[phase_22_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_22_child
    return_type: str
class recirculation_outlet_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_22
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    flow_spec: flow_spec
    mass_flow: mass_flow
    mass_flux: mass_flux
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    return_type: str
class recirculation_outlet(NamedObject[recirculation_outlet_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: recirculation_outlet_child
    return_type: str
class shadow_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_2
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    return_type: str
class shadow(NamedObject[shadow_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: shadow_child
    return_type: str
class symmetry_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_2
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    return_type: str
class symmetry(NamedObject[symmetry_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: symmetry_child
    return_type: str
class open_channel_wave_bc(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ocw_vel_segregated(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class velocity_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wave_velocity_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class avg_flow_velocity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ocw_ship_vel_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ocw_ship_vmag(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class moving_object_direction_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class moving_object_direction_components(ListObject[moving_object_direction_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: moving_object_direction_components_child
    return_type: str
class ocw_sp_vel_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ocw_sp_vmag(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class secondary_phase_direction_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class secondary_phase_direction_components(ListObject[secondary_phase_direction_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: secondary_phase_direction_components_child
    return_type: str
class ocw_pp_vel_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ocw_pp_ref_ht(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ocw_pp_power_coeff(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ocw_pp_vmag(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ocw_pp_vmag_ref(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class primary_phase_direction_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class primary_phase_direction_components(ListObject[primary_phase_direction_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: primary_phase_direction_components_child
    return_type: str
class p_sup(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class velocity_component_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class velocity_component(ListObject[velocity_component_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: velocity_component_child
    return_type: str
class omega_swirl(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wave_bc_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wave_dir_spec(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wave_modeling_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class theory(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wave_ht(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wave_len(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class phase_diff(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class heading_angle(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wave_list_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    theory: theory
    wave_ht: wave_ht
    wave_len: wave_len
    phase_diff: phase_diff
    heading_angle: heading_angle
    return_type: str
class wave_list(ListObject[wave_list_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: wave_list_child
    return_type: str
class offset(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wave_list_shallow_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    theory: theory
    wave_ht: wave_ht
    wave_len: wave_len
    offset: offset
    heading_angle: heading_angle
    return_type: str
class wave_list_shallow(ListObject[wave_list_shallow_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: wave_list_shallow_child
    return_type: str
class wave_spect_method_freq(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wave_spect_factor(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wave_spect_sig_wave_ht(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wave_spect_peak_freq(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wave_spect_min_freq(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wave_spect_max_freq(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wave_spect_freq_components(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wave_spect_method_dir(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wave_spect_s(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wave_spect_mean_angle(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wave_spect_deviation(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wave_spect_dir_components(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mean_and_std_deviation(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pb_disc_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class pb_disc_components(ListObject[pb_disc_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: pb_disc_components_child
    return_type: str
class pb_disc_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    mean_and_std_deviation: mean_and_std_deviation
    pb_disc_components: pb_disc_components
    return_type: str
class phase_23_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel_wave_bc: open_channel_wave_bc
    ocw_vel_segregated: ocw_vel_segregated
    velocity_spec: velocity_spec
    frame_of_reference: frame_of_reference
    vmag: vmag
    wave_velocity_spec: wave_velocity_spec
    avg_flow_velocity: avg_flow_velocity
    ocw_ship_vel_spec: ocw_ship_vel_spec
    ocw_ship_vmag: ocw_ship_vmag
    moving_object_direction_components: moving_object_direction_components
    ocw_sp_vel_spec: ocw_sp_vel_spec
    ocw_sp_vmag: ocw_sp_vmag
    secondary_phase_direction_components: secondary_phase_direction_components
    ocw_pp_vel_spec: ocw_pp_vel_spec
    ocw_pp_ref_ht: ocw_pp_ref_ht
    ocw_pp_power_coeff: ocw_pp_power_coeff
    ocw_pp_vmag: ocw_pp_vmag
    ocw_pp_vmag_ref: ocw_pp_vmag_ref
    primary_phase_direction_components: primary_phase_direction_components
    p_sup: p_sup
    coordinate_system: coordinate_system
    velocity_component: velocity_component
    flow_direction_component: flow_direction_component
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    omega_swirl: omega_swirl
    phase_spec: phase_spec
    wave_bc_type: wave_bc_type
    ht_local: ht_local
    ht_bottom: ht_bottom
    wave_dir_spec: wave_dir_spec
    wave_modeling_type: wave_modeling_type
    wave_list: wave_list
    wave_list_shallow: wave_list_shallow
    wave_spect_method_freq: wave_spect_method_freq
    wave_spect_factor: wave_spect_factor
    wave_spect_sig_wave_ht: wave_spect_sig_wave_ht
    wave_spect_peak_freq: wave_spect_peak_freq
    wave_spect_min_freq: wave_spect_min_freq
    wave_spect_max_freq: wave_spect_max_freq
    wave_spect_freq_components: wave_spect_freq_components
    wave_spect_method_dir: wave_spect_method_dir
    wave_spect_s: wave_spect_s
    wave_spect_mean_angle: wave_spect_mean_angle
    wave_spect_deviation: wave_spect_deviation
    wave_spect_dir_components: wave_spect_dir_components
    t: t
    non_equil_boundary: non_equil_boundary
    tve: tve
    les_spec_name: les_spec_name
    rfg_number_of_modes: rfg_number_of_modes
    vm_number_of_vortices: vm_number_of_vortices
    vm_streamwise_fluct: vm_streamwise_fluct
    vm_mass_conservation: vm_mass_conservation
    volumetric_synthetic_turbulence_generator: volumetric_synthetic_turbulence_generator
    volumetric_synthetic_turbulence_generator_option: volumetric_synthetic_turbulence_generator_option
    volumetric_synthetic_turbulence_generator_option_thickness: volumetric_synthetic_turbulence_generator_option_thickness
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    equ_required: equ_required
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc_1
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    p: p
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    tss_scalar: tss_scalar
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    mixing_plane_thread: mixing_plane_thread
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    ac_options: ac_options
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    les_spec: les_spec
    return_type: str
class phase_23(NamedObject[phase_23_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_23_child
    return_type: str
class velocity_inlet_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_23
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    open_channel_wave_bc: open_channel_wave_bc
    ocw_vel_segregated: ocw_vel_segregated
    velocity_spec: velocity_spec
    frame_of_reference: frame_of_reference
    vmag: vmag
    wave_velocity_spec: wave_velocity_spec
    avg_flow_velocity: avg_flow_velocity
    ocw_ship_vel_spec: ocw_ship_vel_spec
    ocw_ship_vmag: ocw_ship_vmag
    moving_object_direction_components: moving_object_direction_components
    ocw_sp_vel_spec: ocw_sp_vel_spec
    ocw_sp_vmag: ocw_sp_vmag
    secondary_phase_direction_components: secondary_phase_direction_components
    ocw_pp_vel_spec: ocw_pp_vel_spec
    ocw_pp_ref_ht: ocw_pp_ref_ht
    ocw_pp_power_coeff: ocw_pp_power_coeff
    ocw_pp_vmag: ocw_pp_vmag
    ocw_pp_vmag_ref: ocw_pp_vmag_ref
    primary_phase_direction_components: primary_phase_direction_components
    p_sup: p_sup
    coordinate_system: coordinate_system
    velocity_component: velocity_component
    flow_direction_component: flow_direction_component
    axis_direction_component: axis_direction_component_1
    axis_origin_component: axis_origin_component_1
    omega_swirl: omega_swirl
    phase_spec: phase_spec
    wave_bc_type: wave_bc_type
    ht_local: ht_local
    ht_bottom: ht_bottom
    wave_dir_spec: wave_dir_spec
    wave_modeling_type: wave_modeling_type
    wave_list: wave_list
    wave_list_shallow: wave_list_shallow
    wave_spect_method_freq: wave_spect_method_freq
    wave_spect_factor: wave_spect_factor
    wave_spect_sig_wave_ht: wave_spect_sig_wave_ht
    wave_spect_peak_freq: wave_spect_peak_freq
    wave_spect_min_freq: wave_spect_min_freq
    wave_spect_max_freq: wave_spect_max_freq
    wave_spect_freq_components: wave_spect_freq_components
    wave_spect_method_dir: wave_spect_method_dir
    wave_spect_s: wave_spect_s
    wave_spect_mean_angle: wave_spect_mean_angle
    wave_spect_deviation: wave_spect_deviation
    wave_spect_dir_components: wave_spect_dir_components
    t: t
    non_equil_boundary: non_equil_boundary
    tve: tve
    les_spec_name: les_spec_name
    rfg_number_of_modes: rfg_number_of_modes
    vm_number_of_vortices: vm_number_of_vortices
    vm_streamwise_fluct: vm_streamwise_fluct
    vm_mass_conservation: vm_mass_conservation
    volumetric_synthetic_turbulence_generator: volumetric_synthetic_turbulence_generator
    volumetric_synthetic_turbulence_generator_option: volumetric_synthetic_turbulence_generator_option
    volumetric_synthetic_turbulence_generator_option_thickness: volumetric_synthetic_turbulence_generator_option_thickness
    ke_spec: ke_spec
    nut: nut
    kl: kl
    intermit: intermit
    k: k
    e: e
    o: o
    v2: v2
    turb_intensity: turb_intensity
    turb_length_scale: turb_length_scale
    turb_hydraulic_diam: turb_hydraulic_diam
    turb_viscosity_ratio: turb_viscosity_ratio
    turb_viscosity_ratio_profile: turb_viscosity_ratio_profile
    rst_spec: rst_spec
    uu: uu
    vv: vv
    ww: ww
    uv: uv
    vw: vw
    uw: uw
    ksgs_spec: ksgs_spec
    ksgs: ksgs
    sgs_turb_intensity: sgs_turb_intensity
    granular_temperature: granular_temperature
    iac: iac
    lsfun: lsfun
    volume_fraction: volume_fraction
    species_in_mole_fractions: species_in_mole_fractions
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    prob_mode_1: prob_mode_1
    prob_mode_2: prob_mode_2
    prob_mode_3: prob_mode_3
    equ_required: equ_required
    uds_bc: uds_bc
    uds: uds
    pb_disc_bc: pb_disc_bc
    pb_disc: pb_disc_1
    pb_qmom_bc: pb_qmom_bc
    pb_qmom: pb_qmom
    pb_smm_bc: pb_smm_bc
    pb_smm: pb_smm
    pb_dqmom_bc: pb_dqmom_bc
    pb_dqmom: pb_dqmom
    p: p
    premixc: premixc
    premixc_var: premixc_var
    ecfm_sigma: ecfm_sigma
    inert: inert
    pollut_no: pollut_no
    pollut_hcn: pollut_hcn
    pollut_nh3: pollut_nh3
    pollut_n2o: pollut_n2o
    pollut_urea: pollut_urea
    pollut_hnco: pollut_hnco
    pollut_nco: pollut_nco
    pollut_so2: pollut_so2
    pollut_h2s: pollut_h2s
    pollut_so3: pollut_so3
    pollut_sh: pollut_sh
    pollut_so: pollut_so
    pollut_soot: pollut_soot
    pollut_nuclei: pollut_nuclei
    pollut_ctar: pollut_ctar
    pollut_hg: pollut_hg
    pollut_hgcl2: pollut_hgcl2
    pollut_hcl: pollut_hcl
    pollut_hgo: pollut_hgo
    pollut_cl: pollut_cl
    pollut_cl2: pollut_cl2
    pollut_hgcl: pollut_hgcl
    pollut_hocl: pollut_hocl
    radiation_bc: radiation_bc
    radial_direction_component: radial_direction_component
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    parallel_collimated_beam: parallel_collimated_beam
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    t_b_b_spec: t_b_b_spec
    t_b_b: t_b_b
    in_emiss: in_emiss
    fmean: fmean
    fvar: fvar
    fmean2: fmean2
    fvar2: fvar2
    tss_scalar: tss_scalar
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_udf: dpm_bc_udf
    fensapice_flow_bc_subtype: fensapice_flow_bc_subtype
    fensapice_drop_bccustom: fensapice_drop_bccustom
    fensapice_drop_lwc: fensapice_drop_lwc
    fensapice_drop_dtemp: fensapice_drop_dtemp
    fensapice_drop_ddiam: fensapice_drop_ddiam
    fensapice_drop_dv: fensapice_drop_dv
    fensapice_drop_dx: fensapice_drop_dx
    fensapice_drop_dy: fensapice_drop_dy
    fensapice_drop_dz: fensapice_drop_dz
    fensapice_dpm_surface_injection: fensapice_dpm_surface_injection
    fensapice_dpm_inj_nstream: fensapice_dpm_inj_nstream
    fensapice_drop_icc: fensapice_drop_icc
    fensapice_drop_ctemp: fensapice_drop_ctemp
    fensapice_drop_cdiam: fensapice_drop_cdiam
    fensapice_drop_cv: fensapice_drop_cv
    fensapice_drop_cx: fensapice_drop_cx
    fensapice_drop_cy: fensapice_drop_cy
    fensapice_drop_cz: fensapice_drop_cz
    fensapice_drop_vrh: fensapice_drop_vrh
    fensapice_drop_vrh_1: fensapice_drop_vrh_1
    fensapice_drop_vc: fensapice_drop_vc
    mixing_plane_thread: mixing_plane_thread
    solar_fluxes: solar_fluxes
    solar_shining_factor: solar_shining_factor
    radiating_s2s_surface: radiating_s2s_surface
    ac_options: ac_options
    impedance_0: impedance_0
    impedance_1: impedance_1
    impedance_2: impedance_2
    ac_wave: ac_wave
    les_spec: les_spec
    return_type: str
class velocity_inlet(NamedObject[velocity_inlet_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: velocity_inlet_child
    return_type: str
class d(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class q_dot(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class h(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class tinf_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class planar_conduction(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class thickness(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class qdot(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class shell_conduction_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    thickness: thickness
    material: material
    qdot: qdot
    return_type: str
class shell_conduction(ListObject[shell_conduction_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: shell_conduction_child
    return_type: str
class thin_wall_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    thickness: thickness
    material: material
    qdot: qdot
    return_type: str
class thin_wall(ListObject[thin_wall_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: thin_wall_child
    return_type: str
class motion_bc(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class shear_bc(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rough_bc(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class moving(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class relative(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rotating(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class component_of_wall_translation_child(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class component_of_wall_translation(ListObject[component_of_wall_translation_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: component_of_wall_translation_child
    return_type: str
class components_1(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class x_velocity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class y_velocity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class z_velocity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class velocity_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class velocity_components(ListObject[velocity_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: velocity_components_child
    return_type: str
class ex_emiss(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class trad(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class int_rad(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class trad_internal(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class area_enhancement_factor(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class rough_option(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rough_nasa(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rough_shin_et_al(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rough_data(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class roughness_height(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class roughness_const(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class roughness_height_cp(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class roughness_const_cp(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class roughness_const_nasa(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class roughness_const_shin(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class roughness_const_data(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class variable_roughness(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class free_stream_velocity(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class free_stream_temp(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class characteristic_length(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class free_stream_temp_cp(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class characteristic_length_cp(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class liquid_content(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class liquid_content_cp(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class droplet_diameter(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class dpm_bc_norm_coeff(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class dpm_bc_tang_coeff(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class dpm_bc_frictn_coeff(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class dpm_film_splash_nsamp(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_crit_temp_option(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_critical_temp_factor(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_calibratable_temp(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_impingement_splashing_model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_upper_deposition_limit_offset(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_deposition_delta_t(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_laplace_number_constant(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_partial_evaporation_ratio(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ra_roughness(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rz_roughness(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rq_roughness(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rsm_roughness(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_generic(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class dpm_bc_erosion_c(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class dpm_bc_erosion_n(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    method: method
    number_of_coeff: number_of_coeff
    function_of: function_of
    coefficients: coefficients
    constant: constant
    piecewise_polynomial: piecewise_polynomial
    piecewise_linear: piecewise_linear
    return_type: str
class dpm_bc_erosion_finnie(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_finnie_k(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_finnie_vel_exp(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_finnie_max_erosion_angle(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_mclaury(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_mclaury_a(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_mclaury_vel_exp(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_mclaury_transition_angle(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_mclaury_b(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_mclaury_c(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_mclaury_w(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_mclaury_x(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_mclaury_y(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_oka(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_oka_e90(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_oka_hv(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_oka_n1(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_oka_n2(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_oka_k2(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_oka_k3(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_oka_dref(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_oka_vref(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_dnv(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_dnv_k(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_dnv_n(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_dnv_ductile(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_shear(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_shear_v(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_shear_c(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_shear_packing_limit(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_bc_erosion_shielding(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_wall_heat_exchange(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_film_condensation(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_film_bl_model(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_particle_stripping(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_critical_shear_stress(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_film_separation_model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_critical_we_number(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_film_separation_angle(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_allow_lwf_to_vof(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_allow_vof_to_lwf(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_initialize_lwf(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_initial_height(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_velocity_child(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_velocity(ListObject[film_velocity_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: film_velocity_child
    return_type: str
class dpm_initial_temperature(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpm_initial_injection(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_parcel_surface_area_density(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class minimum_number_of_parcels_per_face(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class band_in_emiss_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class band_in_emiss(NamedObject[band_in_emiss_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: band_in_emiss_child
    return_type: str
class mc_bsource_p(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mc_poldfun_p(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class polar_func_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mc_polar_expr(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class polar_real_angle(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class polar_real_intensity(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class polar_pair_list_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    polar_real_angle: polar_real_angle
    polar_real_intensity: polar_real_intensity
    return_type: str
class polar_pair_list(ListObject[polar_pair_list_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: polar_pair_list_child
    return_type: str
class pold_pair_list_rad(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class component_of_radiation_direction_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class component_of_radiation_direction(ListObject[component_of_radiation_direction_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: component_of_radiation_direction_child
    return_type: str
class band_diffuse_frac_child(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class band_diffuse_frac(NamedObject[band_diffuse_frac_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: band_diffuse_frac_child
    return_type: str
class critical_zone(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fpsc(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class v_transmissivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ir_transmissivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class v_opq_absorbtivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ir_opq_absorbtivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class v_st_absorbtivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ir_st_absorbtivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class d_st_absorbtivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class d_transmissivity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class fsi_interface(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class partially_catalytic(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class partially_catalytic_material(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class partially_catalytic_recombination_coefficient_o(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class partially_catalytic_recombination_coefficient_n(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class partially_catalytic_recombination_model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class species_spec_child(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class species_spec(NamedObject[species_spec_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: species_spec_child
    return_type: str
class elec_potential_jump(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class elec_potential_resistance(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class echem_reaction(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class elec_potential_mechs(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class faradaic_heat(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class li_ion_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class li_ion_value(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class per_dispx(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class per_dispy(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class per_dispz(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class per_imagx(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class per_imagy(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class per_imagz(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class freq(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class amp(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class nodal_diam(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pass_number(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class fwd(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class aero(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cmplx(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class norm(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class method_1(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class gtemp_bc(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class g_temperature(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class g_qflux(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class wall_restitution_coeff(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class origin_position_of_rotation_axis_child(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class origin_position_of_rotation_axis(ListObject[origin_position_of_rotation_axis_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: origin_position_of_rotation_axis_child
    return_type: str
class direction_component_of_rotation_axis_child(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class direction_component_of_rotation_axis(ListObject[direction_component_of_rotation_axis_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: direction_component_of_rotation_axis_child
    return_type: str
class specified_shear(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class shear_y(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class shear_z(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class shear_stress_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class shear_stress_components(ListObject[shear_stress_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: shear_stress_components_child
    return_type: str
class fslip(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class eslip(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class surf_tens_grad(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class contact_resistance(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class surf_washcoat_factor(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ablation_select_model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ablation_vielle_a(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ablation_vielle_n(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ablation_surfacerxn_density(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ablation_flux(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ablation_species_mf_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class ablation_species_mf(NamedObject[ablation_species_mf_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: ablation_species_mf_child
    return_type: str
class specular_coeff(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mom_accom_coef(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class therm_accom_coef(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class eve_accom_coef(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_wall(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_wall_bc(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_height(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class flux_momentum_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class flux_momentum_components(ListObject[flux_momentum_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: flux_momentum_components_child
    return_type: str
class film_relative_vel(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_bc_imp_press(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_temperature(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class film_scalar(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class film_source(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_h_src(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class film_u_src(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class film_v_src(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class film_w_src(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class momentum_source_components_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class momentum_source_components(ListObject[momentum_source_components_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: momentum_source_components_child
    return_type: str
class film_t_src(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class film_s_src(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class film_phase_change(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_phase_change_model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_cond_const(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_vapo_const(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_cond_rate(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class film_vapo_rate(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class film_momentum_coupling(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_splash_wall(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_boundary_separation(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_impinge_model(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_splash_nparc(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_crit_temp_factor(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_roughness_ra(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_roughness_rz(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_upper_deposition_limit_offset(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_deposition_delta_t(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_laplace_number_constant(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_partial_evap_ratio(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_contact_angle(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_contact_angle_mean(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class film_contact_angle_rstd(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_contact_angle_beta(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_vof_coupling_high(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_vof_trans_high(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_vof_trans_high_relax(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_vof_coupling_low(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_vof_trans_low(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class film_vof_trans_low_relax(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class caf(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant
    profile_name: profile_name
    field_name: field_name
    udf: udf
    return_type: str
class thermal_stabilization(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class scale_factor(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class stab_method(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_ice_icing_mode(Integer, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_ice_hflux(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_ice_hflux_1(Real, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fensapice_drop_vwet(Boolean, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_24_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    d: d
    q_dot: q_dot
    material: material
    thermal_bc: thermal_bc
    t: t
    q: q
    h: h
    tinf: tinf_1
    planar_conduction: planar_conduction
    shell_conduction: shell_conduction
    thin_wall: thin_wall
    motion_bc: motion_bc
    shear_bc: shear_bc
    rough_bc: rough_bc
    moving: moving
    relative: relative
    rotating: rotating
    vmag: vmag
    component_of_wall_translation: component_of_wall_translation
    components: components_1
    x_velocity: x_velocity
    y_velocity: y_velocity
    z_velocity: z_velocity
    velocity_components: velocity_components
    in_emiss: in_emiss
    ex_emiss: ex_emiss
    trad: trad
    int_rad: int_rad
    trad_internal: trad_internal
    area_enhancement_factor: area_enhancement_factor
    rough_option: rough_option
    rough_nasa: rough_nasa
    rough_shin_et_al: rough_shin_et_al
    rough_data: rough_data
    roughness_height: roughness_height
    roughness_const: roughness_const
    roughness_height_cp: roughness_height_cp
    roughness_const_cp: roughness_const_cp
    roughness_const_nasa: roughness_const_nasa
    roughness_const_shin: roughness_const_shin
    roughness_const_data: roughness_const_data
    variable_roughness: variable_roughness
    free_stream_velocity: free_stream_velocity
    free_stream_temp: free_stream_temp
    characteristic_length: characteristic_length
    free_stream_temp_cp: free_stream_temp_cp
    characteristic_length_cp: characteristic_length_cp
    liquid_content: liquid_content
    liquid_content_cp: liquid_content_cp
    droplet_diameter: droplet_diameter
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_norm_coeff: dpm_bc_norm_coeff
    dpm_bc_tang_coeff: dpm_bc_tang_coeff
    dpm_bc_frictn_coeff: dpm_bc_frictn_coeff
    dpm_bc_udf: dpm_bc_udf
    dpm_film_splash_nsamp: dpm_film_splash_nsamp
    dpm_crit_temp_option: dpm_crit_temp_option
    dpm_critical_temp_factor: dpm_critical_temp_factor
    dpm_calibratable_temp: dpm_calibratable_temp
    dpm_impingement_splashing_model: dpm_impingement_splashing_model
    dpm_upper_deposition_limit_offset: dpm_upper_deposition_limit_offset
    dpm_deposition_delta_t: dpm_deposition_delta_t
    dpm_laplace_number_constant: dpm_laplace_number_constant
    dpm_partial_evaporation_ratio: dpm_partial_evaporation_ratio
    ra_roughness: ra_roughness
    rz_roughness: rz_roughness
    rq_roughness: rq_roughness
    rsm_roughness: rsm_roughness
    dpm_bc_erosion_generic: dpm_bc_erosion_generic
    dpm_bc_erosion: dpm_bc_erosion
    dpm_bc_erosion_c: dpm_bc_erosion_c
    dpm_bc_erosion_n: dpm_bc_erosion_n
    dpm_bc_erosion_finnie: dpm_bc_erosion_finnie
    dpm_bc_erosion_finnie_k: dpm_bc_erosion_finnie_k
    dpm_bc_erosion_finnie_vel_exp: dpm_bc_erosion_finnie_vel_exp
    dpm_bc_erosion_finnie_max_erosion_angle: dpm_bc_erosion_finnie_max_erosion_angle
    dpm_bc_erosion_mclaury: dpm_bc_erosion_mclaury
    dpm_bc_erosion_mclaury_a: dpm_bc_erosion_mclaury_a
    dpm_bc_erosion_mclaury_vel_exp: dpm_bc_erosion_mclaury_vel_exp
    dpm_bc_erosion_mclaury_transition_angle: dpm_bc_erosion_mclaury_transition_angle
    dpm_bc_erosion_mclaury_b: dpm_bc_erosion_mclaury_b
    dpm_bc_erosion_mclaury_c: dpm_bc_erosion_mclaury_c
    dpm_bc_erosion_mclaury_w: dpm_bc_erosion_mclaury_w
    dpm_bc_erosion_mclaury_x: dpm_bc_erosion_mclaury_x
    dpm_bc_erosion_mclaury_y: dpm_bc_erosion_mclaury_y
    dpm_bc_erosion_oka: dpm_bc_erosion_oka
    dpm_bc_erosion_oka_e90: dpm_bc_erosion_oka_e90
    dpm_bc_erosion_oka_hv: dpm_bc_erosion_oka_hv
    dpm_bc_erosion_oka_n1: dpm_bc_erosion_oka_n1
    dpm_bc_erosion_oka_n2: dpm_bc_erosion_oka_n2
    dpm_bc_erosion_oka_k2: dpm_bc_erosion_oka_k2
    dpm_bc_erosion_oka_k3: dpm_bc_erosion_oka_k3
    dpm_bc_erosion_oka_dref: dpm_bc_erosion_oka_dref
    dpm_bc_erosion_oka_vref: dpm_bc_erosion_oka_vref
    dpm_bc_erosion_dnv: dpm_bc_erosion_dnv
    dpm_bc_erosion_dnv_k: dpm_bc_erosion_dnv_k
    dpm_bc_erosion_dnv_n: dpm_bc_erosion_dnv_n
    dpm_bc_erosion_dnv_ductile: dpm_bc_erosion_dnv_ductile
    dpm_bc_erosion_shear: dpm_bc_erosion_shear
    dpm_bc_erosion_shear_v: dpm_bc_erosion_shear_v
    dpm_bc_erosion_shear_c: dpm_bc_erosion_shear_c
    dpm_bc_erosion_shear_packing_limit: dpm_bc_erosion_shear_packing_limit
    dpm_bc_erosion_shielding: dpm_bc_erosion_shielding
    dpm_wall_heat_exchange: dpm_wall_heat_exchange
    dpm_film_condensation: dpm_film_condensation
    dpm_film_bl_model: dpm_film_bl_model
    dpm_particle_stripping: dpm_particle_stripping
    dpm_critical_shear_stress: dpm_critical_shear_stress
    dpm_film_separation_model: dpm_film_separation_model
    dpm_critical_we_number: dpm_critical_we_number
    dpm_film_separation_angle: dpm_film_separation_angle
    dpm_allow_lwf_to_vof: dpm_allow_lwf_to_vof
    dpm_allow_vof_to_lwf: dpm_allow_vof_to_lwf
    dpm_initialize_lwf: dpm_initialize_lwf
    dpm_initial_height: dpm_initial_height
    film_velocity: film_velocity
    dpm_initial_temperature: dpm_initial_temperature
    dpm_initial_injection: dpm_initial_injection
    film_parcel_surface_area_density: film_parcel_surface_area_density
    minimum_number_of_parcels_per_face: minimum_number_of_parcels_per_face
    band_in_emiss: band_in_emiss
    radiation_bc: radiation_bc
    mc_bsource_p: mc_bsource_p
    mc_poldfun_p: mc_poldfun_p
    polar_func_type: polar_func_type
    mc_polar_expr: mc_polar_expr
    polar_pair_list: polar_pair_list
    pold_pair_list_rad: pold_pair_list_rad
    component_of_radiation_direction: component_of_radiation_direction
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    band_diffuse_frac: band_diffuse_frac
    radiating_s2s_surface: radiating_s2s_surface
    critical_zone: critical_zone
    fpsc: fpsc
    parallel_collimated_beam: parallel_collimated_beam
    solar_fluxes: solar_fluxes
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    v_transmissivity: v_transmissivity
    ir_transmissivity: ir_transmissivity
    v_opq_absorbtivity: v_opq_absorbtivity
    ir_opq_absorbtivity: ir_opq_absorbtivity
    v_st_absorbtivity: v_st_absorbtivity
    ir_st_absorbtivity: ir_st_absorbtivity
    d_st_absorbtivity: d_st_absorbtivity
    d_transmissivity: d_transmissivity
    fsi_interface: fsi_interface
    react: react
    partially_catalytic: partially_catalytic
    partially_catalytic_material: partially_catalytic_material
    partially_catalytic_recombination_coefficient_o: partially_catalytic_recombination_coefficient_o
    partially_catalytic_recombination_coefficient_n: partially_catalytic_recombination_coefficient_n
    partially_catalytic_recombination_model: partially_catalytic_recombination_model
    species_spec: species_spec
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    elec_potential_jump: elec_potential_jump
    elec_potential_resistance: elec_potential_resistance
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    echem_reaction: echem_reaction
    elec_potential_mechs: elec_potential_mechs
    faradaic_heat: faradaic_heat
    li_ion_type: li_ion_type
    li_ion_value: li_ion_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    per_dispx: per_dispx
    per_dispy: per_dispy
    per_dispz: per_dispz
    per_imagx: per_imagx
    per_imagy: per_imagy
    per_imagz: per_imagz
    freq: freq
    amp: amp
    nodal_diam: nodal_diam
    pass_number: pass_number
    fwd: fwd
    aero: aero
    cmplx: cmplx
    norm: norm
    method: method_1
    uds_bc: uds_bc
    uds: uds
    gtemp_bc: gtemp_bc
    g_temperature: g_temperature
    g_qflux: g_qflux
    wall_restitution_coeff: wall_restitution_coeff
    omega: omega
    origin_position_of_rotation_axis: origin_position_of_rotation_axis
    direction_component_of_rotation_axis: direction_component_of_rotation_axis
    adhesion_angle: adhesion_angle
    specified_shear: specified_shear
    shear_y: shear_y
    shear_z: shear_z
    shear_stress_components: shear_stress_components
    fslip: fslip
    eslip: eslip
    surf_tens_grad: surf_tens_grad
    contact_resistance: contact_resistance
    reaction_mechs: reaction_mechs_1
    surf_washcoat_factor: surf_washcoat_factor
    ablation_select_model: ablation_select_model
    ablation_vielle_a: ablation_vielle_a
    ablation_vielle_n: ablation_vielle_n
    ablation_surfacerxn_density: ablation_surfacerxn_density
    ablation_flux: ablation_flux
    ablation_species_mf: ablation_species_mf
    specular_coeff: specular_coeff
    mom_accom_coef: mom_accom_coef
    therm_accom_coef: therm_accom_coef
    eve_accom_coef: eve_accom_coef
    film_wall: film_wall
    film_wall_bc: film_wall_bc
    film_height: film_height
    flux_momentum_components: flux_momentum_components
    film_relative_vel: film_relative_vel
    film_bc_imp_press: film_bc_imp_press
    film_temperature: film_temperature
    film_scalar: film_scalar
    film_source: film_source
    film_h_src: film_h_src
    film_u_src: film_u_src
    film_v_src: film_v_src
    film_w_src: film_w_src
    momentum_source_components: momentum_source_components
    film_t_src: film_t_src
    film_s_src: film_s_src
    film_phase_change: film_phase_change
    film_phase_change_model: film_phase_change_model
    film_cond_const: film_cond_const
    film_vapo_const: film_vapo_const
    film_cond_rate: film_cond_rate
    film_vapo_rate: film_vapo_rate
    film_momentum_coupling: film_momentum_coupling
    film_splash_wall: film_splash_wall
    film_boundary_separation: film_boundary_separation
    film_impinge_model: film_impinge_model
    film_splash_nparc: film_splash_nparc
    film_crit_temp_factor: film_crit_temp_factor
    film_roughness_ra: film_roughness_ra
    film_roughness_rz: film_roughness_rz
    film_upper_deposition_limit_offset: film_upper_deposition_limit_offset
    film_deposition_delta_t: film_deposition_delta_t
    film_laplace_number_constant: film_laplace_number_constant
    film_partial_evap_ratio: film_partial_evap_ratio
    film_contact_angle: film_contact_angle
    film_contact_angle_mean: film_contact_angle_mean
    film_contact_angle_rstd: film_contact_angle_rstd
    film_contact_angle_beta: film_contact_angle_beta
    film_vof_coupling_high: film_vof_coupling_high
    film_vof_trans_high: film_vof_trans_high
    film_vof_trans_high_relax: film_vof_trans_high_relax
    film_vof_coupling_low: film_vof_coupling_low
    film_vof_trans_low: film_vof_trans_low
    film_vof_trans_low_relax: film_vof_trans_low_relax
    caf: caf
    thermal_stabilization: thermal_stabilization
    scale_factor: scale_factor
    stab_method: stab_method
    fensapice_ice_icing_mode: fensapice_ice_icing_mode
    fensapice_ice_hflux: fensapice_ice_hflux
    fensapice_ice_hflux_1: fensapice_ice_hflux_1
    fensapice_drop_vwet: fensapice_drop_vwet
    return_type: str
class phase_24(NamedObject[phase_24_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_24_child
    return_type: str
class wall_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    phase: phase_24
    geom_disable: geom_disable
    geom_dir_spec: geom_dir_spec
    geom_dir_x: geom_dir_x
    geom_dir_y: geom_dir_y
    geom_dir_z: geom_dir_z
    geom_levels: geom_levels
    geom_bgthread: geom_bgthread
    d: d
    q_dot: q_dot
    material: material
    thermal_bc: thermal_bc
    t: t
    q: q
    h: h
    tinf: tinf_1
    planar_conduction: planar_conduction
    shell_conduction: shell_conduction
    thin_wall: thin_wall
    motion_bc: motion_bc
    shear_bc: shear_bc
    rough_bc: rough_bc
    moving: moving
    relative: relative
    rotating: rotating
    vmag: vmag
    component_of_wall_translation: component_of_wall_translation
    components: components_1
    x_velocity: x_velocity
    y_velocity: y_velocity
    z_velocity: z_velocity
    velocity_components: velocity_components
    in_emiss: in_emiss
    ex_emiss: ex_emiss
    trad: trad
    int_rad: int_rad
    trad_internal: trad_internal
    area_enhancement_factor: area_enhancement_factor
    rough_option: rough_option
    rough_nasa: rough_nasa
    rough_shin_et_al: rough_shin_et_al
    rough_data: rough_data
    roughness_height: roughness_height
    roughness_const: roughness_const
    roughness_height_cp: roughness_height_cp
    roughness_const_cp: roughness_const_cp
    roughness_const_nasa: roughness_const_nasa
    roughness_const_shin: roughness_const_shin
    roughness_const_data: roughness_const_data
    variable_roughness: variable_roughness
    free_stream_velocity: free_stream_velocity
    free_stream_temp: free_stream_temp
    characteristic_length: characteristic_length
    free_stream_temp_cp: free_stream_temp_cp
    characteristic_length_cp: characteristic_length_cp
    liquid_content: liquid_content
    liquid_content_cp: liquid_content_cp
    droplet_diameter: droplet_diameter
    dpm_bc_type: dpm_bc_type
    dpm_bc_collision_partner: dpm_bc_collision_partner
    reinj_inj: reinj_inj
    dpm_bc_norm_coeff: dpm_bc_norm_coeff
    dpm_bc_tang_coeff: dpm_bc_tang_coeff
    dpm_bc_frictn_coeff: dpm_bc_frictn_coeff
    dpm_bc_udf: dpm_bc_udf
    dpm_film_splash_nsamp: dpm_film_splash_nsamp
    dpm_crit_temp_option: dpm_crit_temp_option
    dpm_critical_temp_factor: dpm_critical_temp_factor
    dpm_calibratable_temp: dpm_calibratable_temp
    dpm_impingement_splashing_model: dpm_impingement_splashing_model
    dpm_upper_deposition_limit_offset: dpm_upper_deposition_limit_offset
    dpm_deposition_delta_t: dpm_deposition_delta_t
    dpm_laplace_number_constant: dpm_laplace_number_constant
    dpm_partial_evaporation_ratio: dpm_partial_evaporation_ratio
    ra_roughness: ra_roughness
    rz_roughness: rz_roughness
    rq_roughness: rq_roughness
    rsm_roughness: rsm_roughness
    dpm_bc_erosion_generic: dpm_bc_erosion_generic
    dpm_bc_erosion: dpm_bc_erosion
    dpm_bc_erosion_c: dpm_bc_erosion_c
    dpm_bc_erosion_n: dpm_bc_erosion_n
    dpm_bc_erosion_finnie: dpm_bc_erosion_finnie
    dpm_bc_erosion_finnie_k: dpm_bc_erosion_finnie_k
    dpm_bc_erosion_finnie_vel_exp: dpm_bc_erosion_finnie_vel_exp
    dpm_bc_erosion_finnie_max_erosion_angle: dpm_bc_erosion_finnie_max_erosion_angle
    dpm_bc_erosion_mclaury: dpm_bc_erosion_mclaury
    dpm_bc_erosion_mclaury_a: dpm_bc_erosion_mclaury_a
    dpm_bc_erosion_mclaury_vel_exp: dpm_bc_erosion_mclaury_vel_exp
    dpm_bc_erosion_mclaury_transition_angle: dpm_bc_erosion_mclaury_transition_angle
    dpm_bc_erosion_mclaury_b: dpm_bc_erosion_mclaury_b
    dpm_bc_erosion_mclaury_c: dpm_bc_erosion_mclaury_c
    dpm_bc_erosion_mclaury_w: dpm_bc_erosion_mclaury_w
    dpm_bc_erosion_mclaury_x: dpm_bc_erosion_mclaury_x
    dpm_bc_erosion_mclaury_y: dpm_bc_erosion_mclaury_y
    dpm_bc_erosion_oka: dpm_bc_erosion_oka
    dpm_bc_erosion_oka_e90: dpm_bc_erosion_oka_e90
    dpm_bc_erosion_oka_hv: dpm_bc_erosion_oka_hv
    dpm_bc_erosion_oka_n1: dpm_bc_erosion_oka_n1
    dpm_bc_erosion_oka_n2: dpm_bc_erosion_oka_n2
    dpm_bc_erosion_oka_k2: dpm_bc_erosion_oka_k2
    dpm_bc_erosion_oka_k3: dpm_bc_erosion_oka_k3
    dpm_bc_erosion_oka_dref: dpm_bc_erosion_oka_dref
    dpm_bc_erosion_oka_vref: dpm_bc_erosion_oka_vref
    dpm_bc_erosion_dnv: dpm_bc_erosion_dnv
    dpm_bc_erosion_dnv_k: dpm_bc_erosion_dnv_k
    dpm_bc_erosion_dnv_n: dpm_bc_erosion_dnv_n
    dpm_bc_erosion_dnv_ductile: dpm_bc_erosion_dnv_ductile
    dpm_bc_erosion_shear: dpm_bc_erosion_shear
    dpm_bc_erosion_shear_v: dpm_bc_erosion_shear_v
    dpm_bc_erosion_shear_c: dpm_bc_erosion_shear_c
    dpm_bc_erosion_shear_packing_limit: dpm_bc_erosion_shear_packing_limit
    dpm_bc_erosion_shielding: dpm_bc_erosion_shielding
    dpm_wall_heat_exchange: dpm_wall_heat_exchange
    dpm_film_condensation: dpm_film_condensation
    dpm_film_bl_model: dpm_film_bl_model
    dpm_particle_stripping: dpm_particle_stripping
    dpm_critical_shear_stress: dpm_critical_shear_stress
    dpm_film_separation_model: dpm_film_separation_model
    dpm_critical_we_number: dpm_critical_we_number
    dpm_film_separation_angle: dpm_film_separation_angle
    dpm_allow_lwf_to_vof: dpm_allow_lwf_to_vof
    dpm_allow_vof_to_lwf: dpm_allow_vof_to_lwf
    dpm_initialize_lwf: dpm_initialize_lwf
    dpm_initial_height: dpm_initial_height
    film_velocity: film_velocity
    dpm_initial_temperature: dpm_initial_temperature
    dpm_initial_injection: dpm_initial_injection
    film_parcel_surface_area_density: film_parcel_surface_area_density
    minimum_number_of_parcels_per_face: minimum_number_of_parcels_per_face
    band_in_emiss: band_in_emiss
    radiation_bc: radiation_bc
    mc_bsource_p: mc_bsource_p
    mc_poldfun_p: mc_poldfun_p
    polar_func_type: polar_func_type
    mc_polar_expr: mc_polar_expr
    polar_pair_list: polar_pair_list
    pold_pair_list_rad: pold_pair_list_rad
    component_of_radiation_direction: component_of_radiation_direction
    coll_dtheta: coll_dtheta
    coll_dphi: coll_dphi
    band_q_irrad: band_q_irrad
    band_q_irrad_diffuse: band_q_irrad_diffuse
    band_diffuse_frac: band_diffuse_frac
    radiating_s2s_surface: radiating_s2s_surface
    critical_zone: critical_zone
    fpsc: fpsc
    parallel_collimated_beam: parallel_collimated_beam
    solar_fluxes: solar_fluxes
    solar_direction: solar_direction
    solar_irradiation: solar_irradiation
    v_transmissivity: v_transmissivity
    ir_transmissivity: ir_transmissivity
    v_opq_absorbtivity: v_opq_absorbtivity
    ir_opq_absorbtivity: ir_opq_absorbtivity
    v_st_absorbtivity: v_st_absorbtivity
    ir_st_absorbtivity: ir_st_absorbtivity
    d_st_absorbtivity: d_st_absorbtivity
    d_transmissivity: d_transmissivity
    fsi_interface: fsi_interface
    react: react
    partially_catalytic: partially_catalytic
    partially_catalytic_material: partially_catalytic_material
    partially_catalytic_recombination_coefficient_o: partially_catalytic_recombination_coefficient_o
    partially_catalytic_recombination_coefficient_n: partially_catalytic_recombination_coefficient_n
    partially_catalytic_recombination_model: partially_catalytic_recombination_model
    species_spec: species_spec
    mf: mf
    elec_potential_type: elec_potential_type
    potential_value: potential_value
    elec_potential_jump: elec_potential_jump
    elec_potential_resistance: elec_potential_resistance
    dual_potential_type: dual_potential_type
    dual_potential_value: dual_potential_value
    echem_reaction: echem_reaction
    elec_potential_mechs: elec_potential_mechs
    faradaic_heat: faradaic_heat
    li_ion_type: li_ion_type
    li_ion_value: li_ion_value
    x_displacement_type: x_displacement_type
    x_displacement_value: x_displacement_value
    y_displacement_type: y_displacement_type
    y_displacement_value: y_displacement_value
    z_displacement_type: z_displacement_type
    z_displacement_value: z_displacement_value
    per_dispx: per_dispx
    per_dispy: per_dispy
    per_dispz: per_dispz
    per_imagx: per_imagx
    per_imagy: per_imagy
    per_imagz: per_imagz
    freq: freq
    amp: amp
    nodal_diam: nodal_diam
    pass_number: pass_number
    fwd: fwd
    aero: aero
    cmplx: cmplx
    norm: norm
    method: method_1
    uds_bc: uds_bc
    uds: uds
    gtemp_bc: gtemp_bc
    g_temperature: g_temperature
    g_qflux: g_qflux
    wall_restitution_coeff: wall_restitution_coeff
    omega: omega
    origin_position_of_rotation_axis: origin_position_of_rotation_axis
    direction_component_of_rotation_axis: direction_component_of_rotation_axis
    adhesion_angle: adhesion_angle
    specified_shear: specified_shear
    shear_y: shear_y
    shear_z: shear_z
    shear_stress_components: shear_stress_components
    fslip: fslip
    eslip: eslip
    surf_tens_grad: surf_tens_grad
    contact_resistance: contact_resistance
    reaction_mechs: reaction_mechs_1
    surf_washcoat_factor: surf_washcoat_factor
    ablation_select_model: ablation_select_model
    ablation_vielle_a: ablation_vielle_a
    ablation_vielle_n: ablation_vielle_n
    ablation_surfacerxn_density: ablation_surfacerxn_density
    ablation_flux: ablation_flux
    ablation_species_mf: ablation_species_mf
    specular_coeff: specular_coeff
    mom_accom_coef: mom_accom_coef
    therm_accom_coef: therm_accom_coef
    eve_accom_coef: eve_accom_coef
    film_wall: film_wall
    film_wall_bc: film_wall_bc
    film_height: film_height
    flux_momentum_components: flux_momentum_components
    film_relative_vel: film_relative_vel
    film_bc_imp_press: film_bc_imp_press
    film_temperature: film_temperature
    film_scalar: film_scalar
    film_source: film_source
    film_h_src: film_h_src
    film_u_src: film_u_src
    film_v_src: film_v_src
    film_w_src: film_w_src
    momentum_source_components: momentum_source_components
    film_t_src: film_t_src
    film_s_src: film_s_src
    film_phase_change: film_phase_change
    film_phase_change_model: film_phase_change_model
    film_cond_const: film_cond_const
    film_vapo_const: film_vapo_const
    film_cond_rate: film_cond_rate
    film_vapo_rate: film_vapo_rate
    film_momentum_coupling: film_momentum_coupling
    film_splash_wall: film_splash_wall
    film_boundary_separation: film_boundary_separation
    film_impinge_model: film_impinge_model
    film_splash_nparc: film_splash_nparc
    film_crit_temp_factor: film_crit_temp_factor
    film_roughness_ra: film_roughness_ra
    film_roughness_rz: film_roughness_rz
    film_upper_deposition_limit_offset: film_upper_deposition_limit_offset
    film_deposition_delta_t: film_deposition_delta_t
    film_laplace_number_constant: film_laplace_number_constant
    film_partial_evap_ratio: film_partial_evap_ratio
    film_contact_angle: film_contact_angle
    film_contact_angle_mean: film_contact_angle_mean
    film_contact_angle_rstd: film_contact_angle_rstd
    film_contact_angle_beta: film_contact_angle_beta
    film_vof_coupling_high: film_vof_coupling_high
    film_vof_trans_high: film_vof_trans_high
    film_vof_trans_high_relax: film_vof_trans_high_relax
    film_vof_coupling_low: film_vof_coupling_low
    film_vof_trans_low: film_vof_trans_low
    film_vof_trans_low_relax: film_vof_trans_low_relax
    caf: caf
    thermal_stabilization: thermal_stabilization
    scale_factor: scale_factor
    stab_method: stab_method
    fensapice_ice_icing_mode: fensapice_ice_icing_mode
    fensapice_ice_hflux: fensapice_ice_hflux
    fensapice_ice_hflux_1: fensapice_ice_hflux_1
    fensapice_drop_vwet: fensapice_drop_vwet
    return_type: str
class wall(NamedObject[wall_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def change_type(self, zone_list: list[str], new_type: str):
        """
        'change_type' command.
        """
    child_object_type: wall_child
    return_type: str
class boundary_conditions(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    axis: axis
    degassing: degassing
    exhaust_fan: exhaust_fan
    fan: fan
    geometry: geometry
    inlet_vent: inlet_vent
    intake_fan: intake_fan
    interface: interface
    interior: interior
    mass_flow_inlet: mass_flow_inlet
    mass_flow_outlet: mass_flow_outlet
    network: network
    network_end: network_end
    outflow: outflow
    outlet_vent: outlet_vent
    overset: overset
    periodic: periodic
    porous_jump: porous_jump
    pressure_far_field: pressure_far_field
    pressure_inlet: pressure_inlet
    pressure_outlet: pressure_outlet
    radiator: radiator
    rans_les_interface: rans_les_interface
    recirculation_inlet: recirculation_inlet
    recirculation_outlet: recirculation_outlet
    shadow: shadow
    symmetry: symmetry
    velocity_inlet: velocity_inlet
    wall: wall
    return_type: str
class area(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class compute_1(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class compute(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    compute: compute_1
    return_type: str
class depth(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class density_1(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class enthalpy(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class length_val(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pressure(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class temperature_1(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class yplus(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class velocity(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class viscosity_1(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class list_val(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class reference_values(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    area: area
    compute: compute
    depth: depth
    density: density_1
    enthalpy: enthalpy
    length_val: length_val
    pressure: pressure
    temperature: temperature_1
    yplus: yplus
    velocity: velocity
    viscosity: viscosity_1
    list_val: list_val
    return_type: str
class setup(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    general: general
    models: models
    materials: materials
    cell_zone_conditions: cell_zone_conditions
    boundary_conditions: boundary_conditions
    reference_values: reference_values
    return_type: str
class under_relaxation_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class explicit_relaxation_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class expert(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    under_relaxation_factor: under_relaxation_factor
    explicit_relaxation_factor: explicit_relaxation_factor
    return_type: str
class relative_convergence_criterion(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_iterations_per_timestep(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class acoustics_wave_equation_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    expert: expert
    relative_convergence_criterion: relative_convergence_criterion
    max_iterations_per_timestep: max_iterations_per_timestep
    return_type: str
class cycle_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class termination_criteria(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class residual_reduction_tolerance(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class stabilization(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class multi_grid_controls_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    cycle_type: cycle_type
    termination_criteria: termination_criteria
    residual_reduction_tolerance: residual_reduction_tolerance
    method: method
    stabilization: stabilization
    return_type: str
class multi_grid_controls(NamedObject[multi_grid_controls_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: multi_grid_controls_child
    return_type: str
class pre_sweeps(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class post_sweeps(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_cycle(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fixed_cycle_parameters(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    pre_sweeps: pre_sweeps
    post_sweeps: post_sweeps
    max_cycle: max_cycle
    return_type: str
class max_coarse_levels(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coarsen_by_interval(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class conservative_coarsening(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class aggressive_coarsening(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class laplace_coarsening(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coarsening_parameters(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    max_coarse_levels: max_coarse_levels
    coarsen_by_interval: coarsen_by_interval
    conservative_coarsening: conservative_coarsening
    aggressive_coarsening: aggressive_coarsening
    laplace_coarsening: laplace_coarsening
    return_type: str
class smoother_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class scalar_parameters(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    fixed_cycle_parameters: fixed_cycle_parameters
    coarsening_parameters: coarsening_parameters
    smoother_type: smoother_type
    return_type: str
class pre_sweeps_1(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class post_sweeps_1(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_cycle_1(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fixed_cycle_parameters_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    pre_sweeps: pre_sweeps_1
    post_sweeps: post_sweeps_1
    max_cycle: max_cycle_1
    return_type: str
class max_coarse_levels_1(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coarsen_by_interval_1(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class aggressive_coarsening_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coarsening_parameters_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    max_coarse_levels: max_coarse_levels_1
    coarsen_by_interval: coarsen_by_interval_1
    conservative_coarsening: conservative_coarsening
    aggressive_coarsening: aggressive_coarsening_1
    laplace_coarsening: laplace_coarsening
    return_type: str
class smoother_type_1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coupled_parameters(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    fixed_cycle_parameters: fixed_cycle_parameters_1
    coarsening_parameters: coarsening_parameters_1
    smoother_type: smoother_type_1
    return_type: str
class max_fine_relaxations(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_coarse_relaxations(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class flexible_cycle_paramters(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    max_fine_relaxations: max_fine_relaxations
    max_coarse_relaxations: max_coarse_relaxations
    return_type: str
class verbosity(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class options_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    verbosity: verbosity
    return_type: str
class algebric_mg_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    scalar_parameters: scalar_parameters
    coupled_parameters: coupled_parameters
    flexible_cycle_paramters: flexible_cycle_paramters
    options: options_1
    return_type: str
class pre_sweeps_2(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class post_sweeps_2(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fixed_cycle_parameters_2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    pre_sweeps: pre_sweeps_2
    post_sweeps: post_sweeps_2
    return_type: str
class max_coarse_levels_2(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coarsen_by_interval_2(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coarsening_parameters_2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    max_coarse_levels: max_coarse_levels_2
    coarsen_by_interval: coarsen_by_interval_2
    return_type: str
class courant_number_reduction(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class correction_reduction(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class correction_smoothing(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class species_correction_reduction(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class relaxation_factor_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    courant_number_reduction: courant_number_reduction
    correction_reduction: correction_reduction
    correction_smoothing: correction_smoothing
    species_correction_reduction: species_correction_reduction
    return_type: str
class fas_mg_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    fixed_cycle_parameters: fixed_cycle_parameters_2
    coarsening_parameters: coarsening_parameters_2
    relaxation_factor: relaxation_factor_1
    options: options_1
    return_type: str
class enable_gpu(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class term_criterion(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solver_1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_num_cycle(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coarsen_by_size(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pre_sweep(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class post_sweep(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class smoother(String):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class amg_gpgpu_options_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enable_gpu: enable_gpu
    term_criterion: term_criterion
    solver: solver_1
    max_num_cycle: max_num_cycle
    coarsen_by_size: coarsen_by_size
    pre_sweep: pre_sweep
    post_sweep: post_sweep
    smoother: smoother
    return_type: str
class amg_gpgpu_options(NamedObject[amg_gpgpu_options_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: amg_gpgpu_options_child
    return_type: str
class multi_grid(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    multi_grid_controls: multi_grid_controls
    algebric_mg_controls: algebric_mg_controls
    fas_mg_controls: fas_mg_controls
    amg_gpgpu_options: amg_gpgpu_options
    return_type: str
class coefficient(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dissipation(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class viscous_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class multi_stage_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    coefficient: coefficient
    dissipation: dissipation
    viscous: viscous_1
    return_type: str
class multi_stage(ListObject[multi_stage_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: multi_stage_child
    return_type: str
class limiter_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cell_to_limiting(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class limiter_filter(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class spatial_discretization_limiter(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    limiter_type: limiter_type
    cell_to_limiting: cell_to_limiting
    limiter_filter: limiter_filter
    return_type: str
class expert_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    spatial_discretization_limiter: spatial_discretization_limiter
    return_type: str
class two_stage_runge_kutta(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class default_multi_stage_runge_kutta(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rk2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    two_stage_runge_kutta: two_stage_runge_kutta
    default_multi_stage_runge_kutta: default_multi_stage_runge_kutta
    return_type: str
class fast_transient_settings(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    rk2: rk2
    return_type: str
class relaxation_method(String):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class correction_tolerance_child(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class correction_tolerance(NamedObject[correction_tolerance_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: correction_tolerance_child
    return_type: str
class advanced(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    multi_grid: multi_grid
    multi_stage: multi_stage
    expert: expert_1
    fast_transient_settings: fast_transient_settings
    relaxation_method: relaxation_method
    correction_tolerance: correction_tolerance
    return_type: str
class solution_stabilization(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class verbosity_1(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class iterations(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solution_stabilization_persistence(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class persistence_fixed_time_steps(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class persistence_fixed_duration(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class extrapolation_method(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class parameters(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    iterations: iterations
    solution_stabilization_persistence: solution_stabilization_persistence
    persistence_fixed_time_steps: persistence_fixed_time_steps
    persistence_fixed_duration: persistence_fixed_duration
    extrapolation_method: extrapolation_method
    return_type: str
class first_to_second_order_blending(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class first_to_second_order_blending_list(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class scheme(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class flow_skew_diffusion_exclude(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class scalars_skew_diffusion_exclude(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rhie_chow_flux_specify(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rhie_chow_method(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class spatial(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    first_to_second_order_blending: first_to_second_order_blending
    first_to_second_order_blending_list: first_to_second_order_blending_list
    scheme: scheme
    flow_skew_diffusion_exclude: flow_skew_diffusion_exclude
    scalars_skew_diffusion_exclude: scalars_skew_diffusion_exclude
    rhie_chow_flux_specify: rhie_chow_flux_specify
    rhie_chow_method: rhie_chow_method
    return_type: str
class transient_parameters_specify(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class transient_scheme(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class time_scale_modification_method(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class time_scale_modification_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class transient(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    transient_parameters_specify: transient_parameters_specify
    transient_scheme: transient_scheme
    time_scale_modification_method: time_scale_modification_method
    time_scale_modification_factor: time_scale_modification_factor
    return_type: str
class enforce_laplace_coarsening(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class increase_pre_sweeps(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pre_sweeps_3(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class specify_coarsening_rate(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coarsen_rate(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class amg(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enforce_laplace_coarsening: enforce_laplace_coarsening
    increase_pre_sweeps: increase_pre_sweeps
    pre_sweeps: pre_sweeps_3
    specify_coarsening_rate: specify_coarsening_rate
    coarsen_rate: coarsen_rate
    return_type: str
class model_ramping(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ramp_flow(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ramp_turbulence(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ramp_scalars(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class models_2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    model_ramping: model_ramping
    ramp_flow: ramp_flow
    ramp_turbulence: ramp_turbulence
    ramp_scalars: ramp_scalars
    return_type: str
class pressure_velocity_coupling_controls(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pressure_velocity_coupling_method(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class gradient_controls(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class specify_gradient_method(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class methods_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    pressure_velocity_coupling_controls: pressure_velocity_coupling_controls
    pressure_velocity_coupling_method: pressure_velocity_coupling_method
    gradient_controls: gradient_controls
    specify_gradient_method: specify_gradient_method
    return_type: str
class compute_statistics(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class statistics_level(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class miscellaneous(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    compute_statistics: compute_statistics
    statistics_level: statistics_level
    return_type: str
class contact_solution_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    solution_stabilization: solution_stabilization
    verbosity: verbosity_1
    parameters: parameters
    spatial: spatial
    transient: transient
    amg: amg
    models: models_2
    methods: methods_1
    miscellaneous: miscellaneous
    def set_settings_to_default(self):
        """
        Set contact solution stabilization to default.
        """
    return_type: str
class courant_number(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class equations_child(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class equations(NamedObject[equations_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: equations_child
    return_type: str
class pressure_max_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pressure_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class temperature_max_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class temperature_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class k_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class k1_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class des_k_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class epsilon_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class des_epsilon_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class v2f_k_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class v2f_epsilon_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class v2f_v2_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class v2f_f_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class omega_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class des_omega_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class turb_visc_max_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pos_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class matrix_solv_min_lim(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class limits(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    pressure_max_lim: pressure_max_lim
    pressure_min_lim: pressure_min_lim
    temperature_max_lim: temperature_max_lim
    temperature_min_lim: temperature_min_lim
    k_min_lim: k_min_lim
    k1_min_lim: k1_min_lim
    des_k_min_lim: des_k_min_lim
    epsilon_min_lim: epsilon_min_lim
    des_epsilon_min_lim: des_epsilon_min_lim
    v2f_k_min_lim: v2f_k_min_lim
    v2f_epsilon_min_lim: v2f_epsilon_min_lim
    v2f_v2_min_lim: v2f_v2_min_lim
    v2f_f_min_lim: v2f_f_min_lim
    omega_min_lim: omega_min_lim
    des_omega_min_lim: des_omega_min_lim
    turb_visc_max_lim: turb_visc_max_lim
    pos_lim: pos_lim
    matrix_solv_min_lim: matrix_solv_min_lim
    return_type: str
class skewness_correction_itr(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class neighbor_correction_itr(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class skewness_neighbor_coupling(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vof_correction_itr(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class explicit_momentum_under_relaxation(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class explicit_pressure_under_relaxation(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class flow_courant_number(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class volume_fraction_courant_number(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class explicit_volume_fraction_under_relaxation(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class p_v_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    skewness_correction_itr: skewness_correction_itr
    neighbor_correction_itr: neighbor_correction_itr
    skewness_neighbor_coupling: skewness_neighbor_coupling
    vof_correction_itr: vof_correction_itr
    explicit_momentum_under_relaxation: explicit_momentum_under_relaxation
    explicit_pressure_under_relaxation: explicit_pressure_under_relaxation
    flow_courant_number: flow_courant_number
    volume_fraction_courant_number: volume_fraction_courant_number
    explicit_volume_fraction_under_relaxation: explicit_volume_fraction_under_relaxation
    return_type: str
class relaxation_factor_child(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class relaxation_factor(NamedObject[relaxation_factor_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: relaxation_factor_child
    return_type: str
class set_controls_to_default(Group):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def solution_controls(self):
        """
        'solution_controls' command.
        """
    def amg_controls(self):
        """
        'amg_controls' command.
        """
    def multi_stage_parameter(self):
        """
        'multi_stage_parameter' command.
        """
    def limits(self):
        """
        'limits' command.
        """
    def reset_pseudo_time_method_generic(self):
        """
        'reset_pseudo_time_method_generic' command.
        """
    def reset_pseudo_time_method_equations(self):
        """
        'reset_pseudo_time_method_equations' command.
        """
    def reset_pseudo_time_method_relaxations(self):
        """
        'reset_pseudo_time_method_relaxations' command.
        """
    def reset_pseudo_time_method_scale_factors(self):
        """
        'reset_pseudo_time_method_scale_factors' command.
        """
    return_type: str
class under_relaxation_child(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class under_relaxation(NamedObject[under_relaxation_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: under_relaxation_child
    return_type: str
class controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    acoustics_wave_equation_controls: acoustics_wave_equation_controls
    advanced: advanced
    contact_solution_controls: contact_solution_controls
    courant_number: courant_number
    equations: equations
    limits: limits
    p_v_controls: p_v_controls
    relaxation_factor: relaxation_factor
    set_controls_to_default: set_controls_to_default
    under_relaxation: under_relaxation
    return_type: str
class accelerated_non_iterative_time_marching(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class convergence_acc_std_meshes(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class enhanced_casm_formulation(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class casm_cutoff_multiplier(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class convergence_acceleration_for_stretched_meshes(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    convergence_acc_std_meshes: convergence_acc_std_meshes
    enhanced_casm_formulation: enhanced_casm_formulation
    casm_cutoff_multiplier: casm_cutoff_multiplier
    def disable_casm(self):
        """
        'disable_casm' command.
        """
    return_type: str
class discretization_scheme_child(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class discretization_scheme(NamedObject[discretization_scheme_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: discretization_scheme_child
    return_type: str
class reactions_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class reaction_source_term_relaxation_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class implicit_bodyforce_treatment(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class physical_velocity_formulation(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class disable_rhie_chow_flux(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class presto_pressure_scheme(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class first_to_second_order_blending_1(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class alternate_diffusion_for_porous_region_solids(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class numerics(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    implicit_bodyforce_treatment: implicit_bodyforce_treatment
    velocity_formulation: velocity_formulation
    physical_velocity_formulation: physical_velocity_formulation
    disable_rhie_chow_flux: disable_rhie_chow_flux
    presto_pressure_scheme: presto_pressure_scheme
    first_to_second_order_blending: first_to_second_order_blending_1
    alternate_diffusion_for_porous_region_solids: alternate_diffusion_for_porous_region_solids
    return_type: str
class first_to_second_order_blending_dbns(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class numerics_dbns(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    first_to_second_order_blending_dbns: first_to_second_order_blending_dbns
    return_type: str
class expert_2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    reactions: reactions_1
    reaction_source_term_relaxation_factor: reaction_source_term_relaxation_factor
    numerics: numerics
    numerics_dbns: numerics_dbns
    return_type: str
class flux_type_1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dbns_cases(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    flux_type: flux_type_1
    return_type: str
class flux_auto_select(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class flux_type_2(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pbns_cases(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    flux_auto_select: flux_auto_select
    flux_type: flux_type_2
    return_type: str
class flux_type(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    dbns_cases: dbns_cases
    pbns_cases: pbns_cases
    return_type: str
class frozen_flux(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class gradient_scheme(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class enable(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class relaxation_factor_2(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class select_variables(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class relaxation_options(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class options_2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    relaxation_factor: relaxation_factor_2
    select_variables: select_variables
    relaxation_options: relaxation_options
    return_type: str
class high_order_term_relaxation(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enable: enable
    options: options_2
    return_type: str
class relative_permeability(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class porous_media(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    relative_permeability: relative_permeability
    return_type: str
class enhanced_numerics(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class alternate_bc_formulation(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class analytical_thermodynamic_derivatives(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class compressible_flow(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enhanced_numerics: enhanced_numerics
    alternate_bc_formulation: alternate_bc_formulation
    analytical_thermodynamic_derivatives: analytical_thermodynamic_derivatives
    return_type: str
class thin_film(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class liquid_vof_factor(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class boiling_parameters(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    thin_film: thin_film
    liquid_vof_factor: liquid_vof_factor
    return_type: str
class viscosity_averaging(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class turb_visc_based_damping(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class density_func_expo(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class density_ratio_cutoff(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class n_smooth_for_interfacial_regims(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class sm_relax_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class viscous_func_options(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class density_func_options(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class exponent_smoothing_func(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class exponent_density_func(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class boundry_treatment(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class near_wall_treatment_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class interfacial_artificial_viscosity(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    n_smooth_for_interfacial_regims: n_smooth_for_interfacial_regims
    sm_relax_factor: sm_relax_factor
    viscous_func_options: viscous_func_options
    density_func_options: density_func_options
    exponent_smoothing_func: exponent_smoothing_func
    exponent_density_func: exponent_density_func
    boundry_treatment: boundry_treatment
    near_wall_treatment: near_wall_treatment_1
    return_type: str
class viscous_flow(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    viscosity_averaging: viscosity_averaging
    turb_visc_based_damping: turb_visc_based_damping
    density_func_expo: density_func_expo
    density_ratio_cutoff: density_ratio_cutoff
    interfacial_artificial_viscosity: interfacial_artificial_viscosity
    return_type: str
class schnerr_evap_coeff(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class schnerr_cond_coeff(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_vapor_pressure_ratio(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class min_vapor_pressure(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class display_clipped_pressure(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class turbulent_diffusion(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class old_treatment_for_turbulent_diffusion(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cavitation(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    schnerr_evap_coeff: schnerr_evap_coeff
    schnerr_cond_coeff: schnerr_cond_coeff
    max_vapor_pressure_ratio: max_vapor_pressure_ratio
    min_vapor_pressure: min_vapor_pressure
    display_clipped_pressure: display_clipped_pressure
    turbulent_diffusion: turbulent_diffusion
    old_treatment_for_turbulent_diffusion: old_treatment_for_turbulent_diffusion
    return_type: str
class vof_from_min_limit(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vof_from_max_limit(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vof_to_min_limit(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vof_to_max_limit(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ia_norm_min_limit(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_rel_humidity(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class evaporation_condensation(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    vof_from_min_limit: vof_from_min_limit
    vof_from_max_limit: vof_from_max_limit
    vof_to_min_limit: vof_to_min_limit
    vof_to_max_limit: vof_to_max_limit
    ia_norm_min_limit: ia_norm_min_limit
    max_rel_humidity: max_rel_humidity
    return_type: str
class heat_flux_relaxation_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class show_expert_options(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class two_resistance_boiling_framework(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class boiling(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    heat_flux_relaxation_factor: heat_flux_relaxation_factor
    show_expert_options: show_expert_options
    two_resistance_boiling_framework: two_resistance_boiling_framework
    return_type: str
class vof_min_seeding(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ia_grad_sym(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class area_density_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    vof_min_seeding: vof_min_seeding
    ia_grad_sym: ia_grad_sym
    return_type: str
class alternative_energy_treatment(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class heat_mass_transfer(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    cavitation: cavitation
    evaporation_condensation: evaporation_condensation
    boiling: boiling
    area_density: area_density_1
    alternative_energy_treatment: alternative_energy_treatment
    return_type: str
class smoothed_density_stabilization_method(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class num_of_density_smoothing(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class false_time_step_linearization(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class enable_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dt_init_limit(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dt_max(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dt_factor_min(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dt_factor_max(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_velocity_ratio(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class auto_dt_advanced_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enable: enable_1
    dt_init_limit: dt_init_limit
    dt_max: dt_max
    dt_factor_min: dt_factor_min
    dt_factor_max: dt_factor_max
    max_velocity_ratio: max_velocity_ratio
    return_type: str
class pseudo_transient(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    smoothed_density_stabilization_method: smoothed_density_stabilization_method
    num_of_density_smoothing: num_of_density_smoothing
    false_time_step_linearization: false_time_step_linearization
    auto_dt_advanced_controls: auto_dt_advanced_controls
    return_type: str
class buoyancy_force_linearization(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class blended_treatment_for_buoyancy_forces(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coupled_vof(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    buoyancy_force_linearization: buoyancy_force_linearization
    blended_treatment_for_buoyancy_forces: blended_treatment_for_buoyancy_forces
    return_type: str
class low_order_rhie_chow(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rhie_chow_flux(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    low_order_rhie_chow: low_order_rhie_chow
    return_type: str
class limit_pressure_correction_gradient(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class skewness_correction(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    limit_pressure_correction_gradient: limit_pressure_correction_gradient
    return_type: str
class p_v_coupling_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    coupled_vof: coupled_vof
    rhie_chow_flux: rhie_chow_flux
    skewness_correction: skewness_correction
    return_type: str
class outer_iterations(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class initial_time_steps(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class initial_outer_iter(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class initial_outer_iterations(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    initial_time_steps: initial_time_steps
    initial_outer_iter: initial_outer_iter
    return_type: str
class enable_instability_detector(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class set_cfl_limit(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class set_cfl_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class set_velocity_limit(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class unstable_event_outer_iterations(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class instability_detector(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enable_instability_detector: enable_instability_detector
    set_cfl_limit: set_cfl_limit
    set_cfl_type: set_cfl_type
    set_velocity_limit: set_velocity_limit
    unstable_event_outer_iterations: unstable_event_outer_iterations
    return_type: str
class hybrid_nita(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    outer_iterations: outer_iterations
    initial_outer_iterations: initial_outer_iterations
    instability_detector: instability_detector
    return_type: str
class solve_flow_last(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solve_exp_vof_at_end(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class equation_order(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    solve_flow_last: solve_flow_last
    solve_exp_vof_at_end: solve_exp_vof_at_end
    return_type: str
class enable_dynamic_strength(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class set_dynamic_strength_exponent(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class set_maximum_dynamic_strength(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class anti_diffusion(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enable_dynamic_strength: enable_dynamic_strength
    set_dynamic_strength_exponent: set_dynamic_strength_exponent
    set_maximum_dynamic_strength: set_maximum_dynamic_strength
    return_type: str
class advanced_stability_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    pseudo_transient: pseudo_transient
    p_v_coupling: p_v_coupling_1
    hybrid_nita: hybrid_nita
    equation_order: equation_order
    anti_diffusion: anti_diffusion
    return_type: str
class recommended_defaults_for_existing_cases(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class old_default_of_operating_density_method(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class old_default_of_volume_fraction_smoothing(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class old_variant_of_pesto_for_cases_using_structured_mesh(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class revert_to_pre_r20_1_default_settings(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    old_default_of_operating_density_method: old_default_of_operating_density_method
    old_default_of_volume_fraction_smoothing: old_default_of_volume_fraction_smoothing
    old_variant_of_pesto_for_cases_using_structured_mesh: old_variant_of_pesto_for_cases_using_structured_mesh
    return_type: str
class default_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    recommended_defaults_for_existing_cases: recommended_defaults_for_existing_cases
    revert_to_pre_r20_1_default_settings: revert_to_pre_r20_1_default_settings
    return_type: str
class pressure_corr_grad(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class face_pressure_calculation_method(String):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class exclude_transient_term_in_face_pressure_calc(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class face_pressure_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    pressure_corr_grad: pressure_corr_grad
    face_pressure_calculation_method: face_pressure_calculation_method
    exclude_transient_term_in_face_pressure_calc: exclude_transient_term_in_face_pressure_calc
    return_type: str
class face_pressure_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    face_pressure_options: face_pressure_options
    return_type: str
class execute_settings_optimization(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class execute_advanced_stabilization(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class blended_compressive_scheme(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pseudo_transient_stabilization(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class additional_stabilization_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    blended_compressive_scheme: blended_compressive_scheme
    pseudo_transient_stabilization: pseudo_transient_stabilization
    return_type: str
class execute_additional_stability_controls(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class enable_velocity_limiting(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_vol_mag(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vol_frac_cutoff(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class set_velocity_and_vof_cutoffs_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    max_vol_mag: max_vol_mag
    vol_frac_cutoff: vol_frac_cutoff
    return_type: str
class set_velocity_and_vof_cutoffs(NamedObject[set_velocity_and_vof_cutoffs_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: set_velocity_and_vof_cutoffs_child
    return_type: str
class set_damping_strengths_child(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class set_damping_strengths(NamedObject[set_damping_strengths_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: set_damping_strengths_child
    return_type: str
class set_velocity_cutoff(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class set_damping_strength(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class verbosity_2(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class velocity_limiting_treatment(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enable_velocity_limiting: enable_velocity_limiting
    set_velocity_and_vof_cutoffs: set_velocity_and_vof_cutoffs
    set_damping_strengths: set_damping_strengths
    set_velocity_cutoff: set_velocity_cutoff
    set_damping_strength: set_damping_strength
    verbosity: verbosity_2
    return_type: str
class solution_stabilization_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    execute_settings_optimization: execute_settings_optimization
    execute_advanced_stabilization: execute_advanced_stabilization
    additional_stabilization_controls: additional_stabilization_controls
    execute_additional_stability_controls: execute_additional_stability_controls
    velocity_limiting_treatment: velocity_limiting_treatment
    return_type: str
class multiphase_numerics(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    porous_media: porous_media
    compressible_flow: compressible_flow
    boiling_parameters: boiling_parameters
    viscous_flow: viscous_flow
    heat_mass_transfer: heat_mass_transfer
    advanced_stability_controls: advanced_stability_controls
    default_controls: default_controls
    face_pressure_controls: face_pressure_controls
    solution_stabilization: solution_stabilization_1
    return_type: str
class nb_gradient(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class boundary_treatment(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class extended_boundary_treatment(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class nb_gradient_dbns(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    boundary_treatment: boundary_treatment
    extended_boundary_treatment: extended_boundary_treatment
    return_type: str
class nb_gradient_boundary_option(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    nb_gradient: nb_gradient
    nb_gradient_dbns: nb_gradient_dbns
    return_type: str
class set_verbosity(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class skewness_neighbor_coupling_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class enable_2(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class options_3(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class multi_phase_setting(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enable: enable_2
    options: options_3
    return_type: str
class single_phase_setting(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class hybrid_nita_settings(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    multi_phase_setting: multi_phase_setting
    single_phase_setting: single_phase_setting
    return_type: str
class nita_expert_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    set_verbosity: set_verbosity
    skewness_neighbor_coupling: skewness_neighbor_coupling_1
    hybrid_nita_settings: hybrid_nita_settings
    return_type: str
class noniterative_time_advance(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class high_order_pressure(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class interpolation_method(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class orphan_cell_treatment(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mass_flux_correction_method(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class hybrid_mode_selection(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class expert_3(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    mass_flux_correction_method: mass_flux_correction_method
    hybrid_mode_selection: hybrid_mode_selection
    return_type: str
class overset_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    high_order_pressure: high_order_pressure
    interpolation_method: interpolation_method
    orphan_cell_treatment: orphan_cell_treatment
    expert: expert_3
    return_type: str
class flow_scheme(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coupled_form(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solve_n_phase(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class p_v_coupling(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    flow_scheme: flow_scheme
    coupled_form: coupled_form
    solve_n_phase: solve_n_phase
    return_type: str
class phase_based_vof_discretization_child(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_based_vof_discretization(NamedObject[phase_based_vof_discretization_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: phase_based_vof_discretization_child
    return_type: str
class reduced_rank_extrapolation(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class subspace_size(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class skip_itr(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class reduced_rank_extrapolation_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    subspace_size: subspace_size
    skip_itr: skip_itr
    return_type: str
class residual_smoothing_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class residual_smoothing_iteration(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class residual_smoothing(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    residual_smoothing_factor: residual_smoothing_factor
    residual_smoothing_iteration: residual_smoothing_iteration
    return_type: str
class unsteady_1st_order(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class unsteady_2nd_order(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class unsteady_2nd_order_bounded(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class unsteady_global_time(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class high_order_rc(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class high_order_rc_hybrid_treatment(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class force_treatment_of_unsteady_rc(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class unstructured_var_presto_scheme(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class new_framework_for_vof_specific_node_based_treatment(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vof_numerics(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    high_order_rc: high_order_rc
    high_order_rc_hybrid_treatment: high_order_rc_hybrid_treatment
    force_treatment_of_unsteady_rc: force_treatment_of_unsteady_rc
    unstructured_var_presto_scheme: unstructured_var_presto_scheme
    new_framework_for_vof_specific_node_based_treatment: new_framework_for_vof_specific_node_based_treatment
    return_type: str
class enable_fast_mode(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class enable_memory_saving_mode(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class enable_3(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    enable_fast_mode: enable_fast_mode
    enable_memory_saving_mode: enable_memory_saving_mode
    def disable_warped_face_gradient_correction(self):
        """
        'disable_warped_face_gradient_correction' command.
        """
    return_type: str
class turbulence_options(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class warped_face_gradient_correction(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enable: enable_3
    turbulence_options: turbulence_options
    return_type: str
class coupled_solver(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class segregated_solver(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class density_based_solver(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class formulation(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    coupled_solver: coupled_solver
    segregated_solver: segregated_solver
    density_based_solver: density_based_solver
    return_type: str
class pseudo_time_courant_number(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pseudo_time_step_method_solid_zone(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class time_step_size_scale_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class local_time_step_settings(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    pseudo_time_courant_number: pseudo_time_courant_number
    pseudo_time_step_method_solid_zone: pseudo_time_step_method_solid_zone
    time_step_size_scale_factor: time_step_size_scale_factor
    return_type: str
class auto_time_step_size_cal(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pseudo_time_step_size(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class options_length_scale_calc_methods(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class auto_time_step_size_scale_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class length_scale(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class auto_time_size_calc_solid_zone(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class auto_time_solid_scale_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class time_step_size_for_solid_zone(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class global_time_step_settings(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    auto_time_step_size_cal: auto_time_step_size_cal
    pseudo_time_step_size: pseudo_time_step_size
    options_length_scale_calc_methods: options_length_scale_calc_methods
    auto_time_step_size_scale_factor: auto_time_step_size_scale_factor
    length_scale: length_scale
    auto_time_size_calc_solid_zone: auto_time_size_calc_solid_zone
    auto_time_solid_scale_factor: auto_time_solid_scale_factor
    time_step_size_for_solid_zone: time_step_size_for_solid_zone
    return_type: str
class enable_pseudo_time_method(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pseudo_time_scale_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class implicit_under_relaxation_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class local_dt_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enable_pseudo_time_method: enable_pseudo_time_method
    pseudo_time_scale_factor: pseudo_time_scale_factor
    implicit_under_relaxation_factor: implicit_under_relaxation_factor
    return_type: str
class local_dt(NamedObject[local_dt_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: local_dt_child
    return_type: str
class global_dt_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enable_pseudo_time_method: enable_pseudo_time_method
    pseudo_time_scale_factor: pseudo_time_scale_factor
    implicit_under_relaxation_factor: implicit_under_relaxation_factor
    return_type: str
class global_dt(NamedObject[global_dt_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: global_dt_child
    return_type: str
class advanced_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    local_dt: local_dt
    global_dt: global_dt
    return_type: str
class local_dt_dualts_relax_child(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class local_dt_dualts_relax(NamedObject[local_dt_dualts_relax_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: local_dt_dualts_relax_child
    return_type: str
class global_dt_pseudo_relax_child(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class global_dt_pseudo_relax(NamedObject[global_dt_pseudo_relax_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: global_dt_pseudo_relax_child
    return_type: str
class relaxation_factors(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    local_dt_dualts_relax: local_dt_dualts_relax
    global_dt_pseudo_relax: global_dt_pseudo_relax
    return_type: str
class verbosity_3(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pseudo_time_method(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    formulation: formulation
    local_time_step_settings: local_time_step_settings
    global_time_step_settings: global_time_step_settings
    advanced_options: advanced_options
    relaxation_factors: relaxation_factors
    verbosity: verbosity_3
    return_type: str
class methods(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    accelerated_non_iterative_time_marching: accelerated_non_iterative_time_marching
    convergence_acceleration_for_stretched_meshes: convergence_acceleration_for_stretched_meshes
    discretization_scheme: discretization_scheme
    expert: expert_2
    flux_type: flux_type
    frozen_flux: frozen_flux
    gradient_scheme: gradient_scheme
    high_order_term_relaxation: high_order_term_relaxation
    multiphase_numerics: multiphase_numerics
    nb_gradient_boundary_option: nb_gradient_boundary_option
    nita_expert_controls: nita_expert_controls
    noniterative_time_advance: noniterative_time_advance
    overset: overset_1
    p_v_coupling: p_v_coupling
    phase_based_vof_discretization: phase_based_vof_discretization
    reduced_rank_extrapolation: reduced_rank_extrapolation
    reduced_rank_extrapolation_options: reduced_rank_extrapolation_options
    residual_smoothing: residual_smoothing
    unsteady_1st_order: unsteady_1st_order
    unsteady_2nd_order: unsteady_2nd_order
    unsteady_2nd_order_bounded: unsteady_2nd_order_bounded
    unsteady_global_time: unsteady_global_time
    vof_numerics: vof_numerics
    warped_face_gradient_correction: warped_face_gradient_correction
    pseudo_time_method: pseudo_time_method
    def set_solution_methods_to_default(self):
        """
        'set_solution_methods_to_default' command.
        """
    return_type: str
class zone_ids(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class retain_instantaneous_values(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class old_props(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class zone_names(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class average_over(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class per_zone(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mesh_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    zone_ids: zone_ids
    retain_instantaneous_values: retain_instantaneous_values
    old_props: old_props
    zone_names: zone_names
    zone_list: zone_list
    average_over: average_over
    per_zone: per_zone
    return_type: str
class mesh(NamedObject[mesh_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: mesh_child
    return_type: str
class custom_vector(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class field(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class surfaces(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class geometry_1(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class physics(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class report_type(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class phase_25(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class per_surface(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class surface_names(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class surface_ids(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class surface_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    custom_vector: custom_vector
    field: field
    surfaces: surfaces
    geometry: geometry_1
    physics: physics
    retain_instantaneous_values: retain_instantaneous_values
    report_type: report_type
    phase: phase_25
    average_over: average_over
    per_surface: per_surface
    old_props: old_props
    surface_names: surface_names
    surface_ids: surface_ids
    return_type: str
class surface(NamedObject[surface_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: surface_child
    return_type: str
class expr_list(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class volume_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geometry: geometry_1
    physics: physics
    field: field
    retain_instantaneous_values: retain_instantaneous_values
    report_type: report_type
    phase: phase_25
    average_over: average_over
    per_zone: per_zone
    old_props: old_props
    zone_names: zone_names
    expr_list: expr_list
    zone_list: zone_list
    return_type: str
class volume(NamedObject[volume_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: volume_child
    return_type: str
class scaled(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class thread_names(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class thread_ids(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class reference_frame(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class force_vector(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class force_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    retain_instantaneous_values: retain_instantaneous_values
    scaled: scaled
    report_type: report_type
    average_over: average_over
    per_zone: per_zone
    thread_names: thread_names
    thread_ids: thread_ids
    old_props: old_props
    reference_frame: reference_frame
    force_vector: force_vector
    return_type: str
class force(NamedObject[force_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: force_child
    return_type: str
class lift_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geometry: geometry_1
    physics: physics
    retain_instantaneous_values: retain_instantaneous_values
    scaled: scaled
    report_type: report_type
    average_over: average_over
    per_zone: per_zone
    thread_names: thread_names
    thread_ids: thread_ids
    old_props: old_props
    reference_frame: reference_frame
    force_vector: force_vector
    return_type: str
class lift(NamedObject[lift_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: lift_child
    return_type: str
class drag_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geometry: geometry_1
    physics: physics
    retain_instantaneous_values: retain_instantaneous_values
    scaled: scaled
    report_type: report_type
    average_over: average_over
    per_zone: per_zone
    thread_names: thread_names
    thread_ids: thread_ids
    old_props: old_props
    reference_frame: reference_frame
    force_vector: force_vector
    return_type: str
class drag(NamedObject[drag_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: drag_child
    return_type: str
class mom_axis(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mom_center(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class moment_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    retain_instantaneous_values: retain_instantaneous_values
    scaled: scaled
    report_type: report_type
    average_over: average_over
    per_zone: per_zone
    thread_names: thread_names
    thread_ids: thread_ids
    old_props: old_props
    reference_frame: reference_frame
    mom_axis: mom_axis
    mom_center: mom_center
    return_type: str
class moment(NamedObject[moment_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: moment_child
    return_type: str
class flux_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    geometry: geometry_1
    physics: physics
    retain_instantaneous_values: retain_instantaneous_values
    report_type: report_type
    phase: phase_25
    average_over: average_over
    per_zone: per_zone
    old_props: old_props
    zone_names: zone_names
    zone_ids: zone_ids
    return_type: str
class flux(NamedObject[flux_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: flux_child
    return_type: str
class injection_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class injection(NamedObject[injection_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: injection_child
    return_type: str
class input_params(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class function_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class user_defined_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    retain_instantaneous_values: retain_instantaneous_values
    input_params: input_params
    function_name: function_name
    average_over: average_over
    old_props: old_props
    return_type: str
class user_defined(NamedObject[user_defined_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: user_defined_child
    return_type: str
class normalization(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class integrate_over(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class aeromechanics_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    normalization: normalization
    integrate_over: integrate_over
    report_type: report_type
    average_over: average_over
    per_zone: per_zone
    old_props: old_props
    thread_names: thread_names
    thread_ids: thread_ids
    return_type: str
class aeromechanics(NamedObject[aeromechanics_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: aeromechanics_child
    return_type: str
class list_valid_report_names(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class define(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class expr_value(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class expression_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    list_valid_report_names: list_valid_report_names
    define: define
    expr_value: expr_value
    average_over: average_over
    old_props: old_props
    return_type: str
class expression(NamedObject[expression_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: expression_child
    return_type: str
class custom_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class custom(NamedObject[custom_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: custom_child
    return_type: str
class report_definitions(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    mesh: mesh
    surface: surface
    volume: volume
    force: force
    lift: lift
    drag: drag
    moment: moment
    flux: flux
    injection: injection
    user_defined: user_defined
    aeromechanics: aeromechanics
    expression: expression
    custom: custom
    def compute(self, report_defs: list[str]):
        """
        'compute' command.
        """
    return_type: str
class fmg_initialize(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class enabled_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class turbulent_intensity(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class turbulent_viscosity_ratio(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class localized_turb_init(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enabled: enabled_1
    turbulent_intensity: turbulent_intensity
    turbulent_viscosity_ratio: turbulent_viscosity_ratio
    return_type: str
class reference_frame_1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class viscous_terms(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class species_reactions(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class set_turbulent_viscosity_ratio(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fmg_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    viscous_terms: viscous_terms
    species_reactions: species_reactions
    set_turbulent_viscosity_ratio: set_turbulent_viscosity_ratio
    return_type: str
class number_of_iterations(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class explicit_urf(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class initial_pressure(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class external_aero(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class const_velocity(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class general_settings(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    number_of_iterations: number_of_iterations
    explicit_urf: explicit_urf
    reference_frame: reference_frame_1
    initial_pressure: initial_pressure
    external_aero: external_aero
    const_velocity: const_velocity
    return_type: str
class averaged_turbulent_parameters(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class viscosity_ratio_1(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class turbulent_setting(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    averaged_turbulent_parameters: averaged_turbulent_parameters
    turbulent_intensity: turbulent_intensity
    viscosity_ratio: viscosity_ratio_1
    return_type: str
class set_hybrid_init_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    general_settings: general_settings
    turbulent_setting: turbulent_setting
    return_type: str
class patch_reconstructed_interface(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class use_volumetric_smoothing(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class smoothing_relaxation_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vof_smooth_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    patch_reconstructed_interface: patch_reconstructed_interface
    use_volumetric_smoothing: use_volumetric_smoothing
    smoothing_relaxation_factor: smoothing_relaxation_factor
    def execute_smoothing(self):
        """
        Execute volumetric smoothing for volume fraction.
        """
    return_type: str
class patch(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    vof_smooth_options: vof_smooth_options
    return_type: str
class initialization(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    fmg_initialize: fmg_initialize
    localized_turb_init: localized_turb_init
    reference_frame: reference_frame_1
    fmg_options: fmg_options
    set_hybrid_init_options: set_hybrid_init_options
    patch: patch
    def standard_initialize(self):
        """
        Initialize the flow field with the current default values.
        """
    def hybrid_initialize(self):
        """
        Initialize using the hybrid initialization method.
        """
    def dpm_reset(self):
        """
        Reset discrete phase source terms to zero.
        """
    def lwf_reset(self):
        """
        Delete wall film particles and initialize wall film variables to zero.
        """
    def init_flow_statistics(self):
        """
        Initialize statistics.
        """
    def init_acoustics_options(self, set_ramping_length: bool, number_of_timesteps: int):
        """
        'init_acoustics_options' command.
        """
    return_type: str
class enabled_2(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class user_defined_timestep(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class error_tolerance(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class time_end(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class min_time_step(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_time_step(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class min_step_change_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_step_change_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fixed_time_steps(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class adaptive_time_stepping(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enabled: enabled_2
    user_defined_timestep: user_defined_timestep
    error_tolerance: error_tolerance
    time_end: time_end
    min_time_step: min_time_step
    max_time_step: max_time_step
    min_step_change_factor: min_step_change_factor
    max_step_change_factor: max_step_change_factor
    fixed_time_steps: fixed_time_steps
    return_type: str
class enalbled(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class desired_cfl(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class initial_time_step(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_fixed_time_step(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class update_interval_time_step_size(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cfl_based_adaptive_time_stepping(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enalbled: enalbled
    user_defined_timestep: user_defined_timestep
    desired_cfl: desired_cfl
    time_end: time_end
    initial_time_step: initial_time_step
    max_fixed_time_step: max_fixed_time_step
    update_interval_time_step_size: update_interval_time_step_size
    min_time_step: min_time_step
    max_time_step: max_time_step
    min_step_change_factor: min_step_change_factor
    max_step_change_factor: max_step_change_factor
    return_type: str
class data_sampling_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class sampling_interval(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class statistics_shear_stress(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class statistics_heat_flux(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wall_statistics(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class force_statistics(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class time_statistics_dpm(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class species_list(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class statistics_mixture_fraction(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class statistics_reaction_progress(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class save_cff_unsteady_statistics(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class data_sampling(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    data_sampling: data_sampling_1
    sampling_interval: sampling_interval
    statistics_shear_stress: statistics_shear_stress
    statistics_heat_flux: statistics_heat_flux
    wall_statistics: wall_statistics
    force_statistics: force_statistics
    time_statistics_dpm: time_statistics_dpm
    species_list: species_list
    statistics_mixture_fraction: statistics_mixture_fraction
    statistics_reaction_progress: statistics_reaction_progress
    save_cff_unsteady_statistics: save_cff_unsteady_statistics
    def setup_unsteady_statistics(self, udf_cf_names: list[str]):
        """
        'setup_unsteady_statistics' command.
        """
    return_type: str
class specified_time_step(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class incremental_time(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_iterations_per_time_step(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class number_of_time_steps(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class total_number_of_time_steps(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class total_time(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class time_step_size(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class solution_status(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class extrapolate_vars(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_flow_time(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class control_time_step_size_variation(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class use_average_cfl(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cfl_type(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class courant_number_1(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class initial_time_step_size(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fixed_time_step_size(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class min_time_step_size(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_time_step_size(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class update_interval(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class cfl_based_time_stepping(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    courant_number: courant_number_1
    initial_time_step_size: initial_time_step_size
    fixed_time_step_size: fixed_time_step_size
    min_time_step_size: min_time_step_size
    max_time_step_size: max_time_step_size
    min_step_change_factor: min_step_change_factor
    max_step_change_factor: max_step_change_factor
    update_interval: update_interval
    return_type: str
class error_tolerance_1(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class error_based_time_stepping(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    error_tolerance: error_tolerance_1
    initial_time_step_size: initial_time_step_size
    fixed_time_step_size: fixed_time_step_size
    min_time_step_size: min_time_step_size
    max_time_step_size: max_time_step_size
    min_step_change_factor: min_step_change_factor
    max_step_change_factor: max_step_change_factor
    update_interval: update_interval
    return_type: str
class undo_timestep(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class predict_next(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class rotating_mesh_flow_predictor(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class global_courant_number(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mp_specific_time_stepping(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enabled: enabled_2
    global_courant_number: global_courant_number
    initial_time_step_size: initial_time_step_size
    fixed_time_step_size: fixed_time_step_size
    min_time_step_size: min_time_step_size
    max_time_step_size: max_time_step_size
    min_step_change_factor: min_step_change_factor
    max_step_change_factor: max_step_change_factor
    update_interval: update_interval
    return_type: str
class udf_hook(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class transient_controls(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    type: type_1
    method: method
    specified_time_step: specified_time_step
    incremental_time: incremental_time
    max_iterations_per_time_step: max_iterations_per_time_step
    number_of_time_steps: number_of_time_steps
    total_number_of_time_steps: total_number_of_time_steps
    total_time: total_time
    time_step_size: time_step_size
    solution_status: solution_status
    extrapolate_vars: extrapolate_vars
    max_flow_time: max_flow_time
    control_time_step_size_variation: control_time_step_size_variation
    use_average_cfl: use_average_cfl
    cfl_type: cfl_type
    cfl_based_time_stepping: cfl_based_time_stepping
    error_based_time_stepping: error_based_time_stepping
    undo_timestep: undo_timestep
    predict_next: predict_next
    rotating_mesh_flow_predictor: rotating_mesh_flow_predictor
    mp_specific_time_stepping: mp_specific_time_stepping
    udf_hook: udf_hook
    return_type: str
class run_calculation(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    adaptive_time_stepping: adaptive_time_stepping
    cfl_based_adaptive_time_stepping: cfl_based_adaptive_time_stepping
    data_sampling: data_sampling
    transient_controls: transient_controls
    def dual_time_iterate(self, number_of_total_periods: int, number_of_time_steps: int, total_number_of_time_steps: int, total_time: float | str, incremental_time: float | str, max_iteration_per_step: int, postprocess: bool, num_of_post_iter_per_timestep: int):
        """
        Perform unsteady iterations.
        
        Parameters
        ----------
            number_of_total_periods : int
                Number of total periods.
            number_of_time_steps : int
                Inceremtal number of Time steps.
            total_number_of_time_steps : int
                Total number of Time steps.
            total_time : real
                Total Simulation Time.
            incremental_time : real
                Incremental Time.
            max_iteration_per_step : int
                Maximum Number of iterations per time step.
            postprocess : bool
                Enable/Disable Postprocess pollutant solution?.
            num_of_post_iter_per_timestep : int
                Number of post-processing iterations per time step.
        """
    def iterate(self, number_of_iterations: int):
        """
        Perform a specified number of iterations.
        
        Parameters
        ----------
            number_of_iterations : int
                Inceremtal number of Time steps.
        """
    return_type: str
class solution(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    controls: controls
    methods: methods
    report_definitions: report_definitions
    initialization: initialization
    run_calculation: run_calculation
    return_type: str
class nodes(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class edges(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class faces(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class partitions(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class overset_2(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class gap(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class options_4(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    nodes: nodes
    edges: edges
    faces: faces
    partitions: partitions
    overset: overset_2
    gap: gap
    return_type: str
class all(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class feature_angle(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class feature(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    feature_angle: feature_angle
    return_type: str
class outline(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class edge_type(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    all: all
    feature: feature
    outline: outline
    return_type: str
class shrink_factor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class surfaces_list(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class type_2(Group):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class id(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class normal(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class partition(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class automatic(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    type: type_2
    id: id
    normal: normal
    partition: partition
    return_type: str
class faces_1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class edges_1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class nodes_1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class material_color(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class manual(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    faces: faces_1
    edges: edges_1
    nodes: nodes_1
    material_color: material_color
    return_type: str
class coloring(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    automatic: automatic
    manual: manual
    return_type: str
class display_state_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mesh_1_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    name: name
    options: options_4
    edge_type: edge_type
    shrink_factor: shrink_factor
    surfaces_list: surfaces_list
    coloring: coloring
    display_state_name: display_state_name
    physics: physics
    geometry: geometry_1
    surfaces: surfaces
    def display(self):
        """
        'display' command.
        """
    return_type: str
class mesh_1(NamedObject[mesh_1_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def display(self, object_name: str):
        """
        'display' command.
        """
    child_object_type: mesh_1_child
    return_type: str
class filled(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class boundary_values(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class contour_lines(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class node_values(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class global_range(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class auto_range_on(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    global_range: global_range
    return_type: str
class clip_to_range(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class auto_range_off(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    clip_to_range: clip_to_range
    minimum: minimum
    maximum: maximum
    return_type: str
class range_option(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    auto_range_on: auto_range_on
    auto_range_off: auto_range_off
    return_type: str
class smooth(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class banded(Group):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coloring_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    smooth: smooth
    banded: banded
    return_type: str
class visible(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class size(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class color(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class log_scale(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class format(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class user_skip(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class show_all(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class position(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class font_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class font_automatic(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class font_size(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class length(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class width(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class color_map(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    visible: visible
    size: size
    color: color
    log_scale: log_scale
    format: format
    user_skip: user_skip
    show_all: show_all
    position: position
    font_name: font_name
    font_automatic: font_automatic
    font_size: font_size
    length: length
    width: width
    return_type: str
class draw_mesh(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class mesh_object(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class contour_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    name: name
    field: field
    filled: filled
    boundary_values: boundary_values
    contour_lines: contour_lines
    node_values: node_values
    surfaces_list: surfaces_list
    range_option: range_option
    coloring: coloring_1
    color_map: color_map
    draw_mesh: draw_mesh
    mesh_object: mesh_object
    display_state_name: display_state_name
    physics: physics
    geometry: geometry_1
    surfaces: surfaces
    def display(self):
        """
        'display' command.
        """
    return_type: str
class contour(NamedObject[contour_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def display(self, object_name: str):
        """
        'display' command.
        """
    child_object_type: contour_child
    return_type: str
class vector_field(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class auto_scale(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class scale_f(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class scale(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    auto_scale: auto_scale
    scale_f: scale_f
    return_type: str
class style(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class skip(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class in_plane(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class fixed_length(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class x_comp(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class y_comp(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class z_comp(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class scale_head(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vector_opt(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    in_plane: in_plane
    fixed_length: fixed_length
    x_comp: x_comp
    y_comp: y_comp
    z_comp: z_comp
    scale_head: scale_head
    color: color
    return_type: str
class vector_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    name: name
    field: field
    vector_field: vector_field
    surfaces_list: surfaces_list
    scale: scale
    style: style
    skip: skip
    vector_opt: vector_opt
    range_option: range_option
    color_map: color_map
    draw_mesh: draw_mesh
    mesh_object: mesh_object
    display_state_name: display_state_name
    physics: physics
    geometry: geometry_1
    surfaces: surfaces
    def display(self):
        """
        'display' command.
        """
    return_type: str
class vector(NamedObject[vector_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def display(self, object_name: str):
        """
        'display' command.
        """
    child_object_type: vector_child
    return_type: str
class uid(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class oil_flow(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class reverse(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class node_values_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class relative_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class options_5(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    oil_flow: oil_flow
    reverse: reverse
    node_values: node_values_1
    relative: relative_1
    return_type: str
class auto_range(Group):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class min_value(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class max_value(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class clip_to_range_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    min_value: min_value
    max_value: max_value
    return_type: str
class range(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    auto_range: auto_range
    clip_to_range: clip_to_range_1
    return_type: str
class line_width(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class arrow_space(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class arrow_scale(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class marker_size(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class sphere_size(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class sphere_lod(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class radius(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class scalefactor(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ribbon(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    field: field
    scalefactor: scalefactor
    return_type: str
class style_attribute(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    style: style
    line_width: line_width
    arrow_space: arrow_space
    arrow_scale: arrow_scale
    marker_size: marker_size
    sphere_size: sphere_size
    sphere_lod: sphere_lod
    radius: radius
    ribbon: ribbon
    return_type: str
class step_size(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class tolerance(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class accuracy_control(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    step_size: step_size
    tolerance: tolerance
    return_type: str
class x_axis_function(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class plot(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    x_axis_function: x_axis_function
    enabled: enabled_2
    return_type: str
class step(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class coarsen(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class onzone(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class velocity_domain(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class pathlines_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    name: name
    uid: uid
    options: options_5
    range: range
    style_attribute: style_attribute
    accuracy_control: accuracy_control
    plot: plot
    step: step
    skip: skip
    coarsen: coarsen
    onzone: onzone
    field: field
    surfaces_list: surfaces_list
    velocity_domain: velocity_domain
    color_map: color_map
    draw_mesh: draw_mesh
    mesh_object: mesh_object
    display_state_name: display_state_name
    physics: physics
    geometry: geometry_1
    surfaces: surfaces
    def display(self):
        """
        'display' command.
        """
    return_type: str
class pathlines(NamedObject[pathlines_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def display(self, object_name: str):
        """
        'display' command.
        """
    child_object_type: pathlines_child
    return_type: str
class options_6(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    node_values: node_values_1
    return_type: str
class inside(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class outside(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class options_7(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    inside: inside
    outside: outside
    return_type: str
class filter_minimum(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class filter_maximum(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class filter_settings(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    field: field
    options: options_7
    enabled: enabled_2
    filter_minimum: filter_minimum
    filter_maximum: filter_maximum
    return_type: str
class ribbon_settings(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    field: field
    scalefactor: scalefactor
    return_type: str
class scale_1(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class diameter(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class constant_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    diameter: diameter
    return_type: str
class size_by(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class variable(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    size_by: size_by
    range: range
    return_type: str
class options_8(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant: constant_1
    variable: variable
    return_type: str
class sphere_settings(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    scale: scale_1
    sphere_lod: sphere_lod
    options: options_8
    return_type: str
class style_attribute_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    style: style
    line_width: line_width
    arrow_space: arrow_space
    arrow_scale: arrow_scale
    marker_size: marker_size
    sphere_size: sphere_size
    sphere_lod: sphere_lod
    radius: radius
    ribbon_settings: ribbon_settings
    sphere_settings: sphere_settings
    return_type: str
class constant_length(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class variable_length(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vector_length(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    option: option
    constant_length: constant_length
    variable_length: variable_length
    return_type: str
class constant_color(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enabled: enabled_2
    color: color
    return_type: str
class vector_of(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class length_to_head_ratio(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class vector_settings(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    style: style
    vector_length: vector_length
    constant_color: constant_color
    vector_of: vector_of
    scale: scale_1
    length_to_head_ratio: length_to_head_ratio
    return_type: str
class stream_id(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class track_single_particle_stream(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    enabled: enabled_2
    stream_id: stream_id
    return_type: str
class injections_list(StringList, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class free_stream_particles(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class wall_film_particles(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class track_pdf_particles(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class particle_tracks_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    name: name
    uid: uid
    options: options_6
    filter_settings: filter_settings
    range: range
    style_attribute: style_attribute_1
    vector_settings: vector_settings
    plot: plot
    track_single_particle_stream: track_single_particle_stream
    skip: skip
    coarsen: coarsen
    field: field
    injections_list: injections_list
    free_stream_particles: free_stream_particles
    wall_film_particles: wall_film_particles
    track_pdf_particles: track_pdf_particles
    color_map: color_map
    draw_mesh: draw_mesh
    mesh_object: mesh_object
    display_state_name: display_state_name
    def display(self):
        """
        'display' command.
        """
    return_type: str
class particle_tracks(NamedObject[particle_tracks_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def display(self, object_name: str):
        """
        'display' command.
        """
    child_object_type: particle_tracks_child
    return_type: str
class lic_color_by_field(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class lic_color(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class lic_oriented(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class lic_normalize(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class lic_pixel_interpolation(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class lic_max_steps(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class texture_spacing(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class texture_size(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class lic_intensity_factor(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class lic_image_filter(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class lic_intensity_alpha(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class lic_fast(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class gray_scale(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class image_to_display(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class lic_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    name: name
    field: field
    vector_field: vector_field
    surfaces_list: surfaces_list
    lic_color_by_field: lic_color_by_field
    lic_color: lic_color
    lic_oriented: lic_oriented
    lic_normalize: lic_normalize
    lic_pixel_interpolation: lic_pixel_interpolation
    lic_max_steps: lic_max_steps
    texture_spacing: texture_spacing
    texture_size: texture_size
    lic_intensity_factor: lic_intensity_factor
    lic_image_filter: lic_image_filter
    lic_intensity_alpha: lic_intensity_alpha
    lic_fast: lic_fast
    gray_scale: gray_scale
    image_to_display: image_to_display
    range_option: range_option
    color_map: color_map
    draw_mesh: draw_mesh
    mesh_object: mesh_object
    display_state_name: display_state_name
    def display(self):
        """
        'display' command.
        """
    return_type: str
class lic(NamedObject[lic_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def display(self, object_name: str):
        """
        'display' command.
        """
    child_object_type: lic_child
    return_type: str
class color_mode(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class invert_background(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class hardcopy_format(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class hardcopy_options(String):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class window_dump_cmd(String):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class post_format(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class driver_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    hardcopy_format: hardcopy_format
    hardcopy_options: hardcopy_options
    window_dump_cmd: window_dump_cmd
    post_format: post_format
    def current_driver(self):
        """
        'current_driver' command.
        """
    return_type: str
class standard_resolution(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class jpeg_hardcopy_quality(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class landscape(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class x_resolution(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class y_resolution(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dpi(Integer):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class use_window_resolution(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class picture_options(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    color_mode: color_mode
    invert_background: invert_background
    driver_options: driver_options
    standard_resolution: standard_resolution
    jpeg_hardcopy_quality: jpeg_hardcopy_quality
    landscape: landscape
    x_resolution: x_resolution
    y_resolution: y_resolution
    dpi: dpi
    use_window_resolution: use_window_resolution
    def list_color_mode(self):
        """
        'list_color_mode' command.
        """
    def preview(self):
        """
        Display a preview image of a hardcopy.
        """
    return_type: str
class camera(Group):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def dolly(self, right: float | str, up: float | str, in_: float | str):
        """
        Adjust the camera position and target.
        
        Parameters
        ----------
            right : real
                'right' child.
            up : real
                'up' child.
            in_ : real
                'in' child.
        """
    def field(self, width: float | str, height: float | str):
        """
        Set the field of view (width and height).
        
        Parameters
        ----------
            width : real
                'width' child.
            height : real
                'height' child.
        """
    def orbit(self, right: float | str, up: float | str):
        """
        Adjust the camera position without modifying the target.
        
        Parameters
        ----------
            right : real
                'right' child.
            up : real
                'up' child.
        """
    def pan(self, right: float | str, up: float | str):
        """
        Adjust the camera position without modifying the position.
        
        Parameters
        ----------
            right : real
                'right' child.
            up : real
                'up' child.
        """
    def position(self, xyz: list[float | str]):
        """
        Set the camera position.
        
        Parameters
        ----------
            xyz : List
                'xyz' child.
        """
    def projection(self, type: str):
        """
        Set the camera projection.
        
        Parameters
        ----------
            type : str
                'type' child.
        """
    def roll(self, counter_clockwise: float | str):
        """
        Adjust the camera up-vector.
        
        Parameters
        ----------
            counter_clockwise : real
                'counter_clockwise' child.
        """
    def target(self, xyz: list[float | str]):
        """
        Set the point to be the center of the camera view.
        
        Parameters
        ----------
            xyz : List
                'xyz' child.
        """
    def up_vector(self, xyz: list[float | str]):
        """
        Set the camera up-vector.
        
        Parameters
        ----------
            xyz : List
                'xyz' child.
        """
    def zoom(self, factor: float | str):
        """
        Adjust the camera field of view.
        
        Parameters
        ----------
            factor : real
                'factor' child.
        """
    return_type: str
class front_faces_transparent(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class projection_1(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class axes(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class ruler(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class title(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class boundary_marker(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class anti_aliasing(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class reflections(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class static_shadows(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class dynamic_shadows(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class grid_plane(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class headlights(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class lighting(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class view_name(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class display_states_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    front_faces_transparent: front_faces_transparent
    projection: projection_1
    axes: axes
    ruler: ruler
    title: title
    boundary_marker: boundary_marker
    anti_aliasing: anti_aliasing
    reflections: reflections
    static_shadows: static_shadows
    dynamic_shadows: dynamic_shadows
    grid_plane: grid_plane
    headlights: headlights
    lighting: lighting
    view_name: view_name
    return_type: str
class display_states(NamedObject[display_states_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def list(self):
        """
        'list' command.
        """
    def use_active(self, state_name: str):
        """
        'use_active' command.
        """
    def restore_state(self, state_name: str):
        """
        Apply a display state to the active window.
        
        Parameters
        ----------
            state_name : str
                'state_name' child.
        """
    def copy(self, state_name: str):
        """
        Create a new display state with settings copied from an existing display state.
        
        Parameters
        ----------
            state_name : str
                'state_name' child.
        """
    def read(self, file_name: str):
        """
        Read display states from a file.
        
        Parameters
        ----------
            file_name : str
                'file_name' child.
        """
    def write(self, file_name: str, state_name: list[str]):
        """
        Write display states to a file.
        
        Parameters
        ----------
            file_name : str
                'file_name' child.
            state_name : List
                'state_name' child.
        """
    child_object_type: display_states_child
    return_type: str
class views(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    command_names: list[str]
    picture_options: picture_options
    camera: camera
    display_states: display_states
    def save_picture(self, file_name: str):
        """
        'save_picture' command.
        """
    def auto_scale(self):
        """
        'auto_scale' command.
        """
    def reset_to_default_view(self):
        """
        Reset view to front and center.
        """
    def delete_view(self, view_name: str):
        """
        Remove a view from the list.
        
        Parameters
        ----------
            view_name : str
                'view_name' child.
        """
    def last_view(self):
        """
        Return to the camera position before the last manipulation.
        """
    def next_view(self):
        """
        Return to the camera position after the current position in the stack.
        """
    def restore_view(self, view_name: str):
        """
        Use a saved view.
        
        Parameters
        ----------
            view_name : str
                'view_name' child.
        """
    def read_views(self, filename: str):
        """
        Read views from a view file.
        
        Parameters
        ----------
            filename : str
                'filename' child.
        """
    def save_view(self, view_name: str):
        """
        Save the current view to the view list.
        
        Parameters
        ----------
            view_name : str
                'view_name' child.
        """
    def write_views(self, file_name: str, view_list: list[str]):
        """
        Write selected views to a view file.
        
        Parameters
        ----------
            file_name : str
                'file_name' child.
            view_list : List
                'view_list' child.
        """
    return_type: str
class graphics(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    mesh: mesh_1
    contour: contour
    vector: vector
    pathlines: pathlines
    particle_tracks: particle_tracks
    lic: lic
    views: views
    return_type: str
class methods_2(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class x(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class y(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class z(Real):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class point_vector(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class point_normal(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class compute_from_view_plane(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class surface_aligned_normal(String, AllowedValuesMixin):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class p0_1(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class p1(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class p2(RealList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class bounded(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class sample_point(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class edges_2(IntegerList):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class plane_surface_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    methods: methods_2
    x: x
    y: y
    z: z
    point_vector: point_vector
    point_normal: point_normal
    compute_from_view_plane: compute_from_view_plane
    surface_aligned_normal: surface_aligned_normal
    p0: p0_1
    p1: p1
    p2: p2
    bounded: bounded
    sample_point: sample_point
    edges: edges_2
    return_type: str
class plane_surface(NamedObject[plane_surface_child]):
    _version: str
    fluent_name: str
    _python_name: str
    child_object_type: plane_surface_child
    return_type: str
class surfaces_1(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    plane_surface: plane_surface
    return_type: str
class results(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    graphics: graphics
    surfaces: surfaces_1
    return_type: str
class input_parameters(Map):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class output_parameters(Map):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class write_data_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class capture_simulation_report_data_1(Boolean):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class design_points_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    input_parameters: input_parameters
    output_parameters: output_parameters
    write_data: write_data_1
    capture_simulation_report_data: capture_simulation_report_data_1
    return_type: str
class design_points(NamedObject[design_points_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def create_1(self, write_data: bool, capture_simulation_report_data: bool):
        """
        Add new Design Point.
        
        Parameters
        ----------
            write_data : bool
                'write_data' child.
            capture_simulation_report_data : bool
                'capture_simulation_report_data' child.
        """
    def duplicate(self, design_point: str):
        """
        Duplicate Design Point.
        
        Parameters
        ----------
            design_point : str
                'design_point' child.
        """
    def load_case_data(self):
        """
        Loads relevant case/data file for current design point.
        """
    def delete_design_points(self, design_points: list[str]):
        """
        Delete Design Points.
        
        Parameters
        ----------
            design_points : List
                'design_points' child.
        """
    def save_journals(self, separate_journals: bool):
        """
        Save Journals.
        
        Parameters
        ----------
            separate_journals : bool
                'separate_journals' child.
        """
    def clear_generated_data(self, design_points: list[str]):
        """
        Clear Generated Data.
        
        Parameters
        ----------
            design_points : List
                'design_points' child.
        """
    def update_current(self):
        """
        Update Current Design Point.
        """
    def update_all(self):
        """
        Update All Design Point.
        """
    def update_selected(self, design_points: list[str]):
        """
        Update Selected Design Points.
        
        Parameters
        ----------
            design_points : List
                'design_points' child.
        """
    child_object_type: design_points_child
    return_type: str
class current_design_point(String):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class parametric_studies_child(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    design_points: design_points
    current_design_point: current_design_point
    return_type: str
class parametric_studies(NamedObject[parametric_studies_child]):
    _version: str
    fluent_name: str
    _python_name: str
    command_names: list[str]
    def initialize(self, project_filename: str):
        """
        Start Parametric Study.
        
        Parameters
        ----------
            project_filename : str
                'project_filename' child.
        """
    def duplicate(self, copy_design_points: bool):
        """
        Duplicate Parametric Study.
        
        Parameters
        ----------
            copy_design_points : bool
                'copy_design_points' child.
        """
    def set_as_current(self, study_name: str):
        """
        Set As Current Study.
        
        Parameters
        ----------
            study_name : str
                'study_name' child.
        """
    def use_base_data(self):
        """
        Use Base Data.
        """
    def export_design_table(self, filepath: str):
        """
        Export Design Point Table.
        
        Parameters
        ----------
            filepath : str
                'filepath' child.
        """
    def import_design_table(self, filepath: str, delete_existing: bool):
        """
        Import Design Point Table.
        
        Parameters
        ----------
            filepath : str
                'filepath' child.
            delete_existing : bool
                'delete_existing' child.
        """
    child_object_type: parametric_studies_child
    return_type: str
class current_parametric_study(String):
    _version: str
    fluent_name: str
    _python_name: str
    return_type: str
class root(Group):
    _version: str
    fluent_name: str
    _python_name: str
    child_names: list[str]
    file: file
    setup: setup
    solution: solution
    results: results
    parametric_studies: parametric_studies
    current_parametric_study: current_parametric_study
    return_type: str
